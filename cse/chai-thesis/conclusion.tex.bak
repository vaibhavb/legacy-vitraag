\chapter{Conclusion and Future Work}
\chai \ provides an environment to experiment with interface
modules and game semantics. A developer can make use of algorithms
present in \chai \ to develop new verification algorithms or use
the existing algorithms to verify the designs. For instance \chai\
provides a host of BDD based algorithms to find the predecessor
and post regions on a set of states and compute a set of reachable
states for error detection. This facility is currently being used
for development of error detection algorithms in DVLAB
\cite{dvlab}.

The streamlined path for using hardware description languages
within \chai\ makes plethora of designs coded in high level
languages like Verilog available for verification research with
{\chai}. At DVLAB \cite{dvlab} a host publicly available hardware
designs coded in Verilog are used as test suites for development
of \textbf{early error-detection algorithms}. Thus, {\chai}
accelerates and promotes application and validation of
verification research on proven industry designs.

We are working towards a comprehensive manual for \chai\ and
releasing a stable version. Future work would essentially comprise
of supporting {\chai}, maintaining {\mvrm}, streamlining the input
language and integrating proven compositional verification
research and methodologies back in to the \chai\ code-base.




% Are you nuts to write this in a thesis? Luca
%% As {\chai} is a tool in continuous research and development we expect
%% to fix a lot of bugs.
