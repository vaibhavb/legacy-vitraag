%!PS-Adobe-2.0
%%Creator: dvips(k) 5.90a Copyright 2002 Radical Eye Software
%%CreationDate: Fri Nov 07 22:22:01 2003
%%Pages: 55
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMR12 CMBX12 CMR10 CMBX10 CMCSC10 CMSY10 CMTT10 CMTI10
%%+ CMMI10 CMEX10 CMMI8 CMSY8 CMR8 LCIRCLE10 CMTT8
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: "c:\Program Files\texmf\miktex\bin\dvips.exe" -f
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2003.11.07:2221
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 36 /dollar put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 64 /at put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 123 /braceleft put
dup 124 /bar put
dup 125 /braceright put
dup 126 /asciitilde put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueID 5000832 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DA
726405EFE420635B5B7F0B48752C06083E92BDE06401C42A2C528C8A60381227
CEBEF0C9440DC034DAD9C19FB27DB399BDAEE22053591D6538587C768C1B7B0B
7D1E222D2D8AF3A6473CC4C0D6C3E0DB49068CEB8BFAA3D4CB5E17327404D6A8
35514F62BD91BFC544B0737A68BFC54A736725B36BE17CC207CFEA9BCCD99371
A25DB99128916AA1DAAD7DD6598606E9EEF40A8F77445B4EB2D06863E25F1C68
4CB74AF692A0823E49F9BA0D1797F89585DAB88E81AE9C4C1597CE9412777572
C58F3ABECE2A9638BA0ABD3540C82EF615D89D17212B3A39173CC1AFCDF3D521
593487BDD4CD96EEEAA809372D0F7C78CACBB5CA0311FCE14D3380696274A47D
BF1B6DCE47FBBC3F15E7CD87E28C5E210EF650C261A160E6B246FC932C830E2B
CB814E44F8CA81AE36C26A10A056F7023DE37EB83EF8A0B38BFE257FAB7BFC5F
E4ACA6A493180E0EE19BD8A6E0129935A715EE18C7DD40EAAA6FD066E8B2DA55
80C4472D6BE8EAA7A12A0904403382F61847A3CF2D1127A2A7DF82C117FDB9A8
03FC69D507D310D6489729B81F5F86D76E590699BC2902CC78AB111665E8C41C
CFA316372F4AB254FCE15A968BCDACFA93162B3D7FFE6285298CBBAC78BBA0A1
777E607724B5CF48766E2356CB3A6E40D137665BF5D479EFE9226655DFB5240E
4242739C4749DDCDC5C2E90E5691FFA12C9310378776327490DCDD067EB12A19
BFE57C46E0DCBA4171EA645516FDB1ED037C26D367D4558858D0F9D5524A58AD
33FD7DE85147A6541B21341FADB662EED910A99FFF420D394588881EF3502D26
4D4F1236BF90478D841538D06B21D38ADF5DD16C9803CE8A52E09A5D93D56875
0046F6031E11953A7B17D211E29E3F949F0338DB92FCC991DFF2A561FE026C27
A87C9D8EB396FF3C96CB0A54CFE423353CB2B42C8F37D87DCC31279CD27DDA52
E78C18338384664993FF104911F513D97B22FF9FDDE57561D5E44A09608D91E0
65D219AFC7822F4F46DC00FD5F6535EACC3AB0A5B4CDE69F1BC5F0CCE6E07123
8D58392D5A0FF401EC3C3EDFBC64FC993AE9ACB91AD68B733022300997D65FDC
FD3F95148800730153B1064BCE189AF5507D1602680EB1A784C9501C1C4FB433
7F8C4F03651C0FBB074CCDCD90581DDD153636CA3C27196F5BA62AD494D22C9F
97D05F81249D187115CFB3C5001B81CDB8722CCFCA34D7529C13D82311D1176A
BFF1FEE550AC1FA9A61BE0C0FACBB0A2F2B44F8F9341EE44FB384CDF418EDD43
CE342AEB959027A8B91C59A3AAF9BE91B613FDEA069CFB4CA1DE2F11E40C11AC
641232BEE91C6D972A37A4020E41EDAF0FC2C4B31ADF6D8A9ED792FD564720C9
2E1B803970312B29E0421951675C9A72BA0BF65EAE1C7EE682D1AC4415566837
28106C5883B5C1594827428A59A0CD105D154F50EA6871A398F1ECF3E3182551
35CA65674C78087DFA1FE3592D88931FE55B4EE2256DFB8F2092CAC71E4977A6
A0E87BFAE73D5FD2602A405B931C73F8DE2D04140238898468DD88D8928747C4
16BE392ADE42D55FD6A883F4CB91949A7636806677B1CE7507E490148FDC9FC0
058B2A7402A90B6EE3B039D0BF26B22E277B693DFDEC763968ED32ABCE212E3A
7882F986B5DDEA9A3613521E3BBB7C39BF479960A37B37B6B1E3BBAEDC0DD964
3BCCD19D2F0824A3E1B3356FBDAC10C27762BA9CBFE60BF77B2E882BBD4E96B9
0FFFA8846A2D832D1046596EA0CFA441AA78297531CEF72027C323963542BE77
0BBB719946A0CAC88637F33FE81C892DB3098D9D213C2FABF1CDD057F19BA95B
C0782E8F73C641CE8014B17AE46FDB970BD1C6C8568B1BE7560731D69264E7C6
B01BA1E931FFFFF4C8D28A44BF4CAE35F003D127815667FA44F3BE0F680180B9
CB698C66D6E88FDADE8C643CB03B91D55B6B67DA3F02042616E80F34CF15105E
5C71C212F983563BB0EC9532D4FFE583E8BDD9909E01832F65D32066714BE956
804F19943F6AF6BDF5547A4DEF2C8373982A40DD87E81C1D8D64A174AD8C71F1
1080D874883152512093D14735BD62D26D45C562BD42672286E7BCA38C47EDAD
268894E7F19420B203E1DD8C99EC0452EA4654636923DDD24F9CDDED9468EEFA
4FED95F53E0C498B2D9841D1A8C392DD4B11742B5697916CB803096848C011F4
397AA810B9F80D97CCD7D2FD635911F65A7F6D66598D04D448FF9BDA2417434A
A53E9477D369DFE32D3C2FD50157AFF71F728873EEB0D5DEBD2EC053AA50772E
4A4157FFC833DF45C46A7199A452B05EA77651952398458F34EACA51C10963D9
0C2FD793E70D9F4E247928641D6ED721FF8A4A94A224AE561E518B5A3CA11347
537620295A3B9E64EA8D9B9BF4F3E4FCACB8514D40286C23F3A1BC82D51DE715
B0BE5002E4EFCA8BA6FC4C7C891C5CC962C420257C0F69D4BCFAB4DDF6D9C486
C89678D5E1F6949FEE52B628DB7FF713932A03F878098FC4B4F641AB978C99AB
52CD213911A83F6B2808E342A14B832672690900C559273D864FC2E437C30C46
92E3C2CEABDC0EF2A5EC9D977ED487C9668853BBC4607E4EE66E7AA95EA9A83C
7349934E06A8EDEF8702CF239E770FC9930B16A3136430AAF18E847AA9BD828F
3501CA8404066E1D440E9F24AEA1F3FD50338F80416B4D38B511A4AF8A65F59F
26C567B76CA23B32E485FED9BD5717403B429F9651C3AC64499A1992A2A1A811
668BC8240032F29F0F12E5FE759CA167F8638CC3BD20FDCED09E9B3E47CD5E0D
B6A4EECC4112E29EABE140070CD92C321DB8F6551EB1189DCF90201DD3663038
362D2669673FF9F6180AAA11AE4A19DAE41E687098574FE74A1601F3377A574C
1DB9247FDBB98889985A3E4C0187921C1CD8E8242452F00C26699DEED4E3A42D
42E894CCDD8EF05F3DA5921FB6B75325365FCFDB86979C0632FDC7CCF2F18C45
2F7FD92A3C9A958053A1D8F9D28B098942064C4EFCA6DA8999B2BE3D9B525FA4
0A3C69BD8B8288E3E9FEF1387DC28BEBFBD4238B052CF29FDCA6C2C2283BCC63
D15D0B6324D1E6A7F0CE97172488A38F552FD42BDD56D74B84B412123575B033
CF5FB05FC9F81B3BF7080C1A2EBCB5FD0A5DB048CDEDFBC854DF973B1772AEB6
37D847C6D118AB7A398F81F533655F38B7A8F9026C2582F91AD3AD361BE2C7DC
3C81B52CC27B17E296F6F266DD3ECF412F1722A31ADD62F122B15F838B9EA1C4
78405D37F134E60FC48ED13A78452A5CCB80E0B9F1A0BDF7783E15A3D9F0954E
DC62B6F4C4F0AD8A6DCE84327146F5E496A2FE1540EED80FBA58BE19FD410567
C9CCA9F28F163A9326F6BFF92A2FB745E5F26556495E82B0961789EDD87D6344
DCA27E31FFED06A2E9C897FC1F4C0A1BCB7B578E36E6A51ED853C5CE24D43132
E2D07774293F34F56F1E0603E9BCC3C77633E9052112191DC7102610A6CBC46D
D510F4C7DAFBFDE9B8C4A2BC5053C01A53919904AB3E7E3281E7AA9A20E4F544
AD2CE3404E085C881DD78C420649FEC5AA46CCDD2FDA51D994B42B6740619436
D8792289974BA71BCCC6FE9C27622626E74EECC028B1E7CC3FDF7D48425195B1
DD9C7EB7175798959AA46E79F19913F69C3A382FCB0899AF9A945537507629AF
70A0E6464B63728375D5BF36F573CDCBD7EA739EA8873DD9B134E7985EC93ABE
6FAAC252117545BA1AF32D9E364D017E0F459DD2F6A2622EC34878DF6B3D94A7
8BA6CA2E0A7127AC023C08783477FB5ACF51EC80B9D9265832EBBBDD2811ADC1
AC3E00ACF810B6A6A7B88CE04ED0ECFCC44BA0CD588C5BAE04443E7BAB6D3607
B8870BBBB7A0D6DA32FDE530E9D3B15DA5D51EA55D30E08F169D9387887710B3
AD2FFBFC9A5A789A0E7E9EDF5D4162DC58D06B2B949A15734E7C670068CA64BE
3C1BC92938319957696349CE96A669A930AC40BD3954FF11323B2D436B9DA16F
198A1261F6E479216CBAC12402EBB0D86977AF6E206CC5B20426115FDD12083F
4689770AC3692075129DB6B2C353E229ADB1DC5702A48634CD612484C85B7308
E17287B45BBCC5B7CCEE09D3C8921B91C5B3F96FC5CC02115D9B7FB298A94B89
1E5FAB54CC352A256DAD2C066B0E09A431FFC840AAFF2CFF9752E1E8843DBDD1
A674ED95FD9BCF8A2F869AD5BAC7D4BB46089B88D0FCB2F41597326452806CE3
987318D837D4F7285A76724F570632A97CA0214F20A58CBCC92BEF30C86732C0
DB84C1ED50A416B435FA8153E23DD7AA65F162279DBD3369EC7C565ED18A9804
FB11E136D6E62B1347D1520C35453A4F3B1B5B82D1F1CFDD94D96B24A56B4714
397E9E5A26EB5515CED0E887783FA81B56C9FE8036E3726695F385D0578E8010
64A1EFDC481C58081D06E20AD10250DDB7F036A04AB2C6EB162E4426A9F9221B
B89349B61FB6FB0501FAFDD60621832585F2DB0AB5B9B7204DECB4FAE85D10C0
E1EF944397A08B3363EA8CAD355318532F3FE2647021F504C632E48BEA5514EE
9B3061D7A7E4B23A181194E47CF3C875EE50681620DFE2CCDF23F0536A88522C
8A441FE97A482EB46D06A31E0D697FD0E4009A313E59A70E27F454197BB83692
9CE1611D14128B4692686C2FCA856E6935209548C9B5DCC2287E413198C90600
88FC5D4C55D4DF234878878F5C543507FB2B095A1DE37B73A36E2E0FD6D90FF6
2BE7A24DE1BEE4A2784DFBB8F2C1D40D8A88E73CFFAD876533B3E325B638F871
794A7EC4DD97E3959276EB952D8AE28032605BD1D6BD33AA066848478E716194
72115E0E1A8A1C937B959F58DED805AB73C8465B3B5A90059070EB0DEF09B1B3
F89E1CD9AAA5CB0608B538492DE374276DE68EECE9CF1701D67B51D9413D6858
9D104F138DBB3B9583491C6BCDCED63C8A08CAAFF1848BF1FEFCB20E74CEA246
F1D8F15CB9298BF3509FAC2947AA672256DA0B30749A9DDFDDE14AAAC4C68C33
EAE0009704AFFFA98CB45E50E0F68819CA307F33DEC904D1180E90AABF3D1BA1
03BDB2C991E3341520857725A0136F7D9C3FD47D2DD16C4E3265C5264F9DC513
2A8B17CDA91989C77398ACA07538C6CFCA8C76A983382CC1195834B2ACB808D5
9422D90DDC6F8F18AF3AA7DE85715248D20E9FA33A4BBBE4D23E84425BFE3AEC
3C3C953C6AD56E098E83933A76BFDCDE1F22955B836CED9782581332B7366337
860C0AF94C5D104C50519BD2D84A52C13E51D3AD47E764AC171C19E29276308C
2DE9C03C6B4189CABBA330BB564020C1846EFB0B90F3613C05FFD8CC1869371F
5B7F3D9A8277298276AF817A2B0445491C0300306EA114B8EF76434346832849
4C983602C0674BB82C032D7460A48E0DE3CB10FAB36A3D8AF81B6CACC1FB7F21
9CD960DE3DC295D36E5D5F8B8B7E00A29533C5523B94509401DB44AC15EB3F71
3602C516B2DD450127924CC2E940DDE4F221EDAAA5E2A685500DB07F8441A606
E84F709FD97E85453F235124BC5D40EC8B64A48267466A216B44919EE0290ED9
7BCC850CD47FE9BC4C0857DE1E7AED3FFF844887DE672037232E9ACFE9C5E9A1
771E49EC8B4C0796E8ED66AB9952E04F4AEC3C3777C8A63AF8B8A5180379B085
09C7ED997FA470F7250D0BF8DE3CC6A6E9A484EBDA25D88C8FC02D67F326B816
306BB0D4198AA7E13144F2D5B0289EF07E6FDEC1FDD513F271AD991FF8622B7C
DA87B185368EC177CD379E47254F6CFD8404D4CC29B342375BD5907E57C274F1
EFAEA7A75EAC9F491A5CFEBC86C19E48FCBA2C1FC2CFC9DC0246EEBCBBCE893F
BAED127C7DC67008D0A19608C22C7D0EEE6A103DA262F18258FA1CECCC22DDBD
C47498D5C16966DF8B54A29B7B1AEB4A3F006D12BF1B6C8AA75C5833C334BFB4
93869DB1295985DB79DBFBAE7429DE33784C84FAAD54DDE65C407BD7DC45A298
46AAE85AAA16CAAF10BE6CD55F111D85A5BE0F39F39205D46861326FDED8D7A6
EB2C99C0065D5D5948644F397CAF98C80EB8BB6B3E3F854E230D17E2763DFED7
2A8024E591C3DDE6EF4CEA5DB7C86985B092BFC71E7AF44D14C6B9D0422B382E
E539D830CFBF3C671F70B3D6F899DF38628FC881392D563DF3349AD8D35BABE4
221590700FEDA412E126B4CCE00838EF72D991A374D4F9D37D01EF716DBC4698
5F35DE2D102E0853404B82F9949F4D3D6522CA0E6A73E018337FF6243EB5F8E5
9D23A82BA80E9822F2B3FDDD8864C84F37FA0E576B915E8ED19AE27213916156
3B69EFF195F3C16355A340BCA63AE135C9AA500E7C64340168B1B78A84DC1B8B
BCE79ECEAD89481E5188E70C341F23ADFF150A73785170CC9BD951D0B219FA71
BC560395785EF55FEFAB265E945DD0193224C2EA1B353B8A425B37DA9AA17FA9
A4F14CD6189A343CE1A25F082D49F18405D3559247D13065D652B35DEB3299DF
51B1D5DAB2C03BE925175993BFB49B603915D14CA7D91494F13A44C77EEA746D
73ED41E451B7037B66FB4D562C1A8CDC8A1CF78B8D4DE52430466B360209AD89
892EE0AAA822010CE37481FC849F094665D593514316B42B13FC68ED49F3EFF5
786AF5B344C0F19B6231D167E0D478FD8A754E6E51BB2ABA8D807961257D83FA
95D6BEA36964BA9063B4AB9DEA3A0B6CA686613D50A18AFD814959C38B0699C2
D7F06E12820ECA45712A14519B0669A6E7EA310C84C058B3163D34F835E29644
4D84082020EA9E0119C270DE3FFF94637BE8C441FE04F20C9424BE0A511054B7
85BF2F74D937F054DE8AD83889063BFA9BBCA6C892C2058C55BDFDDA640F0F62
CE495B87FDC668C23ED6A414205527ED98438B8DD65096BF244E2D61B14A16E8
E424DE13A0E9D888EE08FE929C3D806161156F37A9E0D4182DDAA4700E38FDB2
8E505B18ED42D5F8669F83976A824F3AF406DA74BB745BC2712883D15D9E8F01
DDFA513926B659CCE80059471324DB48FFD8C0335C408F6AC1EE13953C72F391
899C4C083F4BD0C58D87A99F5EADEFE5392300AE3C05963BFAC96043B3192356
AA0569FAB4A18D401F239067AB07744572A38B01059C8002BDA7539110A9AAD6
8406FD8B3D8DB660CE9D3383F769363E1FEC7FE9B51DF7495EB4D59773CB96EE
D84434F9DC1D54C852F6C0889898F1BC7524EE4B21DE9138258C8E7830EF83D4
0B8BB2F1DEFB45D5E8972B4CE24CCBB0DADE4A522A12B7535388B56FFCF0EC4E
BD379A22C9CC75E38E7BB50BE8AA258DA3BA7A923E7CB09511AACBBE08D3077E
C2FA7B691D7AB3CC535DE5E0869192052DFF546E70EC8A008DF041288A8EA0C2
F5E1B2FBFBBF565B61B0051F056E612B201DA0A439CD0703704858FA8C77E258
CD76F4AEB6A4A49CAD0507200B7C7188581CBF263D93C57388FB4D37CFEEB6D5
71673DB90CBC96100864879763BE8B1E7B0D5BC427D0A72422E191D6DD6E0378
E31BC5BD9BA527135BEFCEB39C8D9237613BC003E2DB441B048CBAA752EEB5BC
2332CBA4D7775500E0CA8F6DF7C9A36952BA8DBD7090D63F48C1F84335998226
46450442A867789B21B7809AA5723BC4105987FE9A103908684A5E7AC305D6A5
8015C3BEDE3D46D57D9D431D416254EC4662BF7E1BBFD33A334E3BF8BE0E560D
92E1DC882B72D215DEB5CEBA4B8F634E3F925C23372B2A9C90BFEB9D470430C7
B33ED66C47E1B97B96AC03057121AC3117A719E625E544D552E1BA88C706753C
6E6E7202FC9C895CD3F6C5F866BB9E1C815E4EC281A4742CCBDD70C5B1258AEA
361905AA0B382744321874BAB68E3633D7759BD0877E11473D4A6CA1AB28A96D
943B959D50540C3A3873F5E927AC549260EB97AFBC49CA01FC35B1A74C9781A7
CF63D72EF6A8AC450A3D77FD74F33DA51CECF668D3952A3EA957B435E834CC6E
9F730AD9B82518A21631BCC547D2932E9786F855AA39899122D1D28108EBE08E
6C57779761622F74F065F33CCC7FB179619325E23C607FEE428C4D804AE4D5EB
EDD6D50484E9A96B8BCDD41EC359980CB0D1EC170FEF3140C58AD59B7E969911
131DDA9B75C6C1627630FF85DD9D41077A2D85EE6149208D9E015366DFBDC3EE
0C909595DD41874EE1814EE89E830EC2EA210687FA4779599E816B55B37B81DA
4A7ED6BBFD641C400DEB96E96122D011B1820F25819943CE22241D9395EE27B1
89E2FFB37B6088F1C5993996A5B633D0844A32B81799D496B2799D83AC265368
F1A2548069BA271DAE507D693E788BAEB10AB2B6FF583A945235426F258DE51B
32498964911FBB64D110B0A8BCF98611A72AD3A1ABA1236B5AC7D379231FFFA3
5B982A320D16CF590FC4DE6272F673FF1378C4D910ADF836960538A6556F027E
B6D50B6C317917C49470E0881BF224F8152283CD44707D889B40A139AB39565C
EE1A194EAAC18EABF5FB503F7B3CFF948AFB7FCF594B351154B572B8640CEB57
F78AE5DF117408D89FADFEF43094DCBB5007A18889040EB32264AA469E61916A
0CE1DFFE15E46FD2C77F50E3798113E8D6AC6D8D782FA0C79F7CB78F4EB63C31
B83D0906BD36118D082AE69A79D16C499AA6E0DB3C6D48081B09359FA4540440
E03A3C72E39C7E26D9D5E6D605E35B407AE2B4DE2ADB525FE2C548FCD80C38DE
28FBB32543EB324985A43A55AE0EDBAF1B217D63D40D8E27EEB900D1195F6208
E913E7CB375265E9907705D2A28D65FA98EE6C5E00CE603CD358E443050AD978
3AD11689B1982427422F8E597650B530E2D34AF4A9F99198A3FFBDC0227498EA
D4C7C4E1AE3332D874894533CBCE887C7B2A88E8183DC74CF172C237BE2B9C35
7D133CAF2E08125F974BF202AACF390BF1AD2B5FC1FED2FE50E427DA58A55D76
4D492E8B240DC1783BBACB7AADB122D1585F554F1544B8D70D6BD04243301FC4
BE97AE0ED0046E4C89F1B58E9D53EB2DE75ED3040FD042BB1CC9F1F3AD6354EE
288DF55F5C6E586A5EFA145555E36075F25714643DDAFE933154B3839408A45D
32FF8ED8180B3AF1340B6935D8452E67283E625CC398C878D1B3112DC8944A8F
DBF1AE8B2139A17B0A58A2D51DD11DF75F528BF1FDCCA7358C0CA07E7286FDA5
BDA8EB082A4D6B8FBCD698125E69D4AC1BD140D705C432AF9F4E39B0374321C6
69EFECF66848F5AC51DC3F4EC2DF92236A38E1AC4A774DB2E8742C5005EE3345
C2348A00D50A38BB7053662FAB1B6C7BF6D07D274B80EE537B6CE5AF40F73F1A
2FE89227E63740A7DFED29318944BE6FDEEA0FC5E3BAFC9F52AA00D9116BCA57
CFEC3D289E967D3E90BA62F8E8131125AE168950D27CB967617D017A58AF8682
6990412523FDB99D0ACDCB5E40B2EED1DFE3B060EF8105BCC105202CE2F3C913
E9E257F71F8E415F598D084DC4120D7D259069145ECAF142D6A826BE507F7E78
C438A28A0DDF1DA0EDA5AF718CB1729380517160F23DBE2436EB8D23A71E26C0
3A652CAF01C4231A57BFF437943870FE2A6D9EEDC895EE0021A495B237CB2B3A
930F320D1020DA2DEC7478A61C1D9BA1E9A357F8AF8FB5DAD7ECA37F4C60EFE7
49B4E51B754B30B212F241CFD28A86423B754D13637E2655AA47804368E1421A
34052C88B08FDA2AB6E9C40FF6F0CB1982DE64B60D565B0B7667EC6456B5903B
B37ABC6709A3ABA725230C8763C2237F38917297AC79EB7442E7F2AE871368E3
6937869018DD89F087A4D393E35C6ED12D964752F61DF2CF394B7547E61111B3
47693721630AF114BACD9C6E1D6B03330343FCCEF8F12724D2F1A984D33928EC
7B3E47CB93D76B8B2B5E035951C14B1325023F8FEB387541D801191487ECB9AC
410FB504E7A26AA2F7578DBC1B72F23A4D93E377A0B7E07EA4864C8B853929F5
196FBE39D3DECF76B8F66015E8DEA446F36DFF99E66C727D5D3F3CFA5601F5FB
2B591C424C0F4CF09B8802894C97577375DC5CAF92CA9E4CA2B184C04AED1E8E
D101DF1E6A1635C8D0AEBCB8DA5B1BE7E46148B3CEA624E43B7CB4678EAF5AF2
65CB7D49B3B86DF0661BCC6C1F8C1BE55E7E672B5BE72C09353F7B5F7B9A6ED7
D7E159D93BC85B6409DAF2C37A274162A529D50CC81F996238D5DA21CF9ACAC9
05B94E257916936DA63FDB593DC4A88B60564165F44CA84603B498204BE0EF9D
359856639FA0520E54374306EAD7B2DA96E27E57C21178EDE2A80562F61E3FF5
33B76272C7B5A8B0506AEFEEBB180DE7232E61CCC0C11261A9A49A1F0D229D75
F6125312A0BAC073144B71A21CC2ED8CBFCFDA290CF39291DA25894F08D7869C
98CE23377950CB4F07BF4A367FFD3F030A70A9DE50FC96B7249E3DCF332E0690
680A8DAA9C9C7BDF2F88A46B4251ABAE4FBBBEE7FDE4729AD5CF9967AF263DAB
BFCDA96BE1D5C5C25850C224EB793BFB1F41A132482ED84ED351019702F1F752
4B09665AE04FEF2680015F45DEB4E0A398084A23018544EDD6B967465C7BD08C
C99C250450BFD76D8164792B16726138F26B998D76B18D8ED549C46CAFCDF2F1
13D9EEA2ECE1736C4A56DCCB00A8EFFBFD47D25ECF5A8D791AD0824D5F8AB4ED
3B7DE726DB2122FBB9607EBFE87AADB114D2EE737AA5CAE09812DB7A59141881
1BB8BC8614D552956DE8E7868B04975CCF4BC66BBA6E05FD7463F5212A72582E
45C4A6A8A4104522EF02ABD6E8DD5C015FE6E775CE8A64FA88A4E6FAF04A9EC5
BE492F7A90D21396ADCF43B4425225DC1F304DE8FE102E5B57D8828E8B96C240
4C03A79F3D81650D76C46B42BE257CC1A616DCB2BDF3E5753A0CFD23FD935F8A
574F28867FAAED5D9D5A911E08DA5E50462D885F3CCE24EACE2542FE10E0EE83
E9E76CF6D9078C90BE5F791F3F7D744D7F6E8A7B55C4726BA81EE017B4D72DB7
3138435DDA8B7D649A5CA764A36B7172F30A630D26909FFB50A335FC0CB0492E
7D5EE7BF98F444E036B3E46AEF508E6814960E2E92C13F137F6C11D9AD0A51AD
C1126CA49A3161F7EA5FB5CB38111D9C1BB6A955C17B1208C80382688DEBC00A
82CC654E1A69B834536AEA0774945D88DA58CC7A69D6D3DE26342B6C62705B32
687DA26249C74281475B8A2157D6FDE1DC062E021453B613AEDE8D702AFE69A6
A634E7C0FA5ECCBEE1B2AED8B40F9556F44E610982CF29FD7D774BC1798AFC64
DFD381BA5957E40A8BE92079FE137761E7A19A577DCFB7DADDCD73999F032425
A57970203FBAB45673B9CFDBD4EF26DFB1A1DFB9CA314A6BFC467104E592D5EF
530B69A868AD1390D8812BD8C7F6168D78F2E4154638119EFA75196C9F3A0F00
3CF691C278240F8FDD15F8801F61D8DD24225A1A88CD986E639EA8690BBA0600
F24CCAD55FC91BBC7DDDE14F1F2788813B11984FF4556DF4F0BC1113FBB74BEA
D7693AFE844175AFFD92AD6469E1FC123A34E3F3645688E404A784410D221832
1F5D8D793ED814F6C541B72C902477CB7389D20147795437B3EF84EC985C904B
01CB60C3DCB16572E5DFF9D671ED29DF9A70E676F70DEEFBFA4A40EBF990F200
EC7B46010322EC4D759A44359126686317D2C0E665F5C44EB5F8AE5ABA5E62F1
0355DFA1CCF0A40B28F4987FD7252439845EF974FD691F00F19EC7F70C3E056E
E21181F84D59D36FE41B7BBEC470B8DF40DD4DC46C936251F2F9A7CA75193100
09F8538B74A029FFC59A66706375E0C89DC63610637926BEAF99FA3D7C43EA13
D9B181F28601CDFEBBC8E99E28DC8EE8B9A32BA7847669159745787C81173B9C
4F85FD5F82834CB6BAEC381055285178F583184745428B18DF5F94B384786720
4A26E9A1A95F3FEF15006BC817177878CBE6F7ABC9E82A93D1669E411C808378
496D16C8BEACC45889B342EE521BD6135FF765F11ACE34F5CA6805AC0F3EF320
EDB8C647E84608819AAF52E5843AF0ED67C923ADDED7812C93F34867C1D97770
E3C92976312684991B983029A3D96BB39A81F375204FE8C1D641E1994EFCB323
D4E9F1B39D42F14606B0BEF86CFBBEAFD0A606691CE31FBBD08410A443DDBE1C
1EA5072B0366FFA5D4B0DE3BB7B58AE3B3F01BFAE93FBA3C3241A58044CA748F
A70EFE98D9E4EC08E868D7E6216CDECA7CDD5D41A2D76DC3A84CA4708F791A52
BB1505BD657B0063A6130411797DD57398C4F3BDCBF7479497A2F76ACAF000AD
83A52A21EA0F13A4453FC3E151C7E8632A5338F1839D5E2F785BB79F3F53ADE9
B4E2B4B3C57FBEA3E6C6EDA6EF59327F2C7987199D6504B2C7150F14160C2BC7
489B4BD719C2EFFE429955C12B53F9006A0AA8BC64D826E0CFDE3CBB2E5FA4D0
73B72550DA9A713E12C7C2FE5588AA393B7F6C9F5C3C9811EE69A0F4CF8C9E5C
DAD5EF9FEFA4949902475E1B867E9A7BF469F9E7938766A861531DC194E92349
E321F2C6B89885778787E61DCFF8203A1C547BA745561DB43F7F3B8A8D794E45
C2B147967F04EE8D4E8B7912707CA2F2A565F21B3067FF21B7BEAB5E06B49C89
E8F57709DC1CF5A11FDFB1D928E7221B330AA0486937C8176DC3304615DA1941
8F2D699A2FCAF905ADA5BD5393E2B47FA4B476A4BCCF862A8D678D8C6F59B226
2770E4CFBAB9438AA187137CDF821AAF5EC2F02B231206E5FEBF3B7311AC2D35
2FE2C5105DDCA21F1958AEE8AE17398434B3CB74099C0DBB963C601565C7A9D5
D64F1C42023A54C3103D9187332C13193B7088AC5B41B89ACF74934B29161FD9
6C5F976236F4F361DEB9F93DEB38A7EB2819A9E9A139A050385E3E0E1E6D2600
902ED27E3E0F6657C6905905E7C32F5DBBF1121DD49D229670166FB77D36E00D
67C992A1AF4E65A233DC5F0C5556CF313F5EA441610D8DB1C0956AE0F6D3B38C
72733DF342B2275AC339DE7981D234564DB802BDD3BC4C60FC5B203111090A34
4EF78EC8F1C98A2EFC8199CA30C1B7B4901497B549A62F8BBA6D93C5688A4925
711307E8BD7BE7383264434049F638AA5300A928BBB2035B65576245420E49D1
6E48EB3137B97C8E51FDB6D728F9276E6571709E673B78477185DAD95EBCCD7E
4924757D5DDC5254D244E81F0AA3B4BF4F09B0CDE368F5677C055CF3C4FB5C6B
111A04C9BDE06DB7A1A7A6D9A311E0F30B156ABD50F421E64B8E70AFB2F6AF83
58CB5540D00366C31B4E1ECAA3EDB5614D64EBCD67F7E8897602A15060F23A4A
A0E35AEB66639D06BB445082B3247262049C1AD1A488A109A892E660B568A993
99723FCA2AE088B84C498AAF6031593F2250BF399CC3FFB70947EC365FF40B2C
E5212B64756006C07C2ABFCAFBA98130E717B8B57FF1EA57DEF2A40CDF874BFC
4CAC06ACBCEE7A81269C3D52A9DE1AE2E0CF95E21425E4456BAC680DA4098C79
2970194A4B1E27A0127C6632D6601BD13155F0F7B96819D572DF7A48DE316F8C
27EB07238226026979A4B261093F43C377DC667FFAE9D10A5C07CDE86FBF9006
4A200213B90AEE1BF7DEF345B3CBC161B089EEB3CD814606C4843720D1231CE1
307A851D5BA71B7201508C67B190E6E07AFB0C121163DE1EBE3D55362B199410
4FBBF4EE119BADF8C6F50A047969331E982109DF22A79EC2614651D60EF02AFF
E5561506915DD3232BD2641A9E7A0F700A0DDAD0F9EF8374A4C1F00902D0DA23
67AA421305510BD119CAA59D60F42F4CB126A32575F4991FDAEA483EB3B302D6
F5E2D11CCF540BAA08F079D50D2DF7B83C4856E5FBEAA93EE99500ABFC6DFA05
ED08DECB9B13F4B082F142EAF0A430C87BFFD23E51ACD7DC52D291691CD1E245
7B8A5A0ABA822E0372BE20A8B7AAE201A6BC546CEE593A76752045458169B7A3
7983FFA9463FF3DA7D967ADAA0C5F25C1DBEB7884732C2BF32E2AAF799E9B6A6
91DFD2059B64160853E381F63AB76A2540ADC3E5EB565BA01796A5966483C89F
06C6651829D38F661C80829D97D6ECD355C34BFF6960FEE43A1871349FE13151
49CC3D8CBEF407610E4F735ECBE9E2702736963AE1C4ABA6065F5CC432DB9CBC
F2E5DE874539B783B05F214AA0AF28E3D9806CAF80CE297FFC4FAD2D22A51315
BDECCCBE0F27EFE17E39962DEE496454E7C76A2D1CA24522AF485302C8CB707D
856E1BE962C071EDEF57B37C63E45B729A827029EA9E432C2A25C50EBE10FB24
0A13FF32079FB5948FDDD4BC7CD236FE482A35E1EFA08E847057312E339F0BDA
956AA031B69FE7D313D3EC6D726296F0979291367BE4634584EA48538395E901
598CCE39B81FA20E040DCB1D7B1E071FC8B7C979CD0D28F7567262F24CB123D3
C1C61B9CF156A322194BEB591680EF051C868BF5FB7B3E72B1417E45E2BAA75A
E8AC9AC06D52B03F6759DB59F04B8D9A0DE1D08456C79CCE92EB6A018D19C477
B920982ED5153B1BB3AC98D6426263554316F025389CF5BA619370323FA5BFA5
5590076A43E41490A338C8DBEA588A72F3478BB91BEE8D03FB62B042CC377193
C2C27395D2911C16107BA8F12A7782BC947A55D8E74FC92BC97E3FF39D3E1C2D
5084449940F7E230599D998ECC9953153DFAA2102D0469524DECA56CC7A1FB55
162C6F75DA013D673472E1FD6B3CAD0EAA6D3FF6247D774D4713B2738912CB96
1D82FC1E952095A1ED6C5EF6AE112F0F548592519F1023B179A99281DCBAEFD8
2EE258433E5A660CC7FD56AE2FB7347A574EA7AA0983385575DCF9E22ABA5D54
BC291F04EDBE28376CB46ACC570B139BA9B2FFE84149DA2CFE1DDD4D5B7037EA
68DE7256E87960262B0A10EF376994364FCB1303B33707EE08EF1615F6EED679
825BFE26EA768A7396E08554E1B6750549CB019F2D9AC087108A1306E34CFAA6
4A9FB4D8844EFF516FAE627133D3A4B6D327678BC6420E51AA29FB33C04F6376
846D2D4C19BED860160CC4C3BB0FF73CD38D577DF3603B9CB1379A337CBF3D14
444D65BB532F05A114FF9E3800517DCD8FC0E04A449A9A2C230349056A21A311
69A2EB5DF0E3A02C8CE9F1B10742695F72E088BF56F7157E65C21EB2E2359ED9
31B0E82E366AAFAF52F3E0121436D668D6DCBBED6A2D5274909CE7FFB75BB724
F1F94107A9F5464BF6F85211A19F7E50EE33950BC97AA3ED4AE0D6D06C4152A9
B821012C7BD1D48C6875FDB543764D355F221AE88BBADFE20527877AE15D02A7
A624E4C3EC75D3197CDFBDEE761F1D789653E4F9044FF9399FAEE8C7E7B6D0A2
E1E9D13690EC28C871199224A22A66BB0BC5B1EB8A63D88FE1D1DFF314938B33
2489E54D826924BF6944A4A618E1E581B1121ED0C744FC628296EFC16B6B7AAE
D173F3D5EF14F706AECC306932043730160F38C244E4558B5D43E29549FCE133
5E6658002E0224341E43E841D1D579B6EB8D1FB4B2CB9A15941C5F4922E60D9B
C609CB4C974FEEF01674D6E421C6DFF7EE7FCCD35412CCFD3E6ECEAE5951D300
BBA9F24F5D60236881947FDBADBE5A59152048EEA4333DC2A0F1DA937295097C
EDE4B38EB006A7E943676B48F05C72742CB6333941A2C2179747E6624FA5BB7E
02ADD50CFC932CA61D75A3BB8F1B8EAA03902A71CCB1C909A043019B07B1FD44
2E4D84EBB0EC985B225B73992EA2F90F1305A0678AA578E9D173EFDFB538A151
BCB6F061561AD91D1753BB25D5612DFF538C8B939217C14E3A06FC9EFC6DE84B
7A56076E1FC66BA871A6E826CB5DC60B3B739B168178AE0E04A53194E5579C0B
76304C4E287028FDF5E29B3BCFE173DA2A287F66022057E93B68315870BEF74C
B7F640DD4B9254313C0F155A75C4FB19351DB025C8CC197BBA9D8E9123532063
B8D09DA56722769A82C142B93C0D38748B94A7EC1081EBA23E9007A6C32D42D3
248E156D18C7D2F885E8CEE1FAAE5489091121F6B117DAABA643B097F4F3C05B
D7A929529EB822B63D5F48AE028B42F0CB783DBAC966D59DD9354240555F19D0
4CBEC650A1B9557392E7900E046097535359E419D7ED11AD1FF6561E0B74B85F
740C13643A7BA74A77D162361EE07A3A7E64A447329B956E0050BE510D7B7EA2
B7D67FC4974CEACF75F32894253E73D64D6F3041BCB12CE24D24604BB3A27AEB
93ECD5A39244CFC40DB97DCDD76D7632940C824D550FF347F4331D1F6AC59FF4
1625BE2FBFF1C03827F47D343F498CAF23A115CDEA96F0C12945C46CB99E33FA
FDCE2EBA3B755F217C83016B884DD5A9918AC58FF8387ACF1D273D8A601099B2
D307E4F9E0E012B9EBDF902C52C56C7EFDD11BE69837B14EF02E4385D235F477
1748D6C808188246D996520A1CC7D5D8EE46A51B5353FB2EEF21CAF46BC5F60C
57A1D14911A46EC93D068A6750A72F720C6ECA3B9CEB1946A86C8DFF0A8E99C6
40B62DB0B92006E507C4F7C4A2A9302C57095EBFF5775849206B2CA19064C461
6F72B92ED2AAD3BF0BD4CE080C5060E18A27DB2C75EC4C9AA9551F7FEDA9C0C1
A9A2963BEC9660D94D22E14945DD8DF5F12061B736A363742C78A5E8BE2ED398
E1527CC83639FAD5228D62A4C04097B0297A6066F0DB6D1DAF88A24F259952A0
54ACC206B381176689DD9BE1F29A2CC7620EB0678B9E0A09CAA2380A2272B97E
B5D3F28F8AAE4107F21D24C8AD71649A134FC0FF6BE13A8583F28795BDC2B7F8
746D41D25292F52BABB07F886BA77CECE2412BDB5DB8EE428C1A79831517DA7D
C01F08E5D0D2E1171C35093062A5E16CC1A8F8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMCSC10
%!PS-AdobeFont-1.1: CMCSC10 1.0
%%CreationDate: 1991 Aug 18 17:46:49
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMCSC10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMCSC10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 50 /two put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 82 /R put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
readonly def
/FontBBox{14 -250 1077 750}readonly def
/UniqueID 5000772 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A30EB76029337
900ECFB1390CA5C0C3A04528044F266BA17BE487C79B94FAC6D6484684C5BFEA
87BCCC77D40AD11552035E95E3007126418ED49B68468B38A14E88E68A267B98
076F1C9769A5AFBC285E5B158EAC9F926F1D6C0B8F1D57D9C31D25AE27123518
9D2CD92E5689E0213089BD268DA5E47525CB8EABAA4B78A15AEA34705889AB3A
FFB8953B5B3482E52BFA0940630ADF8C0AC2177D907324299EE980E850F203CD
B627962F43D5A678C44243CDE97853BDC6AB45FD5C09AD274DAF89929F583CC9
CCC24BDFC68B92111055ABA5F26D2DC67C70906F71C2957701D65AE746A60C30
40E6CB24B97FCDAD0487AE38A201FBF0E41BABD2181981A71940F1E707F91E5D
C8CA50CB16D8702D188E56D014D92F76CE0B52ABDB9110E32438D2BBF3E6A40B
7B005F10BB437812CAC6ED2996F7606DC962C4FDE207FF322782C343DF44CEC5
FF06A55C630C20E9AE1B0D1C5673753C43BA0767D65D1B451CC6380D8BB3C4DC
81E8FD8AA79BE993218686F29D3CD925566DD587F541A0DA1B1CC3BCEA2E6C7D
5E1016F6917A871F1BBAD96AF9E867735017119A381FCF33EB2D3E1E7093FD90
CDB0CED4818CFD9E201A03430CEC713620BE0D3254158931FB657C6AD4B2482A
0E7D070D7497892E9E942DF58E88CAF0C8221BF36BF7C435BF2C683A4A2EF4CB
E85820A8AD3486155A40143011BA9D76297F46DEF69ECA4596D6E4CAABF84091
22A96A4BC78A8DD072FEB759A68A44BE1164638B6D952147EE3C628F9A022060
1D1941E73310943FA782532ABCCC88593FD63E7E2CECF6665C04DB48D641ABD3
AE1BB468638681E96394B9E7BED1D13E534B897DB90EA6EC706BAAE06BE2FEFF
1DFA5258113E9B4CD2D36655973864574E0E8D6291E48A8C62203F679B7ED838
6F7CBD523C2943ECA994CACE604E6284655767207F252FCB5C6644D7F6401FBF
8D79104FECC4A5F3327884D3A8D79D2B064D160EF815E533299C0CD6FDB37548
CD28084E7A9E88ED6D3AC5AF0858327F007E18CAEDC111FF33B55D978BC565D2
BC393F5ADAEF0C38BDFE9CC2DBCA0F0CAFBACB70FE96E0B951F7FEA03C733C7B
AA9C3CDCA5F6DCBBD8A443C83891C0FBAA9EAEC840B68194D05B0CC703F38462
9BA3440197647ED6F77B272645805EE7552B4988721F9D548178A17F98BF4255
F74368D5757133CEFB1BBF5CFF329794F78F8C8A3AC5074378D046799C0C18DF
80ED643B5093C3F4E5C71DBDAB5B89037C38D8629EB3B3F09FAECF4C67DFBBAC
AE4B47A5028FA9157EC21594139881C2187CA049A2D732A3F4DDD17B6746410D
5FB392EAE338751F0403927C91954DD8E28623F5FA209D03CF7F30DEA1B8FA46
048CE2EBA0C7DBBF297EEF0AD66379B0EE68ACE4847EC291A551B5C152CBFFC3
643737BAC729C332B62D5B267247E18D0D0650AA6F03484DB1785FE10718352E
63FDD91313A553860BA51658899F129C47601A4D96854084FB480F5AD9F1D5FD
C3A6D07C728F204E3E986F822D81479C3ECBEA1068D5A8796F1838937441A090
C8E8048F26E76BCECEDA8A4BC0BE79D8C815A1AB5DE9EE4EC50BF454558A682B
E242A7AC02A64AB3D286A9E66D5056752EDEE063286B05F0BC0527ACE957B5D8
2FC255C2B64307F5CA3B5B8B4976C01CA1318471CB3A268CA7BC4ED2111830A2
45C157413819365AC721458B9691171D8D3E693071F631D752CEBCCF58B94EB5
A6BC9496F9E0AA59769C259BFD1F9BBEB39C1DD6FE93B1619F13EC24C8EE3D72
24F76883EBC99FD5CA875EDC55AB4FD8300458FBDDCD5E65298FC068D2E5869B
5B950C85EF41D1BDF7F52C204E31879AB49E04050A51953EB05C9CD0D5A75630
082D09C431FB4583368FAD924EB910018FC6DC163600044DD9A54C1CFF4AFD2E
E2F257870E51C83645EAB15E59FB22A1C935FC4BAACF88431C6E86EFB2A4BBA1
2309A16ED79FDF3918CF6B6BC8CD7B30F81BED9AE6FFF89EF857CDD754BCB890
423B7072F384DDFA63E8EEBFFF126E3A5BFFFE6FE2B0943994D4A49AD29B8629
B2E0AC70ADCD8FFF68988FE24200ACCC6EB9B100C42F01AD055F9C86FA071A86
969D2759D4A4B585310A7BE9FEA8EE886809F8C06CF68F8B6C51FB766FAC30FF
878C55B35D01AA676584CA010058E7B40FDC66B549A6243839D6C358E0316D04
A941B023E869030C4FCFDA7A0C7498F204516D2DEE6FC40495CD2CD794F99121
90E39A30D7D3690101FDA3D849A65A29DB6C4A48FA05CF8C8C7515B7350BA876
83A42F067686F8D2B765B1BA5D2864D778C1EE542E0575EBFE6AB4E5258048E2
7925BF0D0B15F47B5A11173D05D4E32D8EF2A8AE17FFD63D14C4EEA7EA607EA4
A5A90E6F2A61A139D341CE35D161C1F878F5F5DE062FB10DF825A4D65FE8E1BF
D5B4F8D7DAAE7A9F4A6915F3117BEA7189F2159EC6E706A244AF65A53DD201F9
02F28D40B5A4CAC337E2FD827DB1DEB07C9A1CAAC579AC7339B1167CA4B865D4
A3B0D777315DC30A5AA9D781D507E9F8B629FDB8389667CFA679E38B5F4EBE4E
85D5A9CB4DA30B039ACAB045C2B483DB7F2FE19953D80E0F2E3C996F2CB3B0C3
BDBB08B3A179ED86E80439E1AD392034BA2E0312E735F8816FEE78E3994983FD
BB767C2EB543152B030A1705C0E06CE21D7141A81314D64329627FB047B1590E
77ED3A7CD4F85C7E0BDADD6BB97FF023AE2F64E9038535DB3AED2EFCD28F998B
6A94D5523E99E2D557BB0289D9DE3C5C59E41977AD4A03196ED3A06B2CFF8CA3
2FDDDA1B744437F0A23A9C1738A15B1D9895C81D5EDD034E083D561DE25955C5
D1999CC7652AD60E209CCE755F735DE0F8D24808E8387083CAB9E3C305B387F8
725AEE105E71A5DD7CDF4E73383826004E8490A8DA41CCAF4BA1BA52EAAE2851
933F6F6DC3A7EB24A5CE7E79A6A5EEB1C13D823A12E659BA5D2F875F645D3EC7
9A581E8988E8528EBEF7878029461FEC6F74F3B4D15C60D22219EA267DA3043A
1301A73C22B388DCF6DB28A878976FEE295AF29C073CEEECED23A0CFBCA70383
EEF15017DDA4D01191BA00FB3CC3ECE106D8705DA8B5A2B7DA1C6784E4577502
CDA277E465140FC3BCB6B80620106B4259DCF8DFD7DD1F752279B3F1DA31DEA3
80B531DB9FE1C2AA501108B58C1059D4AFF2CC0772CFC36FD66351C78EED72E5
6EABFE649304D1BDE37F2AE55B287F98DEB9226EE582C26A64E99E491D230969
FC6BE5BEB170321F66CBE9321823317B5E6B311E134B9A710AADDD87D84D5BF3
E2F7CA9ADD7E614BDF68E78ECE9DCA6371197A9E5705BDE00579150C6219B13D
C545443F29D18C081974CA252CE839D4D083BE8DF35E61928DB5D62DDB776054
D7B0958A44F221BA63E7E30CE73979A0BB86926E0D19CC37D9AC6837C28C5C4D
A0153BDF83EE06A474404E0D78B9E5D84E7E1E00EA298DA8BAA2E988FC7283F1
FB9B4BD3FB32D174C4A53F07CB104D05CC3C3FB255B9779A0C201FA49FD6952D
79A0A631BDE82D61FDB365711130275AE5E51192C324275E754F4851EDBE110B
06CE4725D910BE33306A3CC66BF9AA5D13D072541188E201D40867DC7FD0B724
1128D47B40C7C5A67BC3C4577758776A3659B56AA566AF8594CE6CCD9E93E932
4346B4D5B00965AC5B443C6EB641490CD21E123D45BCC1889AF16CFA54D4381E
BE54FBE3D3C65CF2C188A45457C34DA5B916D7EBB39B289FA31496BE26AB76D7
35B830A0DABF50A0FEF4E0893D43844A8E1ED9379ACD34D4D0C5543A3EE81B89
ED6393DD849522B6B74C009A02DB0A790C07B886321FF5F8CAE128B1295F2716
86D39A3B11F32DD1A25EA88DF74D906F869243D2818A0B5FB4EA773B1310B50B
7C1558E1BF2BE87FA239D2D408B54C4FD70A35E9F5E9DE48EF093BCEDEC6CA55
1C776918E8DE3D41C60B97FEA7336D13529AD071D4A8117358B2AC343FEAA112
98E23331D2D015C38CF9240CA60ECFAF8D0AB99F9ED1004E6451891024A407FD
43A850265ECE7AB233E96570EE914928361239901B82094F535B15FEB0B3F0EF
B667247AA80D956316E6D3DDE3CE849F765AF92046B0EE4D1E7281DF2B9F6974
E26137F7DB674699BB67D8A601F1F9B54DC731CE90E818BB1EA566E4EFBA2C93
BDB66454C70E7242FC2DA5B6DCDA7FBBC26B760753A511C3E13FC4595E9762CF
BBB263ACE3AFE0A789738E53170982B23309F7B32A6D5812F6A632F09570CF13
5CB6B0A2B0E5EF531EBBF29F65330206249A097FB7743163316DE15064438A43
A95D3A4F3D499726C3D28589796A7C255F8AAE7AADDD3C68E50BEA04B2323BAE
423F578FBAD1595EB69B10920ADD681CD2FE355F063B6C58F223F09260BE5386
6CBEAF19B2211BDFDD5D3032D56532A2FC2C7F2705D73CF9966B8D1B226EC326
F6B7DABE2890E73C8998A6134750B081921DC8BB141CBFA6DB26A24C0B1640CB
E9B2E46A82AB8261727ACE93A4E2B21D4749A1193700E1FB00ED3AF3B1384409
0729B58047EEC15BE41C0A76BCAA027E8CDCABB524545ED6DD740629B74F80F0
9E052A2E7066B0796BC8E2293DCAF6A6384C2AC77269A087CB57FBED5A2E7890
B4B6A1E483FA8CD2AB39169A3916A3D920EE71202AF4813B882928A6CAEB1D4D
816B85BCA102E4F394951D26FC5417B7F4C0E9DC1C296937CD449CB5324DD546
C80FC172ABB62C0AFC470D59A923D043C1BEC9B57926E993FABFD1402E7AB1B9
7DF18EEB3404EB0BD9B889E8E56D2B92A3D7D1E6A640153B049CCF652BFB4FF8
E34CB55C7683BB6779E1D22013307394766260E44D5C257203B2636AEF0462A6
C0E85C99AA14AB1F12B1210BEA2D839EB166694E4743E73C642A346E08B7B98B
8B798D83A3D383ACFCF62DBBD3B15D5D19CDF68E15DB02D0CC25B86E6B22CDBA
F0D8A71075D2006CBDB99A1C885193B2A621A1AC76453EF434148D9FCC4FCDF1
8EFACDA698D44146371545F1705030715A441AB790F71A086E70DDFFC57FA2B8
6C8721F68EA835F0C73C48E3D65298B0462C7557441D05476C779AB94045FE9F
8403288996B49AFB3A54FC70E9ADB359571280B339A4441E0DA5A2159A7FD2ED
93E5F10FAB79AEAB9693456A7A8B14FA78EDE49F40C2577C6655D61719333E80
1E1222C06F6C900C5CD85536134B06A31BF748F58BF1F0E12F6F69DDED0BF06B
BEE1C6551C8257F529841196DE424291EB6A00CDF200D5161A930F6DDC90EE45
25EC8FD5777D158FD4BF666A02DD8B089CF62CD4CAB9333AD7F19DCF0705CDEF
3368BA984821A4E37C725C08F3A16204B66CD1F19510F67F6F6E508EB6F6F6C5
91C4FD175D8A994389D6BE15F907544F8AF63FDBC5142D9D63293A5D7C35FB5B
296321B6C4514F76F2C1952462DAC85CEE9200E4DD907CFCF47815673E2E7055
8E07D155DD49B6D827B2D2AF831F90A73C34EDDBD1C6CDDAF2DA87CBF176688A
1508EA95B8FCB69A4DAFBD11A96AA4B0A8942939025EE52D55AA426AE102C788
0221CE4571ACF97050C7CE626EC54DFDF44B728D22500DEE885FA03350CE3985
6D93701B08D33BF7513FACDF946F0C7E3D05F17922041DDF4A9734C3BCC860D7
976094F2D1EED04AFDCA1BF5D24DB197C50710068FED12BA8BFF3DFAF18DF73A
44DAAFE4BA0CD83613B533F52DD9B3E06FDBB42859BDF3C3385E80DB1CBD0D53
3F1856BC02E7802BAFCED48BE24C98BD9E1CCFC8EB29885A742AE81E07DEC7FA
5ADCBB1B39A283F05C4C91C92C4A283AADEF2BFA42D0BB8A0258437C218D3970
8514F335DF0E87BE63D4A30DE67F3FAFC1471AB9B4920ED91CF2C0657983C682
AAAE98C390A86C4233837EC9CDB478508C33E25957BA616F3663290D337EDA0D
DC8C31A7C0326A1DE32DB8BED9F33EF6CED04F77BCF9BE85DA300E23B1320152
1B320588DB0AC0DDA7BB5B58D73DB4D46639B4A52B19AB9AADE334086EFD6FFC
542F8B65FBDCBE4EBB6858BF525348BBF13D2B9140F5DC3190B5EAA1FB40BB8B
EE6E8D8A274199CCE67B0B596266C0965ADCC928800CB5B3114394D28F13304E
E74B9B788C2D19162BEF1BB795D442E6290D50E117D5512A39F165E9D560A5E0
98239DA7CE3876EFF02204C646A786ECA4B7BCC7B0081450455C3338B41D013C
C70E460F423F9F8E6E1DFAD16303377FB8E6E13061687B39E08DFF26EE753959
45F5175F45CF22CCAADF90817FE4F110B7B5475F63CDC2A2D260717ADD96310C
13618BF21DE10968C62826C05D887E2930A7E11C007BD76C2B663AFF35757F85
F80DFFDB6A5FA3C3119B6D8D5C14FF6516E98D12C4F8C13A817EA190F55D3CE6
524CD0B0AB9F3F4E0DCC3770B31D08733386B1AF8CEAE3C9C2A8C22687C6765E
35FB6D53618504AFD8A054CD3183F93783D2845C8CF6E97AB66BEF99E743101A
7A37A80C400F87EB1F16BC20C2C5A9AED9CED565EB25D807EA3A33EA26C164FC
B6D319036B778E7EA49B7F59427AA33C749FDDBF4010A0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTT8
%!PS-AdobeFont-1.1: CMTT8 1.0
%%CreationDate: 1991 Aug 20 16:46:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 77 /M put
dup 105 /i put
dup 111 /o put
readonly def
/FontBBox{-5 -232 545 699}readonly def
/UniqueID 5000830 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0187316F83DDE3E2D27FCDF6C5CE4F95B6EE
3317BD91B7921F3039DD35FEA387D5CFB6C6E9DC84C178F3432994FC7FAC6E5A
ED41A1E2EBA350178FBFEB45944511731BA827167DDAC238FC69A5486B995477
C469E2E27493B0B711DF8E267D3D5613B450011921685147114106C9472580BD
F531022F6DF5432B2A4EBC51A8032C7F9689B6FA942D849B29709631613DA68D
4DF7B6F059A19304F40A3C3580CE3B51D79D42984194D4F178801720892FB6E7
61FF43C63F9256B5E9F4227B1378222BAAD4D52C77462DF01892220E11129C16
6C9E45BB9F01ED7C1AD5D8B4D72BE0E12969AFEA90FEF170603CDB91CB243173
B19A56084D10293B80A35275F41BF78A054DDC98F4A1FFF592463D944960FB31
6BE5F03960F9B1F213CBCC7FD448657FE388F10104D42B0715FC9571CC60CF23
C72560CBB8835A0CA208FE06676B3B48B093CB7FB2C0C53AF17EC5B372A9771B
BFD52FFB7062B4FE0106A01A2A1A1DD4EF5C8C7623EC9324A2CB3B402FCC1FCE
52BFC8662F8A39D5F1B41C97E7CE34E16AC28A1E94007AEA7D4C519399F1B7A9
48FA7DDB671067244F09C29F95DD60668223F45BBDA8B1C452E930A9F3F341C5
351D59EA87462FFB30277D3B24E2104D4AAB873BB2B16DA5B23BEE25BE2C8128
C4CF2F4F438A4E520CD932BAC455BF8775C27AEA6C73EED3EB2F8DB5E356AE27
41B35C8AEFE73C4CD6A591AAE4F45762EBD6D3636C03F08C552BBFD0A13D11D5
491F8369B4BAB8ED9D6F1DE7DB7AFD383986C4338D3AA71C9AF2B8A0955CFD86
0345F16D9798B25156DDF826A7CB6A0CC4CB43078BEBD3E499DA95562A08EED9
7CA27B7A0CE3FA7EBDAA87A6074EFB2B8846E07986436F7172CC77F7DCF63E40
DFAAC332DA306F0BF40A413D3321A041B5AD60221BC8E02BB474D11FE52D12CE
6FD44CB135E9D21AA2E8F3E808CA20B3BBA55633040527D5501FE73B98202CF2
668F0CD955DB72F8351C3A99C5A2D332E9271C72EF7EE0159A37DBBE664A3149
21755F497AE33338E2E6AF1BEFB5BD54BAA8A1F99AED49E0FE0A8FFE18C343D3
7BDF589FB31BCB5DB0AFBE79CE2BA51E49970619E48EBC668901DF6241E5D536
E146CA951B3C7D97C5464D3D8A59A1CF684CE01063E36D52C3960F0EBED4352E
D2C96B8D7058A295028006F3F34B95EC2A69D9F76526FD9CEAA8337707D84D68
E54C25281C54A1069C2ACF27F021673AE659831B105DA9768D039C14016FA7F6
5996BF65A29DB9E44AD1960AD64EC9A075CF68851242B1491E9C65F321CEC886
B75C8B8CDD977235FCA001A32219A38D11C83DBED1F4BBBC3E76B7C452AF3876
E754D33DFAF4CBC2D467606E45D24D725644C1044FF4FC461AB06888816C4782
0A92BB8B6FE18239676EFE7CECF6D5E4769EB587CFD8B52743407B39F5236A81
0E6494566065DD4C376F844359B290B1733FEFD898A677E61213AF24EE046D46
7A5EB3759092207F85000B3FA7ADB3DBCE2377A6684152C6FDAA8B92B8363671
8DC9118DD90072BCC11EBF375E11DB9B1A164AF65D143E62E9FA2E814008588D
5A08404DD00406C70CC211A1990B7750116F2D161E9A04F32AEB8155A5492267
E21F90165C6545B5383AA0DD184B4E3A983C0874B7AFDD217240F648F5CF629C
C23A8E4155B95D319174A8E060BA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: LCIRCLE10
%!PS-AdobeFont-1.1: LCIRCLE10 1.001
%%CreationDate: 1992 Oct 23 20:21:59
%%RevisionDate: 2001 Jun 05 20:21:59
% Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.001) readonly def
/Notice (Copyright (C) 1997, 2001 American Mathematical Society. All Rights Reserved) readonly def
/FullName (LCIRCLE10) readonly def
/FamilyName (LaTeX) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /LCIRCLE10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /a101 put
readonly def
/FontBBox{-2000 -2000 2040 2040}readonly def
/UniqueID 5011942 def
currentdict end
currentfile eexec
D9D66F637A9E5292A4933615152D29EEC26E1BED2E48CAB7AC058698EA30B07E
F8BDB66981B14445E1107420FDAF32EDBD5C26E35B334E3AF24373B2A13984D9
1D56801ACCF98612DE2C19685E0F4D52369AD642D169AB57DAB10665C6C01538
497544391FABD08A483766E9B5C7ABA9A537C053A8ADC16DEBD8B5C9E1EDEB21
E4E89B0945C0737B96F0194585BE0D9B958F1030EA84710C31971BA7E93777C2
0658995DC8702442780303E948079822B9EE0C531A5CC49578EB9E683CB77495
DF613FBDC4536BD7A90F044B7EEE6EACA2042539F62789EA39AA16433AC4BD0F
98AAA04894F5487C279D2766B50B23E16D7F1023E387FA4165DF522DB290D390
B669550A43638C3C9CC38C7667A22D27F9DB1542620110A8671B2713C8DB93D3
4C500474AC190831F9C7441DC4A7C27EE88DAEF10D7AEE6FDB22E7625E802B4C
FCEE0DC79988734BDA39B9896B1833D4BEC4F91DB321F343F57B3FC5ECA13AEA
AB108165934BDE65D2EB5A62BD395AB84402D4A2703E3DC3BEC860D5A4EB785A
1D8D0D1AE7D31BFCD3ABE3E9779B6BC28D93CFCFD8461032D969F1C9A53A6DCA
321062C6750132DD47444F208275E5000794E261F842CA01FD5DCA6F8C92C7EA
E2D8D66ADB1194BD8AC59E9191895A2FCA88F32DA2B27717F18C258EE2402C69
5655EE4D15708452687828A90653E9FC2707F1E9ACA413DAD6E5EE607F6DCB97
09B7195203A395C97CCC7390F38D69AEC6323A0AAE0A05958B7987701BBD6497
F95D8653699C39F179820FB8C2DBD7A4E7EDF03E83F7536946A3F532650AC5CD
48C10BA3AB8F67915EAC0053592CA317E0A8EFD1322398DB7D9B32ECE97791A0
0B49839C58E426531833D30F153863E92A79516C2878AEE6916F0FA78F94714E
D709C10DB24955FC0DE6769D34E4E1DB2ADED1775C5A5A6313C93B6A0195311B
4A334B4D9B914EA59194239AAD1358BC269B8CBD35A7685ACB29282D46440A38
083B9CB2258BB81E2489B5FBF551AEA1330D4DF70E9E650964A369CA2F77DEBD
0CDBCECDD2DFE4EE609FBBCDF40F1331636EC76ACD1DEB43CB2F3F0EFB6C4AE4
9CC77BE94782C61FCBB71C0B0BD6E69FFA80EC438A80E07BF22131824B0A44E0
154E1DD9C856E61CDEFD2CDA19BD6A99BBD2B5E6FAF9A1C947B42A9973302CBA
574A2CEBE74EEAB6D6EC11F7D8444F72FDFA61E0C6FA7BFC8BB1F83D28D9581D
F13A26B697335DDDB4CD1A5B0DCC21F13BFAF9766F17403CF73FCBF102087F33
560610DD61569B524A55C83F882BFB57347CB8EA86016A5029BFF514CCD91BBD
64735A0AB844302DD9A25BF35EBD0E242F9161C291DB37880CE855933D42686B
E18812B62DC1CFD871268F730D0F388EE2313E26116818538A8B387207226770
1E2BB7830F5CD1A2B9F546AC5A4BC94C28F066BDE0FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.1: CMR8 1.0
%%CreationDate: 1991 Aug 20 16:39:40
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
readonly def
/FontBBox{-36 -250 1070 750}readonly def
/UniqueID 5000791 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA1772CE422BB1D7283AD675B65
48A7EA0069A883EC1DAA3E1F9ECE7586D6CF0A128CD557C7E5D7AA3EA97EBAD3
9619D1BFCF4A6D64768741EDEA0A5B0EFBBF347CDCBE2E03D756967A16B613DB
0FC45FA2A3312E0C46A5FD0466AB097C58FFEEC40601B8395E52775D0AFCD7DB
8AB317333110531E5C44A4CB4B5ACD571A1A60960B15E450948A5EEA14DD330F
EA209265DB8E1A1FC80DCD3860323FD26C113B041A88C88A21655878680A4466
FA10403D24BB97152A49B842C180E4D258C9D48F21D057782D90623116830BA3
9902B3C5F2F2DD01433B0D7099C07DBDE268D0FFED5169BCD03D48B2F058AD62
D8678C626DC7A3F352152C99BA963EF95F8AD11DB8B0D351210A17E4C2C55AD8
9EB64172935D3C20A398F3EEEEC31551966A7438EF3FEE422C6D4E05337620D5
ACC7B52BED984BFAAD36EF9D20748B05D07BE4414A63975125D272FAD83F76E6
10FFF8363014BE526D580873C5A42B70FA911EC7B86905F13AFE55EB0273F582
83158793B8CC296B8DE1DCCF1250FD57CB0E035C7EDA3B0092ED940D37A05493
2EC54E09B984FCA4AB7D2EA182BCF1263AA244B07EC0EA901C077A059F709F30
4384CB5FA748F2054FAD9A7A43D4EA427918BD414F766531136B60C3477C6632
BEFE3897B58C19276A301926C2AEF2756B367319772C9B201C49B4D935A8267B
041D6F1783B6AEA4DAC4F5B3507D7032AA640AAB12E343A4E9BDCF419C04A721
3888B25AF4E293AACED9A6BDC78E61DA1C424C6503CC1885F762BADC81C02900
0DA0AE46D5DD1DD4ABA9CA5E858F1F8DE52C6E9C35B081C3DDBB0B03AEC4C539
C9941C4CD7175B91CD2DFB1DE57E9B4239A6C7D75AAD37763127A94420E1C916
5B14099ABD9C9300DEC434DBE7264D796092BC3CF89719BFB1C3BC056D0E81F4
940C8CE47911BBBE448F24A687B9587A1830939FC086CF0D9ACF566E480A9E28
340A2B06C82F9D660FD16F2424DB599473504601CF5235EF622B5DADD14885E5
C57AB88052E2506707CE3252AA2D75D66DE0E300A6304B11AA0EEE5E6C223DBB
05B03D26552AD474BCD0B497548B2B1F71F304318E9FFFE81E857CDEB5C5303E
5666048960A780DB0BE5E60A419DB8B1B7BEAA17622E2BE938BE33CA53E3BF8B
838A06BDF13838E2F2C53301C7F3F0F65F0A27169495E23A32AC0E6CD1ED3818
80689CC2A899B0630AF3AAE186756C3FE1D1CADAC998A442EECBEAB5131D5EA7
C28D8F7333CAAD076B24D4997E4CCBBF8CD6B11C642D369440FB661E25C63891
1270894FC58E041D81E4B80AC0A63BF08BAC23C7257E62F89EE477917A0F215E
65A23A285D86F208BB304F9D6F7CFB3DD05186A4AA26B1EE8626C04DFCC42445
C11EF8059C04E4B87FFAAD03AE3DE1D7487E415F9B93A1CF070DC25706C2C6EF
96FAD4048D872DF96C99FD1428B812BF700467917F59D2F1148915085FC5A92C
78BBD18318C669A7393CD761238EEBB3598660D201FD7D45BD508368D9E9E7F5
4721AB7721C808C047025703B994BEDA3AA3696C46BBA5251EEEC2831BD077D9
3C6D0A13F6B64FDA0E7CE6996E2E1BA257DF9B3F5C6D961EE98BFB5B7EFEADF6
2D1F18AE522A11E5E24A0312465B71AC4FBC87CAE3ABFE703717D4F1E922F0C5
1769C6EC8EC780BF670E1E66DFA55049B492ECD774D1D468CDFCC4F6DF8F4257
C8CC56F252EC28E17FEC532CAD545A53078C2E0D0D9747D8EF9979130180703C
EF2645C28D92CC919DA48DAEFCEC513C3CBFD9B35E2D90AA36D32729D9463606
CBFC80EBCAE5E35B1E7D6E5C70BD211F21F98A65F230CDAC3607E8A69FC95A64
AE5724A403F9A3A55CBC3DC18913D3EA6BB08912D991B3A2C33D24E135EC0DBF
2EAFC4BC1FCCD035950B7925826608E92941AEB73581AD251FDECB6B88A31174
3914580C6F2CE542FB2D44EC786DDBF68D7E29E02825A5714C426D2A3A4EDC86
335EBD5707DC4476638C1762DCCBD1ACD21FC0D99A917F9F0107E609EF3D6CED
3F697A6D02F7D7A024A70227F3A565AA0252FBD4F13D8978006385A2195CF5FD
F9ADB8F7A0A9520D922356AEC8C55C1A8E1DAC5D641106E9194C52B94B2FAE63
B2211D95222B8B7A680341840E97CEF7F609376951A790A2D034864A0464DE46
B67F053F2381DF98931C7D31DAFE77D6F19E1A766D818E160A9DB55CC939BB02
CF5B60E0F7360C58E2433D6CC7B9C66CAF82F502F3F065C9C1B4C9655AB02629
D8F6CBE6A5C588ABDE0E7E3D3FF25A6DB4F37D9C145869DC85E8C6F836586009
5B25A9128F9F1E7ABC9F96418EA11080D24ABC2D5302EC69ED7651A856A4F0FC
22F389440C02E276EAF1C0C7B1834FA6820AA8C2D9BC2321CDC3523EBC307EA6
C2D6312BAE15E1B9B0D309FDF70A23BC189DEBA2A7E0ED025DE02A3F0B38671C
FB5FDB620141D3FABA9B7928DBECE3CF8CC61A2AEE6469C09AFBBF074BE662D5
E7721D109871F89C6DD0CC57B914E771E271FD1FE8C0A53371E5AEDDBEA22A33
E598E2ACA1DFB0034F9B768D3205113C10EEE07908DDB13D96C3DA9F4DE6D777
DB87BC2082693CE65571CA697A8B425AC9A8545B7285331D74FF874E4C90A235
610E363574EF3C0D7E63B511F0D1C1EDA495274E24E89E76050687C92D7BF063
D9EE5C376A7382FAA1C80342E31D63DE869D8CFBA960AAD12DFFB22C471E7BB9
7B07411901C74A355EF8D28A65288F14C1179398A1373B9E755A13B1519D62D3
6FFB339EDAF3CC2935589AD7CAC712B06AFE737F6C7F8E2A9E6D681C535D4144
E4DB13E4F8F935CEE3BD07FCC6ABFC138B3739B5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY8
%!PS-AdobeFont-1.1: CMSY8 1.0
%%CreationDate: 1991 Aug 15 07:22:10
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
dup 33 /arrowright put
dup 48 /prime put
dup 49 /infinity put
dup 50 /element put
readonly def
/FontBBox{-30 -955 1185 779}readonly def
/UniqueID 5000818 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFBB2A7C1B5D8E7E8AA0
5B10EA43D6A8ED61AF5B23D49920D8F79DAB6A59062134D84AC0100187A6CD1F
80F5DDD9D222ACB1C23326A7656A635C4A241CCD32CBFDF8363206B8AA36E107
1477F5496111E055C7491002AFF272E46ECC46422F0380D093284870022523FB
DA1716CC4F2E2CCAD5F173FCBE6EDDB874AD255CD5E5C0F86214393FCB5F5C20
9C3C2BB5886E36FC3CCC21483C3AC193485A46E9D22BD7201894E4D45ADD9BF1
CC5CF6A5010B5654AC0BE0DA903DB563B13840BA3015F72E51E3BC80156388BA
F83C7D393392BCBC227771CDCB976E93302535C253C2A7A0D2A39F364428A2F6
E75C522DFB241A0054953A47895E344A2403F59056C0CD4CFF4EE7CF54665B4E
9A6DC2FD67CE5928F768466840F9D06BC7FBCBA3559A72D6130325C976A60652
0EF2A57C54690D9BAF344D72D1580A312B36B09481B306147B2D63E106CAAB37
DCB55E691C1FEB75392F55D5A06E421F938F0D5D0AF96BDED02FE16D428F60D5
81733FAF3F327EED6357AB5F82ADAD1095D783752A0719EB19340026AF46BD13
75B8C20493D8A5E1473E0EC222D0D20B77F9454DABB9E6FEA3E0193CF18EE688
361312EC30A0F3B531D6AC5984CC062CFB1BDA072935FBC2030F9E3397DF6052
CFCCE754A0381C99684A898889AEAAFD0C180A4822A1D2CD6A9D786D1BC0E08E
C0C77976C3EBDF69FE75FB777AB1199BA8A4C1B3C91F209906B0FC9A0044A841
7E781BDCD5384F1EDAAA171EC20F903DB20A6CB737EE4EB0D3A59A8E1DF48D07
32DCBDA8DDF5D4A9E0B52F993D9481B7EFB44E5757916E63CFB81177721591D4
D5F7D29B658C694D284D44084586D263E1656C8701FB04E8442161033A57AE38
70307D06AD17B5AB6CDB5B8A88A5ABF5898BE6F9EB4EA383AD2B6D056A021650
BF53B55BA091AA7C1EB25DC4E58F3ECF6F21F837D9F18018D4E599C554AB4AD5
A04DB16A9881C9D9EFEA8D7D335B681D7CF1A0A906D0752ECB77756B558663A4
B6FC125B452991583D315AE6CB359F2E203C71C34E6388B21FAAB8F60EE00A03
AD589B803AEE3732BC903C3F13A1799F2A396E9C7507A42A8AD23BFD7FAAD531
CC560DCA8D0B618A0A5CC8DC5F95BA92A37E5F72BF5D1ABD9D6BBBAFF4B66872
0D6222970C5640074E16BF9811A5B463760ECFA54C78B3FCBE5FB6CC1737BA8C
D4FE2D660D49446BC72D1992ACF3507FA832E8732577A5AC5FD1E39B13C657A8
4FF4736F6D11F8FB549A000A9E705E21252C4A8F5DD7922780C3C3EC0391E383
F6977932F8E407EE726BDA244BC1ACC0D8EE1E70EBC0A6B8C11C61F6CC318573
B6889714550557CBE883A9F269644940ACF721B11FA4754DD26B37F75541DB30
0B00E5E89A8539DBEE24E53CB6805F92692A1B1734B070F187195D9AF231DD8F
F31C2428A1F8E9EFDB7EBEFF09576FFE5004E7BBC4AF31F2B56C21CE81812BEA
C92E7D8FA53E77E7D3A721CC22E1E1690A7E643C8D73311980AB2A20E9C82A37
08FDA9AC18AC171095057606BAC9B451CE06AB56A9A8D67445DFEC00C3EECF72
2B3C69AD8D658ECAAC428CFD963251D6468480FCA0CFD953299D57FD1E18ED7E
6381
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.1: CMMI8 1.100
%%CreationDate: 1996 Jul 23 07:53:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI8 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 85 /U put
dup 86 /V put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 120 /x put
readonly def
/FontBBox{-24 -250 1110 750}readonly def
/UniqueID 5087383 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DDF753642CD526A96ACEDA4120
788F22B1D09F149794E66DD1AC2C2B3BC6FEC59D626F427CD5AE9C54C7F78F62
C36F49B3C2E5E62AFB56DCEE87445A12A942C14AE618D1FE1B11A9CF9FAA1F32
617B598CE5058715EF3051E228F72F651040AD99A741F247C68007E68C84E9D1
D0BF99AA5D777D88A7D3CED2EA67F4AE61E8BC0495E7DA382E82DDB2B009DD63
532C74E3BE5EC555A014BCBB6AB31B8286D7712E0E926F8696830672B8214E9B
5D0740C16ADF0AFD47C4938F373575C6CA91E46D88DE24E682DEC44B57EA8AF8
4E57D45646073250D82C4B50CBBB0B369932618301F3D4186277103B53B3C9E6
DB42D6B30115F67B9D078220D5752644930643BDF9FACF684EBE13E39B65055E
B1BD054C324962025EC79E1D155936FE32D9F2224353F2A46C3558EF216F6BB2
A304BAF752BEEC36C4440B556AEFECF454BA7CBBA7537BCB10EBC21047333A89
8936419D857CD9F59EBA20B0A3D9BA4A0D3395336B4CDA4BA6451B6E4D1370FA
D9BDABB7F271BC1C6C48D9DF1E5A6FAE788F5609DE3C48D47A67097C547D9817
AD3A7CCE2B771843D69F860DA4059A71494281C0AD8D4BAB3F67BB6739723C04
AE05F9E35B2B2CB9C7874C114F57A185C8563C0DCCA93F8096384D71A2994748
A3C7C8B8AF54961A8838AD279441D9A5EB6C1FE26C98BD025F353124DA68A827
AE2AF8D25CA48031C242AA433EEEBB8ABA4B96821786C38BACB5F58C3D5DA011
85B385124F427C1B5158D8EC1EEA9AFA31B14D310584D6FFA41BDEABF82FB7ED
6634AF82FC7D46A06ABF41948619A1E54F16EC93A0ED9183A10F157465550FDE
FFA3BAB07B3625647D1D165980B6F9F0BE032D6877BCD54AC1A5DD747571D637
0F5CA0EC24DF562D5DA2B0A84B49AB71590A267B235DC6AD67225C8E739FAB6C
BCAD782DE7B61C1F86D185B33F24E55D31B1163D54B1C9D58E7847132EA325EA
8CBA263FF97B5A0A121D85146AEF35DCC55728B9E4E2FFDAF79A6F10FEE45740
F0536336C86A5A45F8563DCDC459DAF8748361AEB0E8B4E770967AE910704DA6
DF53DB3A96465E4EE2F0A1418C68F926AE1947EC8EB5A6A4AD587233CD3256B1
3FBD4F382ED0EFDD56A7907F2879F4383B8DE0A0FC57123C35D67D859904F2EA
C536682D4DDB4E1A07333A064F47A7D8D852E45B9447BEA130A5B5F2047F3BB0
C8D38ECB70F264C5198592D25D6855BFE0BED27B4773FA31B1AB5F8624C5FDF8
F28CF2CA2DC36F79B345D5FC561D89579AB71366CAB9919AC7C1C3CDD03C3C63
203050C3A4EC5CBCBFCB709F6811B7F6EDC225FED271C1F501F794700E59101B
2330584AC4D5853CB550D1BA71AAF33C529AE52B4AC8FFFB2E67E8ABB82009CF
CD236FC4B6B1AD8633C79D08579AA5E847F2673B8F415DA699ACEFBC6C43B4AD
379D4F6244069B4F35D513770C73722A9B2314F321AE75E61BD534BE9681D93B
FC271F9055ADF53F34C039FFF53B2494D8C2F2DB14D37456087736E686BB3B31
62D1051A68E4F12FD5FAA9EC96A77DEC6B6FA0698374BDF034C84DB0900EB66F
6DB6DAC14E64A32081CB17D8BA30E1284C0DFD37F751D5A90D5F0F84CAD6EF21
2EC69FA80BFF75CBEB55EA222C089D1513B33793488D5EB918A44815D40D4AFE
F71621B3FCFF047BBB265B44EC4B91A02AB9614FDC422D5EB02C3C514BF5B522
8661A348FACB5D7269C3A14163A019906956AB8520939764D30DE6EF5C3AB76F
2EBE24A4923B01F8AEAE252769491B4F71919FF7EEF0E4940673E1C81775B96E
9D8425CB3CA32843403AE234A9778F1F2D02B3A3C2B794AE05CCE2E88F7D7647
C78E6687E1427CC95DDF09DA3F7BECCC775C86AE73BC1380010FE790935D0934
C8339D0BF564009764449423C9E436FF67A3C14D56B4622C516C5366DA43B459
2F0ED7746DFD0E5D0339345A3604EC37EC83625F3450497B21732D5BE2BA226E
E605A04E9989151AD22C1241D56D4CE7AEB4225B658F86BDEE6D800D73891A2F
0D6D120C0722AE20B08DE8286D4D2F94952E44F636AE547A0B335838B4539997
812BF8E0268E5C21CE1C125326FDE4A6038B7BB6818EC13D5E94845C33F4D5AB
10B220FB161006E5C055F1BD415D097BCA5DF4703CBAF33BE213B57243C821D9
915442C6C8D4C49BCE9BD02CE2E6116AB4AF44E479AC6A345EC1F7EE0A72F9FB
FE629E85CE4A09615C5A9F84D291B8C936C7DDF88C2DE952A8431E4596E544E3
075F9785B8A66CB6773F7E974D43EDA8A471E82E48A2E00DA394D704D738538D
B3E544C5ADDB51EA49384BAC037466E60E27B1298417BD68E0BCA3A18F6FB4F9
21CC57AFCBFCB408EC73E7CEA72CC383714ED3D073E85162AFB06B2E56F2B50D
9893251148A8110CD48211E89B8E568D521E55912F44211BD8EDEEDEEF20FBA1
1C4AA90D7E3B3F3A9548C54E8702F31EA6C64BA91A2E488C0E2FBE34397E4CDA
9E1BD3C0FD620AEE158EE57F1A41586C9438325B4035B48A776680F6701F42C2
48773B34660EB3C8E86911D18B85C7AB7E6A846A2701B31B8F74114C6C76AE9B
10ECEB17DE35AFEB2764194591B2BE67F4D3B8038F439A976F118AFDDC6B1F95
434B5A09B33D0C5AA7A63D02F6D45F11C69FF86FA67ED27D3D647920D554E78B
54DD22D22F492019F466EE880C54C766A0BAA127A01944C1CAF0FA2290298FFC
D61B84A88E312E3BCD92EB562A3F3FA56F55B654DF9BB29F2547A47F9926B8E2
0CB14A9C097D8EE5CBD0F1D98EB441D357E6BEC1DC53D95F40AE9C8A8A2148D6
F29BFD65F33FE4C791F7D36F9D9F560D8492373C13B44E70C012794D9EC3F711
E8CC2CB4CB4019E1333FF44417ECE1078EACF557C97BE560949FBA3F92B043AB
7CB7C25839143174907FA3601331F8FE1E216636BE47CDB8E92DD1A817186574
0A6A0DBCFD83F70F3F863680A6DE165FE4B249B4E06C4CE941D71F9F9D1FE2FB
0F20211B0AB984BEE1288543CBBB364557E632921D887141ABCB2A846841D695
DBC00134D4A3906B08C50BB6733D095688CCACFEBC8CB8E0DFAFD4D013F3C07A
77FEA2B0705AB4ABECF788DDB0B0E3C0D138B0CFD884EA0D1D22754F932CCD70
B94B08253D1A5414D883999DAA0DDE08C9CDEA7797DE78A954C59A72DCEE08DB
9B68F51F4758B24D59AD163010840576D77BC79A2E24243F9B1D83D512B14ABD
1B39410B5B7291894DAE39FD67D2A82557AD030377A12B09F380A1E4EB0D4C1B
2A229A8E1D08351C927295190C1FD58ACF8FD2AE7839FD866FFA4090FE32F33B
49962A3D2CE3EB3CB32CEA8CE7968837AD32042065092718E2C3EEDC6E5CF5F3
834B7DE0473CE04EB5737A2FCE4346DBEDCC2013832F3FEFA149D56A4D8CF97A
BE0D827DDE58A33B23EB9B727ABB84A73F46E41B4D85F18D0BC3D4AEA0946D48
60A3AD1A83DFB2588772940B8265E2F8D4BE614ACB37FB20F9A3DB09F831A048
AF7F05F2CF99A537D7240DD3D60C582D507FFF3EC03E1BBA08A9874C4C353F4E
698E3024463464D14B7C51670CEEF944FA3A8194BD59B1FEE32C04C5355EA92A
AEB0958C7E8B25545040D94E2EE5087B2F7C196EBA52CC4A82993F196FC8E94D
7922136103DDC2192FFB1B71DE5629A382565F499D39AC3B8CB271FD93504C2C
A4BEE384DB999980C94F8D3CFAED3ACD56F760F8C48474D64B655C1DEFDAFBD7
D1B098AC93ABB39E2240E7C19179521DA48B6C07170B29377FBF6B5F02783203
D6DB116DC4AB995F82CC64B010475B62E3AAA1E2CF60ECAC9138C15EE86C12C2
3251EFFA6954530283B3ABE0324055A08E9D9D1CF2E64093E25CB3B811BF3E10
6CFF2716A663790475EEAD9FD189C0A03369C5424D8B5B5089DD7A84555414D3
5EACF73F4F097BF829CCE983502C33752350E8B7210C5C756FF69F327A370CE8
73D8B9927282FAFC10FA588E2560C753BEA7BEAAF4305DA6A981F9FD579321A2
139DFBE6C7131B48B756F36EDC73E7A36ABCD00C9DCE4C40885AC5E4D73067E9
B97A2FA8B229BAC508455E786651D38027784C765D5318A0C72F6200F76F6AB6
AFD5CD40A8FB30A7A77B195166B94A798BA29BAD5483258437E7766351567D06
9B71DB49F1B2A7EC140803B7879F2797FAD7F69C777930157A2685A609A40FD3
C7741FC1810326E7BFC302314E6EF8E3AC0D95AB65C2F69546A0ABAC275E88A5
7EF38AF5EF5F62ED0A6E6012C55644D0376BC655BE2301C1044E0C9818C06CDC
229DE47C7A4F52F91FCAD73700FFA98093C8B59F300C17FDC4E0F49261F25D1D
0EDE7E6C8B55E4199D295C5E0BDA179F813DD586D8E92CC47D83956A54C35575
6E147FA6041D838781B20AB80DD7962C2DCFFB8349B658E47211D21AE3BFCACD
14F49D00E7B26C7213BCA77F239972CCF36601CB5AD27B86AC790F1B5A31C646
A93D14A6DF8DAD140ADDFA6D0C071DF89EFAA51A2CC9B850423147E07C862FEE
BF3D67D1C4F442FCDB809ED33EB70C73F789DA085ABA2B3A5AC922147AFC6E14
23442F6BD269D4B4862A793B6C90DF1B2270A8E617C62FB762A9BAF074ADCBB2
4C39C720F2C42906384AAC40A4C07DA55AE9769688BA507843A30365EA33F8C0
EE328FA9B85D21523347F664A3709660AAE715CF31BA44ED6EF8DBA4C0DE942A
698AC6D92D01B8E57D9031339B02F1E17E8AE7E62CC0FE279E7EC5FDAEEBE74A
D1D59CEF4F8B0A1DD0B6FC6717C061E76498710A64362A9A5B8B8A92F3DD11AE
4FD55FF3413D25F4CE4C73AC3B5FE14E4A296187B580D39C07BCEE77704251F8
CD156EB90FC9B6AC53D25C02F5909DB5CFE53567325CC08ABB051769FA6791FF
328A4F362ACDBDAE5F7946A958ADDB9140BF87CD8F2587F64115745F0A15D918
11BD82FDDB4820E7B5AB5434AA7540064AADA02CD9018E0022528D54B4924559
4411F0E4890F45550A42D46A70FDD69624C1B8BA0EA413B6BD60C01ABE5970C5
26E2410B786059119D716AA2B5560FD82042A06B05DF404E9AA2554B66595218
6B8EFD4679BBDCF89BAE9A75A90C211B458247B6760CC5C5575543B844CC6FA7
884D97807B96159EFE1192FC787468C1A73815E4E7E644CC75EEB95277E623AC
7CECEFACB4225A1C2C375887693EF705A33729650FC3A94C190026B6E406EFB1
415C2F054CFA1AD5E49ED042CA6B00674F7C6EF406916F65FB79D5AC8C6CFBD1
931072E73A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.1: CMEX10 1.00
%%CreationDate: 1992 Jul 23 21:22:48
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMEX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 81 /producttext put
dup 86 /logicalandtext put
dup 101 /tildewide put
readonly def
/FontBBox{-24 -2960 1454 772}readonly def
/UniqueID 5000774 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF5B8CAC6A7BEB5D02276E511FFAF2AE11910
DE076F24311D94D07CACC323F360887F1EA11BDDA7927FF3325986FDB0ABDFC8
8E4B40E7988921D551EC0867EBCA44C05657F0DC913E7B3004A5F3E1337B6987
FEBC45F989C8DC6DC0AD577E903F05D0D54208A0AE7F28C734F130C133B48422
BED48639A2B74E4C08F2E710E24A99F347E0F4394CE64EACB549576E89044E52
EABE595BC964156D9D8C2BAB0F49664E951D7C1A3D1789C47F03C7051A63D5E8
DF04FAAC47351E82CAE0794AA9692C6452688A74A7A6A7AD09B8A9783C235EC1
EA2156261B8FB331827145DE315B6EC1B3D8B67B3323F761EAF4C223BB214C4C
6B062D1B281F5041D068319F4911058376D8EFBA59884BA3318C5BC95684F281
E0591BC0D1B2A4592A137FF301610019B8AC46AE6E48BC091E888E4487688350
E9AD5074EE4848271CE4ACC38D8CBC8F3DB32813DDD5B341AF9A6601281ABA38
4A978B98483A63FCC458D0E3BCE6FD830E7E09B0DB987A6B63B74638FC9F21A5
8C68479E1A85225670D79CDDE5AC0B77F5A994CA700B5F0FF1F97FC63EFDE023
8135F04A9D20C31998B12AE06676C362141AAAA395CDEF0A49E0141D335965F2
FB4198499799CECCC8AA5D255264784CD30A3E8295888EFBC2060ADDD7BAC45A
EEEECDFF7A47A88E69D84C9E572616C1AC69A34B5F0D0DE8EE4EDF9F4ADE0387
680924D8D5B73EF04EAD7F45977CA8AD73D4DD45DE1966A3B8251C0386164C35
5880DD2609C80E96D1AB861C9259748E98F6711D4E241A269ED51FF328344664
3AF9F18DCE671611DB2F5D3EA77EE734D2BED623F973E6840B8DAD1E2C3C2666
DD4DD1C1CC71EF3BE29E7C9EC47F20088C52CAEC511F41B45F7509B28A1BA4ED
78E991E33133F9A247A739FAA646E4E6103331D78C99434EFFA0CFDEBA96E089
9F26A71166DBC63756728323EE18276860CE7B87D7E9687475EB8C3881A3B7E9
032E8B59041D9C97C6EDAC2AC5F3A4157163E9A2CAE30F89D8F55D047EFECE90
9417023E780A9F6A309CA1E79F7467512A80BD3B52ED20D56209C4BEFE3E5A8C
03CFC14C76FDF4D9E42681CE3CDEEF6AB54D3AEC732EA2C84F6A11CDA44C5A2D
78F1BB59F6500FDA925F1BCABA100F629FFD6AC36D373C6552F48E3D2A09B456
861DA4EA9F140CA1F956781A6B31428F9163417DE2AD6B289410F45702E320F7
B4C84BFC68DD206F79AA0B99B12C446CD6D56CBE9BAEBE664C4D5617D3C4C14A
6EE664C63980E12FACC95133D6B4B7490EC09BE0D33DAC68E8DFFE16D8F2214D
63BC760FDA7C27DE45682CB9C8B4AAA89A125CE415B56DD459772243D9E792C2
44BD1549385C8A251892E04B56C6664C7CD6AF904CA6805D1AAEA52809CAA8CB
76FBD9E3E546DF1E914D28176EE21D5E39839146297B0F5A2C699C786CE0740D
D1EA7169616C129F6A4D367849E180AAE493ED70738F070DE67799EC8AE20F5E
1ECB608E36F8B22BA7448F6DEE1415FA7BCB239FD0F52583C56382AA620D468E
307E185A8E79E0A8615F4AFB5D872F13294A26F793A49313BCFF921EB9E69860
B9F57E9E50F9956BB90109AD41F7870ED27A4AA5F31E6B1A92DE05A51DCBDEE6
0A525B3A1F4157E151ECFE40604E5607FEBB6B4587F89FD8A9C91AA8D6DF322D
9455534198CFE4CE4AEC5CEE26D73ACC5228D1F73648CA62DAD5603EB9BDAB91
AB88C5AEF4E9367E67A274ADD946055531271B6F5A03045C26FB7BE165D9E51F
5FA25244C16A256924CCCE75AEF2036523B527B4BC51C4C6EC681C052BEF3CC5
80A61A4D9C27275C2DD6CDB26C028132DC34A278606D852A9DDA8573AE980342
42B8C4836AF55C273A63759D94354CCB67E7714C8F12CEE67B39E862CA850398
023F25728AC2DF177F6A5D0CC238879DEB8E04D1B724A23F3D1A3B10217A7552
1FDCD9E3C32686FC30E1438684F196278F8B811AD661340748E3F1183A6AEF4F
F7B776E42606DCF3D3FC5623E5E0FF202313C845E7A5CDFDCB808866C09B2EF9
595E24A86EAF5C81C7337B64CFB9F2B09D1F2613A808AB24FD6D7C9C8FDA8B89
E749D54B3C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 6 /plusminus put
dup 15 /bullet put
dup 17 /equivalence put
dup 18 /reflexsubset put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 33 /arrowright put
dup 39 /similarequal put
dup 50 /element put
dup 54 /negationslash put
dup 55 /mapsto put
dup 56 /universal put
dup 57 /existential put
dup 58 /logicalnot put
dup 59 /emptyset put
dup 91 /union put
dup 92 /intersection put
dup 94 /logicaland put
dup 95 /logicalor put
dup 102 /braceleft put
dup 103 /braceright put
dup 104 /angbracketleft put
dup 105 /angbracketright put
dup 106 /bar put
dup 107 /bardbl put
dup 110 /backslash put
dup 111 /wreathproduct put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703652AD6A37C6322EF072B85EDD4AD6
3D059AB042EE232F18B14DD2DF926C4417FF72F0D0290270F6989E5A1608CDC7
3CF4D9379C8286051F07425F3B638F0FBA8308452C90E946134CD65F834184E3
C0971D4B897FBA6F068E58A4579E3F4F0152F03AAA009134F40ECD429EF76827
4D7E86FE7DBB1AFD1EBC7E15E5CCBBB42D27E812F01C3BD6366568A6DDFABD4C
FF768CAA0242C430984EF5BE57B11FD811E68346673E667797ECE16BCE535FEB
4BE059FD5049FC43289D0DF6FAED506221CEBD226AF18CAEC245C1DC7A6D3FD0
B59C7F60D34750F6FD3796B432E3755BC2F0F758B05AE9F8989D9037E8E2AAD0
76655B875161492F19C2633F3A17A840149DB344A7960DCC6B1BA01E4468DC31
99B328E01E2EBA5B8332431CB7644F7854BB26A80EE35D0157FFFB31D75CB65B
D5EC0638FEC1FC3783F905D618C2CB704B0346C7C6696D1754E83427298128FB
558EFFF699FA98E9CCB9261476667EEA8A9C4E7D8420E23421DCFF6604349721
15B91B4B6ABF23E57C7A15056E72992420ACB4727489AD4D821579EF2F15C634
A1BE07893B959568763CBB9740055A7252045B2EA632450F2DC187FDAD4BF77F
89DBF8DCA4F3EEF1DA59E39A9391FC65DEC985BD0766BFCD57D7B15B35D8B1F8
0E93B012AAA34FCD3AF430F3B3F5AC8B1538906A477CFCBD7E0A3E96279D4470
8DC3617B151873B1326241360CA260CCE2705FF9AE898204C37AF5DE84A12012
9D8F7B6DD02B436D4FB329C9912FCF908BC3FC6453400BB92B86896D5D94575D
DEBD1204075F660D72A7FA59B4D1C9960B63776D008F1070985D5FB27CA6FCFA
879A60F89D8741E9BA5FBCA51DAEB154462A319F1D5D826EEC54D6487C949744
77260B5C454EBDCA3160E5FED7130468035E98301167CF856737EDCE932D5C7C
0675E941CAF27EAF0C4D96139F0365F15838BFB747299FA4CEF331691D346658
AE7C2F63DAD35F131678E50F5CC7FFFBB62A8739FA074AE2D862A7A010DEAD7D
2F6B96091810BA9F2B309C7329C29C93A20CED5F336D289C225EBA1484DA9F87
46EEBB9026CA6ACD29FECB554F208E54CCB33A7B7C22DA75458B24B4F14EBE2F
EC660E0C4577F57B03EFC440A60C52E9D2183CD0B8E3050CF822769E437F1BD2
EEEE29D09A79AF4F1011ED91F92C69B1D30B29429FA77575CE99E706FE11B7E2
E541DF40FD315E9A2CA66727BE5275AF5BE26B59E101AF569B0E1E8138FBDA35
859832845B3859E0F1828AD61CF4B2094C06FC933D8206208B338D7328165395
3D5CD9A55B676F8E06A8B2479B33BAC92D236D7EB2516486ADBCFAE2E3CD58F8
8E97D7A85131D018429221EADD86596E28F817A64A4A35EF02FF1E9C3DCB3D01
4C5CE74A042C6C303FD79B932006B098778E103A46B371B37DD4D0D73B51F775
C454256F770ADEB6D935F3105639388F6DE06CB93C6F37B639EE60FEFB7CFBDB
91B0CFF043809454D137DD69FEC3886FD2B3594129EA24AB594A5953E3CA33E0
62D0E8DDAAFB03C8A3AB3D92D86B0DE065BB87734A0EB42D66E67F619DFB7DB1
0B8FC2C83B150C4F66697CDF20EE6016E11FE957C6815CB8BAB9610179F9CACB
976303CAADA11415F9407D1E2580FC994070FF8386602D013A3F9DA820B78A2E
9F16188BFF526DC09DA96CD1798E652E48E038872F6CD73AEA55C5081F2BBE3B
13070E2AAF9A707704F8B989DA3D5DBAFA4C60FA1EC755C32B503ADA54055414
071C1315F23765A097DE9AA264F7EF2519331D92DECBC0D80D487441E044FE65
03A8DEF469A6465EA82745534D019987FC1B21FC2C531ACCF7B21E6928AE87AE
F3C5FF94763804EDEF15692ACB185454AAB5D53690816C6F89CDA4A28A6F9DC1
8EA4318BE073BF648935439F32915E1DC711A4568EC3A936AE438C9C8D015537
E8B148E8C75F01DC93C295374413DAED072A6576CBB15E2F9380E905CB608E72
C41B759F0FD799823489D1703AACA28483D6B1ACDD1939592CECAD789407DC43
EE6578C7A0117513673A89D8A49E4D26EC161B55FE9DC25CDDB7A236D0FB0965
1C029BEF20EDEC706D67C54E544DF9B9E9F82AD60EFAA4E3780773C35BA134AC
999CDE2782DC584815DBF0016884F80D778EA6768DC800ACBCBA8EE3AB28C7E2
9BA45078BA2777802280C013F71802AEBE95243294BE3C9E4A764D5A30D0C605
F1DE526A30BFD6386DBE50D9952347BFABB3F953B8DEB2BE2CA5972AA9538346
A0566E6633AB3C3554D7E0687B38BDCC3BF047DD663F088CD3AFB922DD599733
90FB2948A32B95B2D66D43E2FED5FABC9BFA44D2B400507EF6014FA71A723C4D
B96B6E54A5A4BBEC08A32FADE219A5F016F5C21893478E88E1F091B1AAB1BFFA
170ECB8E879E7600EAB398D2A9730DDA3E52EF5AB443E7D846A1D33145BC9C20
FA2E4B6D26C7BA9AB3903B959A429EC5D528E440D3288838252D083093D89639
35DEFA32017566DA7727D38BECFE63D10ED539AAE21AE63851F7E07AC066C2A0
1828F2071BC2120446615BCFFF891B178EF2262A784970F31353E1970AA68E2E
13B005407F6B784C53ECFA1252CA5BA6ED41137ECC8F86B1B7E5C81873FF1583
CD031CEE1B9570E8F22339C3BB2B8FFA11159730E53A3C36512E604FF963EA20
AA6192CF4C6FFACBB46DEBA0B8281B1D94B765989D74358613CD86AC569EEC14
02E08D947D8C97F878EEF92900776C219F97A0D32BA261E7DD9C901B3158A9EE
7A8DF9FC93B9552A5DD60A6BB6E47C302FA23D5EDDBF6685BFB1F10384869507
3757ACF79F0E6B05F1B6EBBB1752C7DBF6D489433E6C0537731C72ABF4B2A1DE
DC1D8B2221E0E8B996EE5718E7F0DDD0AAAB7023E8FF88EAD00113C015FD93A2
7A2FF738C67202B141C4EEBDBD68282AAA9BD59A7B4D8492BBB42518671C326A
18872A040CF8F32DCD6D7BF9FF2365BB11A41740765026C7F671843B4815CF32
5416AE061E0DE7C86D7AAC80EF6637ECAA5D7E9BF91CF0A8BA824F308CE8F9D3
4C913F819C8B476F163AA8A902465B2987151B6332EB672DB8ED8ED0DB444782
213966212052B28C4DBE81C2CBE6965F933A6BD232D6F0EBB2733139C130804D
E73D4C5BF3337EC2B09BC8C17A999DCED02D3D87A525B0ECD73777034D826C7B
9BE71B6B92247946DDEE55A620462801DDA82D1C43884A530BA9F2DAE017FECB
AAEF2EEE8F71BCE3E29A9B44AD981C8FC9C689019E8C92022D112DA353464DE8
A84E9BAA10777C9AB36FE0F38B844D6ACDBDF6054ADD2FB1396B14E5848A9AB4
BC920CCE09D0F62B52720A81E522616D6959DAC7FA3AF7C9AEA026461087041B
91D45173298E3592ECA1FC23060B4999590BAFC43FD723AF5455EDA39CBFE5E7
A427AC6539C85C7FFD5B28BD0801BDE59BAF8CB8DC5812EE8EF7E4CE7B25D9B3
B8CCDB304436B114FBAB13ED6AD2C526BC5E00B60B5F624A55249768D8D28EFB
F25DC2C443D24E7A1EF6D5C366A063AB3BF66D00642CCCC5023B29C41D3CA13C
1B15EB83E8EDF26A8D870BC5A4099A38855D2ADDCF041E9F65E78D7085B06858
4E6981B2F945D85C5334AB10F7FCB5673FA4CC86B4DE3C42B4B0B400735DAA01
137BD57BB11DC75A88B9A825ABCB85067CAB24C861EA403D2A68B253146FA870
490DAAB51737214AB066A16A897BDD8C444DDC8D685372BC317AAE94C981B0A5
1AF61E9D18D1FA3CEB632CD86084016E31C67B15A35690754DF22ABE25E710CC
845E9E93661312A31CFF55559B5AC9DD7AF0D42FE85D7864A58AB110BE767F02
4AD2F0D4C9159DB341301D3D0F6B28702BE0D7E5B8C4DA5315FCF90575070016
3764164A698C34D28DDC710C5DD1155A53D5AAC9B3B2A8639CC92070423F9F0D
2071459723C5CD1A7F509B72EB0C894299F17916B924DA497405E58BCAC9D4CC
2D3D6F7049EA4AF8BA5E8C2B78AA86D9AF2A17FE34F274251ABF854004FFEC57
23AE1635BC1DFD846D46439C7E054FFC63F83FC394DC3DD90EE73BFED6F85B44
1A1CC7E3D57826788B2FE09E21897D3A425B8B58662F6A9B74FAFE38EAF96F7B
47DEF6AC644BB55F0CE614BBD3AE8933E49382BE83171F0FB42CF0E0A44090F2
3E45B130266930903CBDF0C7A4258919E4FE8BC5C4A86F3346D014D4701497AB
115ED43A734950D335BF2F656905D1A183ED779BDAD80BBBBAD2E79DE67549CE
49588CC3DCB1A8B29B93D9CDC5E4611729EDCBECA9832C4C66A25A81FAB137E7
0EC07787DCC2F788A8C849E8BC3FA4707648F2F20D614F1965056A06D8DA9A35
6AC4B43FB6FF598D3D64866281FECE7BB053B233B890FC474AAD801671E9D204
2D9D50D0D46F21B6A8EB9CE2EE7BD05A6E7CA8D97A09F17A7BEE728F1DEFB3C2
1EB2B5B4E719047BF3D427DD1787C10510F2EB9735B1DEB26D24C5185B413E22
4B0D8C79AC446D616F3EBA26C945B175E1BA24D97407FE8588E25A6D62E19E4D
ACA6CAD40AE7C5CE23A1DFABEB5A0E7CA6C26019B79C42B0745C877E178AE07D
6D92D94DDF98FF18C930676C1A756626AFD5FEC8BF7E6A2030CCF13825271FDE
0BB936EE6EE1BD4B4B67D965C5DA6BB17A1A3860A1A691C278CC4559185FB43A
03113F2CDF63F5B4392E2FEDA6FBFA41E220FA821F05B0362587E52B61D69214
15D241CC08B6E40873133B7D09FEA5FD26F4EB38A183145169A4909DE0BCA40A
4CB4871F2898E6779C8E708B4AA264D310AE225C96654E7CC94568DD73F4B787
66B6EB39DDBD29915F4716AE7D414CFF3A237482B6A098F03077A0886BCB71A8
9BF5FDE282D64EEEA5E674717A73993DF84D30B073693E6AB4DB21006C5A1FA8
D520819599E9915BD989954D7C66A68C757677A01D7B6428DA8169FBF8B25C9D
D97FD1E1F90527B02585AC9EAFAF7A5300915637125FC58572858CC4E073D46A
3ECC8EF25C4B4B5417A345BA2C9F99B361896FA61645006DD1EA7902874AEA0F
E4013A07FED00AEA2988E769D335C7F245790948382B129FD59A830D25065021
10031318780F2637E3A837D080D9CA99F8A6A1D6337570F718022A2B8E2B208B
4C5FC9531596C95704FB09ECC89BAD7A2635ED2BDCC4635CD83B1E3BECA1B8C8
B3BEDE43594FD9C64C283497334C31A748FCF5FCE58B0E2DE2F3C5DE4B6C3DE2
D9FE6C3535539329361A1988DC7C68E52FA5C51A12C04294D3CD895D9803CE58
1D1AC80F7F1FBC96023CA16AB25FB0EB532275ECB85DB1D3B14108167875DB21
0F0E2FFE81C74A7889859AE48472A30E33AEFC0ABDB94242A7EFEED591639419
7E7197D72705A93AD8DAEBFA5822D06D18F16B8930E408B39C73E561BA048C3B
8248A43CBB6E6BEE239894761AB234DA4084494259802DB6BCF0C9891BCA25FA
52BAE5FA7A4E31E83C7DBE91D9A85A28A81E8949E2BC995A76B2DC25E16B287D
10696EB07EB442CC51D543385C81C4F1A4DC0414769DF1E491BE6B24D1C2A1D8
959814EE65D2F310418D856A895172CAD9B6099245295EA5601D79D0EE765946
B69C49CCE55B419ED8F2B3B412707795DD5972EA92384F9CD0E50FA47D2A15A2
7D7BEFC12675D8990B7ECF4A2D32ECCAE036E2BB48A255E6D3E79BE0CD6D9AD9

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
/UniqueID 5000768 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B78188FA4BCFB0B51692D07B0BEBB930C6F0997B437E2C51B876B
61A563A2673932C2045833FAA35DB22ADE12102335D5DC734AE3AC5EEE6658D7
92EB62131E1DFBA441F53EFF9021D9D4C491F26BE8F54C61165CAD778CE8695C
EEAF70E3B20C64D4C2B34A084B5770BAB2A974E898F62BFE90F132A37E2DCA4F
43E13DB13C94DFA8ECE2B7374827AE168634FA007F8981ADA046CED3448BF453
FCD9A4F194FA648F9FC0971734BB69CB73439CB0DD021D44A7C11BF295E81733
4DFBA460FF3D654F9FB337E99E6D66FBA87A817EB9CA1536C84833870E3626DA
55D48DE850D3E6F6B29DA0E7C9D681283586F208DB8D58042E3A7CE55BE84822
C98237911453E479EAB65AFEBA3F61A763B40E74535BE56C9D8D06DDF9441741
5C9D9D917439368736619717FAB4F06E2C329AE0BA411F3FD522D9C33AD8369B
D7DCC9DF993778482F35F965973DE876FA19E109AA198A00658AB3F0D8E3DDD1
08A573F2D525202EDF2C3F52D34947E0964D0E8E89F6043C0D2C9C394D2615D3
5E1E123BD76D4E60AC8600305C844091278B74194D938A402F66FCF1A12B17FB
64C1F829392A4308CA536545C02DD6D3F4EAA9260F62719F5051781F56C6C079
9FC3AFAF5E973ED7F059ADB6655BEF2710A5A8CDC905404F26C04988D38198AD
377F5FD879E3F511D5BBA61EF3A7313971AA8878E61C6176FEC09C92CAB6B199
BFDB6E6884D083F28559E60B30C220A2D8114176EF977B58FB41F5DFA867796F
6447BDAA04D9D327FEA8AD929081934BFC8827994FB643593A016CB5FD306F42
A02D727F968C2409DF0564061FBB934EDCB895680EE91A51E0F2BB088BE63022
7E5F97C2BE67F09C2B47F3387F07C81F55D36CD56E8A94C44D8853BC7ADC901B
B9C4D659A190C42C12C9388C4C9A69AA8D6DDE8322DE1FD0CCA0E46E2B7F21E7
B076A05D57A88DCBBE88B95C677ED6BED05C8D05C1DADAE9A6DEBC619EE10B69
A65C62A7C586BBC4EC4963F739769F90EF567AA51B6169CD684C2E2089A27762
BAA4EB8AE94AD81147F357CD390A82A34FDAD813EB994B8902C78743E0F143A2
EC0D68A679D4FAD134E4D4B54DAB6171AC95C9F681216933630D2850630637C0
C8D3AD3BE9928BD177896D4FDE577A5447F002948406AB0440D0C17634E2F56F
E705FF23252CCCF039542A0BEB346D9FC5C329FCFC3489EAC3CCABD5C3EE7287
DC78EA15AD9F6455C11A7C230D1FC02764E8C5856FDAA68ACE73921F47E91E02
081BB5652A867BB557CC16B87F75A33EFEF432A1E2A8E5FC47B8C070762F9EE2
F6697B45CA170FC4D54D96F153A70446E934C9FE18281EF275BF550881FEFF36
A53585502F351D8102AA03C7605710653FA9CFA3D77BD67B4F229BD5C4177CAF
F3611E3C332FD10EF7D618B090A6554ED192DB2B04EE196B781C4499B28E81F6
6418F9C2E8D75046E9972EBB66CA1F2396B4E58D98C0B0F8B7640C7F261F9105
62351251E8AE7AEFE51E32BB6E2384ABA64581506FBF42389211089B3B89E311
B03155F943C6B10050F839941BAECF9DC100A76490A13CBDEE5C762589AF0FB8
C8BABC8055127993B8C11D95ADEC77EB5F43178894E475CFBA38C405FE27FF74
98FA87B88CF526AB2A3902F72813DD04632617AC1FA4E55A9369B754B02F3902
20404F7057F3118E30CEA0F5B50925429DE3730C26A7625D8E2E2FB25DA95129
EBB907A3D429065E7BE618A200EFA84D8A8CB84C429B0281AFD54AE529CED2B8
2315CFED4FE0AD16C5A095EDB8E267D8470CF59EA6188279E6199E0C7887171C
80A5CF304ABBE45B1283DCA58C1550DCA38C3F0EA66A31D9F0947584621D10EF
D5B12AB4C94E5C07DA432788B8EC341C45B6AA3B2B1D60F1C41550C5C435E2F3
55D9CC69C2C358A18F8AE49FE63775F89AC9F2A2E0A873FE67FE77C7427A63AB
FECDB0D59F0AFCC30DAB37E4436ED47B46EAB487DE084C6D9E8592C652BFB1C9
94A4B80A50016873CD1E31EEAB93E28B0B87E93FC0C8005C2EF5B8F1C1581631
7B7E8A86E0667C4404A689E94D5EEA38A90405F06F849953489A630B8D891799
F6FF6877ADFC91C9E55822F8129113A2B66270F10527E0F110F1C4B181E697CC
4A3C25DED16E695AE3C263297520F2323D872152C66803B880BC4E9CC79E7EF1
CE89873261F526A7A76639A8697547A2A865576A13F3E175DFAC939B444BBB6A
926CC70EEC88781619206ECA2054367623E584EBD86C409765CB58B034520465
50687618CBB8C3980382DD45653BE4E998E3C9A2EE14B138C15121CDB43AD8BA
0927A4D4985B0839225BCFC3F0F956573F703B2DD108A286250C2269FD9AF2FC
1D3BC878A7CBBD78384C48207E861CE0E43E52787C3BD02F1F1F3035F43DFF11
C57E30E2907CEFCB6A5DCFCB8312D96B72A6B2FCF4E3CFE33323E624830C324D
30EAFAD15F098322112BEDBBE75C62A4F6090867190799F50D37D0EBBFE25552
55D3FC3E5899481A3C6162DD8FC4CDA600FE68E5635A3DDCC40F4D8EDB493259
865A697D692C4C9EE3655C3FBAB264556E2318199CEB89B0DB5BB9E3A1B90F53
BB59B76BA490469F27A5ADF3433B277FF4D7680C77E4B55A86F362440BE9080C
EC847F9722DF20791205FFAD0838FB8AAFF99B13E08CDA265BE6FA2E376B1D75
7D0A60AE71517E8B2EE5FF43547ED37DDADF0455625EED765E159CE1C2F815F3
367BB277B91594C1B33732ED02EB5A0518D7DE496D5A98EC27A57138BFAB4C28
5E3251A90A1D051243DF71F1FF47117E1F1479272EA57B91AF80C90AB6E9CA4C
FB7ACB6C3AF6DF4C2AA62B31AC32FDE9C7C78B2D097900A9FA0C5DD40B63E581
723A8D54C07BD729E880C44282088D34C26D7561CA4CCDEE6DB6B57482EB6860
86EF5C67B77D06E217CB1EC0CC855A42993EA0652B45A54C9D7738B2DDB42DDD
599112E4B36DC8509E68E4789B7529DAA9F4905A65857EC1AEE8C805D70E9C6D
3E20F294F042B259EF187D7E314E6EB23B4CD57F912DEE92CF3A422115A02339
9A602EC150618320CC146FD79BDB82F76A27CFA8622B49BCB94E1E7A22FEB91F
E80547C10A739FAAB87E61691FF0D40E27B1AF0A9F0B96DE9497D9E66A014B19
EEDEF870D5F8628C56690C420BFE00B7896EAA824B4A45400BF45D6DA80AB3EE
F591B53FFC48A7CE52C6F51A65FC5C098B92C313C1C1579BFC0A65492DB8E4ED
FF0D4AFBF473BE11A8B42474D882B225558DAAA49BFFE115958E16485C690802
6CE3F48A3DBCC6368047E11C8B97323ACADC2C9DA8B1B99D2A7011F9E0C47C5C
68544072FBCA687452288D1A4192A2B0F1F3279431586086BE50BB8D47F10937
2FC036DA7ACC2E06F1ED969DEEED7C5583D9726D2CFC83B3C7399BC26888853C
1DA759102D28C1F9F43AD4CAE90DCED29D1DDD46517E8F974BA7DA5291887144
39D63B11A93FD9BD23416DFED865F3695642011E9033AFF9658074956470558D
0A820B6B31B83806C93A1D77D9191384827EEF58EAA4C9AD9B03FBE25463AC33
874833D72ACBB6C0FFC84A24F2116859641E4A4622F2A493B000F706BA8FD742
464519C9E07A58851D4071F91CF9B7706AACA6E7BF2A307CC1BA14E402910C90
195B81A5AB0C2F3A041B9DEEFE68B9474442C718020A9ACFC151D2C45B84B5F0
34B3A4151F9FE0D0D1F3482C6523ECA708E01EAA8F549E24930A938351B5301F
A2E97A22B32ADC1106D5FA1273D8EBBF544E8C5B661850326ECBE20D2587194F
48CE4A20957A02E10B6F3770C1CF80F73A8A1BE86E08927E453EA6CBC9227E8C
A2711AB104F75601C780C84E666B5CF4F11D15A2F2A5DC9C2F6E1C6EFD5F5311
7519B6E1660708A579E070B9FFBAA6637ED511480A1744F674FDD2FD7AF6EE2C
2989A3FEF61B5FD598F8990E5E88AC64047CD147EE9E2F5D0A06B6E5B8396700
D723E10088D74F9C1372828786B118AED573B93EBC80AA2FD52B12ADC9F4CB3A
28C285CC7C7B2068463DE128F41DBEB77E492C923CCAAFDE2D53AE802EC3133A
43B487CACF857BE215EC036DEB2D3126E5AE8549317940371F7029D22D5B14BC
EB3E89D2B2F2C0AC9CBB1B15F9C6E45DF2F139519182928BC97747F5E07227CC
3646D2394BDEE86BD532DC4A2D7BA13337B8E82D9CAF873BA9210B87F23FBF60
61DC43311F1DA9664211D9DC350205241BC992F163D89A1F6BF9541F81CF478A
0DD31590773C0F59AFE16B854AFC0479DC7974CE13E72C35E700955FFE454004
7B31B82844CCFA0C6E31B55AAAC452A1660A5C8F1DAD23877EC769EB1A4AE679
A6537DEB7136966AC61BDC34B31825D0DD966F6A45D8B59BF721DD10EB674F33
C571AC427F6DD6D94540CB0F268F43A01DF52B07EF48DFC6A059A5062B38B72A
79341D9694EB60C9E298964C45E31A28BCCAC3158EE7CEE5A2FEF4A78A7E70EF
A2B3375912564A2F80F26FFFE4B8391906E4268DC216C11894FD5B9D144E045B
C2C6D9DF315FF33B23BA7278A1DEA73BC0D20188234A013DE9844AE68E81FE24
6C5C45F9387D8A2C414C1B9664C37EA41E50DBBA093AF865C0D5DFF8BBCCA3B8
A10DDA22A70DB03E6367D6F399979773E65F99DFFEE87844A9B050B8290D9CE7
D92C70E149F355704EB3FF789D4F3F66F36E53FA206374EB809AB3CF89BE4BC9
BC6E491A3472A8008606670BD8D1D7511ECC0E0BA3C45254644DC37F81E7B762
A26E19CF2FDAF40E4F46D288224B5DA04499DF491AAA58D7DDDF0F45EE3CC3F9
6E5DF33613301E1FC507FFB18EF9A1FE3F379683084125A8158DFFA80433AEC8
7B2DC75B888801D33B07B00108F1E686354781A4041D64F0CDFECEBBCF9BC736
D56D3A398AB8E487B158AC9472D88972848139A74A515E95D87412A04D7A7289
477AAA3A68C2ED474BECE09531FD303470C08B5696C069A8BE85A0E28EA82695
8E2E2485A634831B66ED3C655D447D87880A39D35FFBBD2B90852AFB0E303E33
AA447C8E264A1B39F80A21663A1E13027723CC3E0AA79D8ED9FEA14E87C6245F
F5240118B8A56874CEEE2786BF023B0854DBB8B72A6B19A1A46DB6DB5D038BEB
C55AC0DD0F6D906EE54D25B09BC99593E649C5156801E041F5B2FE6F0FA8AAA2
A074193CFB9ACF145F93BCEEF23209FECA3ABC5CBCC0133182900C862AFED94E
3C734E691BAC2E0394571A3421334A0BA05CC5932C9C421177BEADA583F6396B
58DFC6C9C29BCE3750EDADA4AB4862E86E7A6E087793B43601532AC80F45B2B4
6C02482D55A417CCE3F6DA20AFE14EF390F0E9E80DFA9402B71717937222A2E5
1D475CA8A4A25F5853A4416A4C660A163E044EC777E02B8170AFD7ABC4DACAB3
5524CDAC863F56ECCD477A56D57B11FDA46960DA1EDA493020BD0D65F20AC79B
41CF11663FF70F79683A8D09079D146F4FBCE661BA9144D7BF9C3C33E6161FE3
E030F853EB870A867A52342C5B42C8794910427AAB92FADB2C39C682001C411F
AFEFF3CD949033D53158EF5B5CD757ED47D8B9DD875DAA24C1A0964EE63B1A4C
4456957BA5B2D1C9006AF9DC85FE2A1B5F160C2F829F40DCB73005BDDA389EC7
8DF63712222F66CDD1402A550EB5E78BBEE84FF385F528EDFE7E39CEFF9D0109
F63E51E5D4043A3F9BFD579560D30E5429719258DC3B3036186C197563469BD3
8B3A39EB2698718298EB4B7572628E1DA624EA6DB8629BB49BA5C4135016CDD6
9CAF2850DFD6BFF69BDC8E31E3B39C25ECF671E013C89E011713A91082C242FA
2783A84310C90DC61FA09B34451B38DE8A9024AA89A9D447F41D350FA4285649
4694BB514B90C16C2143184E04CC59DE0B4A8357693CFA3ECC65766CA4882521
D525E78C68D978E1B7DB21E9431FCE0B8B4BED7DE24C932CCF362F3EB6D2A6F6
F0356D220A59C6A7E94EB1855267CCE7DC8FE91B0C19FC4382BC1F101EF10900
1D6E3934E1383F550595883EB3F77BDA95AFD65A784B0595523B73ADF7B6AD37
C5E2DE9C2587FA104C576CE48F5269559151A1F0F9444178E4A1AB52973316D8
C092A324F2470001623EAE46B9690048D32D357801A1F58FC190014AAA56577F
5541F955EFBF06A76049C5296A367C8C59112F33B6055852E42EBD69A0FCF5F2
415FE48292865F9569A4AC138640A850941B9248C82C64A7BC967C33363125C1
CB4C5ACEC647E69D217B7E3E6E06E1CDAEB7545EE55E0C4507DDA16F4F9A17C8
632440BBC4C98BBF61D27722664E92338FE0EA3136C37F02CEB64169DCAAB4AA
FF08B665F5AF575D87E4BFA75D74EE0EB685029B068E5411AE6078FCAD1CD6B4
736EE7D693D0641937C35BAD2C9B321C52E32F381EEC1549F55595F4F9EEAF18
59506DE59B3A031A0C3F9ADD7FA90638F0F45966F579C7BF9B792DB0434133BF
96A40623B8AB825D454B045E617CAB98895C7F8E11567814B73B60B51CC6D5C6
11987E02C1723F284C7019BA2F2B6CFBD2C6D5DED124B77800ACDA875B6C24B9
3C900C3204A95B134F2483349B9D522ED2AFF8A17E7774056F7D9B85F3ECB80E
FB672DF548AB6CB3712137F9A3F336980BBA88255717C59C1B0DF4625CD2DABC
E725CED203905A7D6E0906E7D33E9BBEFB0514F5811EB992C98019F026E5C945
A19329EE51611D5846094ED0D2B11F7055C420E560D0B1B644B6C84568F56230
883A71A5C82857AC9B8892F7AC8AD6436488641EF57B7498A625B03C376CA338
0E3F720274AE8BDB08B32171A106112E5C35276E11FFA074FFA496CC2FB151B1
9A7D704F146516ED437B23B06476159F7F2EBA1EB3929CF7F78B246A6590068F
9D0649A3294E60C0DF8C4F235675E7D201561026FC2236F1187FFDC3FDD33809
4CF99EF2D5D7106BC3BC0A1DE724488EFF845279E1197FADD24E5CEFCC0B6FDF
6401CDA182C495A48021B70DDE54E7A3147ADB37721FE64FD90880B5CA1FAFA7
E42918772969EED954DC4F45DEC1EC67F55BF3F3D0DE48746AAD10C79DCD947B
45A81DDCF79D6C543B80E83041F0F69766520780E63A9FCE0DD6E0E2AE8E8E19
4ADBAE09714C625413D5EDE91EDAC5625B1AB36C6E6666B52AC5B2FBF6A33E86
E66AE9D040568FD7F7675B066EA8F04EBB6FA9918A4DFEA8CECF58C4C6D3369F
CEACEC6380042AFCF8A41157C12FB6B11B0059AE527D6A1ED0432BCCAC4D4FA7
B3DE7A161CA702AA411E4F28CA1FEC5DAD355B7EC454CBDD18E9432489196A43
C0689084A2683F928642808F7A57E5DE485936A60F6819B99528B5E9E0B4BA4F
D0F5FF84C3F79A87B93DF3280C92429A0CE84FD20D050F9F2DD6F632D57F1640
D3D9EEB2C9C1813BD865E79DBCD07292B1DA29845F284327182ACF2BE50ECA79
D20C6E669B07BAD93F3DB6D02F716B3A53CD4E8E8DB5D89825858C802E424CA1
22E5E17361C6D75EA31E0B946C0E7FB6DC2F1042B43ECB04151DA44751D8CB42
F9F216617B2C682D48DD90ADC0FAFD7D153DEA19F699F2AE15914133F0F6B75F
91F5147F3191D386EEA49A19E235EE4DE1274C460C45BA061368F222C7805D7D
E10DFBC3BD75D532469597BAF0441B1167839712B778B945A18093AE9CF8AD01
94D70FF8F929ED5A18C8F2FC389C3A2EC5C27C997D66D0208C05E53589DD0743
7EB77E7CF51DDF4CFE39044F00DD7DD50F004C46B0AE135F2E4F8DA447326C1B
5A5C5527B24019CC0C47AB94CA710CFC5F36A60B07D90DD072D00DCDBB381FCF
2789B82E9707141975EAFCB5352CD5620F65A3126574D0D18EE8ED585EFF5185
88CA1C4AE1689E7A15151B640A64122CB248C86F5F68D803D47F5620DA64E93D
AE90289E29A0DEB64B4044030FEBB17DB10381D462DD91450EA63BFC498A7DBD
24EF5F5304A6E63656720AA70D07C81C56EF12174D1B2F77CDC1BE28664FFC2A
C3ED49CAC9DCF1C3A8E7FE834B296BE93E6F1464AF9B599E402EF513DC2E1065
CFED2A909592EC18B714BDAE712A7DB56855260BDFE36CB012A4A6F378D19D75
D09CA3A28B0700705F324DFE85B07C32EE4DED242D7C244A36CB8ACB1AAC6539
9C371164171FCB54C08521F83EBA86F791618BAE3DAECC3B0E93D53F7E841499
0F3EF972A94DC3E3D70F9BC72E38C080386C244828CC7067BEFE7DB092A9F948
8E09080D04D77CA161FE481FBB1D9D00316E093E006474DB52A1423C8AA69A72
6F2F1BF6BD91C2BB1479713AC685E1282150AD5E7692C6C92BA630720F1D3DFF
C39554D67837B60B666B92EE51342E75CAD874F4565380620457F975124F9B58
1542A21402010C722C4BE191A9E280CC64A45A1EDBE507F2937D47C3CFD02979
00D14DD7CCEA52F6C7D47AFD6398ABB7E80743D1245E88E65085B938B4FF6B43
F1C52E927B4875327982916A8FFCC5DED39824587FF740C8B961FDA0F10CB4B6
F6A5CFCF4B4A19EDD4D70FF5C7BB49F615BE5DDE2AE64DB11202360018201897
752159DFDFA95AC18FA0FA0CD9C72A050A3E36F0FD37E95582DEB4BEDF160C4F
8ACC0182BB7DEA6F52054C01531B059E22913E6E1B6DFEBB1FD20CA44AB106F9
1E74052865204C77C39CB9775DB55846C0F1622F8503B04966E9C468AEDD2E50
604B7AD388D69AB6F55588A17BA58446C5383E18CD4387EC71334D2B68AE2300
C540032A2FE097678B9901F18DEA4128F0D2E44A948FC980CA26861582B7E064
C23F0E531261D8A4C96DCDC2F2F507CF8A632E86B19A9BB0D382C7BE57E74F56
C9F94A6EDB161185DB2E3ED88932A9B45DB2CB780C76D9A343B87ABFC3E54E49
75301273082EA3C2AB68989FB2EA16BD2E4D9B919CE630EDCEB24412475F8E45
96FA3D71FAC8D2244FA958A2C1831E308BDA135AB4615E3A876238A23A0984BF
350D347F9221EA6CA2BEBA45A82F89D746342A56FCD7ECDF6B894F6493E3D7D6
F4636CC344EF4B29C522A0D17FD5AAB33B78C84815EB79BF784E81B9872D2996
C83A5468A3A94DAFD6CFE9453734C37311B69943022836D927D041161E9E1D05
77D4E8A4C577105607A13E803BC9F2FB49CE2891F21EA60DD3197D3643B1DEE4
E24FFBBCD6EEA5BA60BA3B66528851BD30DC26B71E2ABB1D0C4DD8CD2091058E
17E8BEB464C23FE12697122775C2EFCB9243F21445E409AC8D1FC3C39E7C5C5B
B59C2F5BB3D231782FD31644F9670B016255FB56E1A94B0311F6E921E22D4C80
14B6F36030DDB7C4E962918CA7281A8BF188DEF88D014EEC47B56BF30EA02127
31713425DBD90F5994472C8D9C9689A5D8572699B4EDE87BC08F1C79A48B9331
AF42A8BB29B3BB3A4E887B75833BD1F61A56BBFC4BB3E72F50A3C367A8BEE6D1
2EF2F11886AA4234AE521E8B680A1E7A979EFEE1106EFC9790B31E3AF2BCAE3B
DAD6BBAA2B6E8FC7B4D47581629D9D3C2685B116AAF7A34EA24F06387B658C4E
CE3C360C7A2154C513AB411566746F9CD1642CE2CAD23CFA6C778ABC1C575ED7
CDE80071317F5EB91D9C6C3589D2BD57405BCF1F3413B8CB18FF614B741874AF
15B4E1FB01AFAF0EB271C8ECCCA1C09A2FD7673BCB2BC1152AAD7B0DCECC5803
548FA948DFCED71FA8FFF0C65BE7B8D1E7FF64C31B830EE2341B542A93B821B4
9AC92980A0B96B600E19B04B7D6B8693E476DD279BD5FCEE4B1DAAC83364BF83
5322446D45C33C53A78EB49D565D1F0515AE7F00F7DCB98A858799DFCCA999A8
3B9AAEEFD623D5FB647745CEC713805709D0F4C231943DAC8E047A471BA3C4B2
74B8AC476FB6838244D194DAC2D2E9AC4CAD997860EE38F96F5ACF79BD7B70E1
1FB4EA63D4E01A7AA914D158C17B4149D7B0CAB9293694BA0E3AB63C8AB5760D
7C71C33A8B97A7F6735855FF74875CCF50FFFFF07E3614C2A7BA287AFA8B6FB9
CF5785BCE78320FC1F591011BB9306F79F6A0C03D2C6DD0D30847D6F77756444
BD943F4A10771DD89B204C94FCE36CBC3711356762100108D97515EB687C579D
4AE31645DCBD8B93DA271A8820A3B5DEECC9E651342A7A1DEDEB5A196AF943D2
D154B333BE4F5EF41AE9239BEB792C3FBC717357923FC3C891EF3DEAFF8AF1BD
00932E89CCEECCFEAA2EBA6ADD80CEC5A99A7B064585A1DBC713710A659FE8D5
FF60F39A89530D4BE04F9DDB6E9BBAD774C2E5E9E50E210E8943D298D934584F
7A560F5A4B88CC16479D81D36CF650B4E1272EC03006C79EB5ED1E98BBB1787C
437962A79CEC0C2610981B75BFF1F32676A7318FBB44EA54EA92687B157C9969
F4D53C79F28F7DD18E3C6BDCB3EB83B7911B4AF5C6D0673246BE3D55810EB1AA
678D185BB6B984D0BF951EAAB369177BCE1DCA2CA15E1793F05D10FB41DBABE6
CC8BF4AADE1DBC4D863593DC4225686BEAEEE8D817FB65855B9D7A9327C0B4AE
ACB64383E60316FF7A314FC8E08A372DDC5355476C960AF0FC8AA8355BB2ADD2
3F202396238D40B7BBBE71FD33C54E5E07032898A714D81372FEB996799550BD
01599A485303D978405E5AB995126AB30B6A6B5FE751369A1583031D7CEB6901
0B465A12F8D66E5555468E6C9D27BCBE15A9EB66A86E62FED3BD3D023D7BBD5C
866324996D4A1302581FD0AE707E786352EC1296B760AC298B4680F956E0D318
7EF03B5F1C9FFE83AE3BAAABF6E3A47B5D934A38FB0E4BD845D27246C624127A
9B4C471924AE9CFE5498DB56789AC0A5C417964B6647282B3DA98378C47604B4
0EC2A68D7586F2396337026AEB9AEF4C4B0607F4724F660E2A2FEFE23DFEEA58
4C292A037C48D82BD74CE46DBA866882E19E0FC81AD41EC209062D3987048729
1B8F2CA52BE62069068F19A93E8175B00EBA2A99DF122D879A03D46082D37759
F6E1ECE820D3E7240049A7E25890165A2A187C787AB44E960C4EFF63D265E829
3F08674353B700FC02F1253311CC9792679BB8DB4D6937F88EFCD491797614A7
CC1E1FFFC692AE1F60D2AA9C64A4331BA7CA8D8F3D1112C290699EA6F1C28242
94E868D566CE01422DB3ADF83D1F5CF4D7661246DEB4E4670058027323DC21F4
4C149324F2F423E03C318FCE1F8C65C3D032C4F028718766EBE5EC4BC5A6819D
F70C3156EBC5132B0F8D2C9D6382668536331126310DCA5C378F3E5700A0EA6B
542DFB0A20011F01F55BB241F77E21CA2E9FFF10478A91746B8280B01F688259
71E25EB9BAD3D831E55F5A4C1EEB659C976EDADF7ECA2ECFAD5241051B4C10A7
15639D0C000B0B203896FEBB0D5D711DB64E87F7B6D4D2534E6F9043370ADE04
7D4A38CA04C94B8A170D4772474F2620E35E2EB4FCE27099602EF06B15DD3B71
DFAF5669A33F27BC23A857ADF774EE4539C20785A18FD5CB2A545744529A7642
73BEF51588616CE90296D1DD586F67B638186FCEC76673B27CF37E075E4BB41E
10DBCCADF809417D64A1FE6DF30A47BF475067FAF13E04E48E79A888B2B48076
E8B82178DCFCB172B731524F7061C52B4303C360C106DFDA2600C4F4313CCBC7
F87CDF2D87D0C540CC6E5057504B5BE20273725E2F63553F48DAB905D14C9351
34FF7BB6054D60837D23E1437923AABB2B4519C18965BB801C6AE73A654A63B7
6210647CCC6650D880D324F487654A93A758FB9F6CED9FACD96167233B60B9C4
EF5E653FE630F748B9A2214C7DF4ED3DBC41FEFDEFE38DFE52F24207F996C016
2C698AB8576250B061C667E8D761EACEED84C9D742135288E3542E48085A1912
9F3B37DD9A1E262ADDF187520320F390A8F016955829E16BF0FF1C35CE99D855
E783B8C6E7A62CD28303BE217B17C1118BE7FDD6E06A9541DC73F807CB27A9F1
5352C2F1495ED9F4E0B8D25358D95E3A15548131469DDFC5D9D35A6DB5946B41
D844CFC581EB76250BD9BC76F07DF125B700C452438BDB485C0EF02E529238D8
25E9F3CBF4B2884BD6C9C0413BC21A1963B0D31559A653862E5F928CCB1E715A
F3A585B6EDEE195DF784997D430C6ACBAE733BD277C0D12F953683CDB4A46843
7B3E43F69457AA9A5FB6E3B8310418BE896414490198D3E91AF18446F0F3B3C5
6A6D4B1E7B38C87282674F6A9DDDC1CF1ECD06B4A8650669D752A40801F31EE5
AD3CFEC649F7B252A35328E48FFD135BCCE123095C874B363E82765B7056766D
8B4FEBF2FAB767032CD283249E465FBE19A3753A321C0027427259261679AC76
ADD760028E81C5B9BF0E4DBAE820035F0FF26BCEC572A62D585E51D23F0BD47E
6FA900EF9B09838CD57622882C4361EB0342C9DC41169A0EA996F47CDEA738C3
0E5AA6F2A048601173B05697D5150B2F7606739C51AB3D8CF7D5DE658E71235C
D955BA898466314126FD43B2370A2F2569E15E5AA26D14B3B75E9DF28C4855D5
F27ABB03CFD8C16481CD4D24F56835614ACF1E902B7D2E96C42420B6F33BDE5F
27AF17B470C31BB3076AF139D03A8A1D4689519C0E21659A629D4257BDC165E2
53810E6B20ABC0218311B8D63C2F3DA934971EBE38F1392EA225870D89CB28F2
44AECB7E479885275D09D8534BE3C6037E839C58AFA3968DF37172A231AED4CF
35251FEB159824ED84327EA7B7824A4C8643116BB5607B3CFA8CD576770A5169
BDB575CAED0F4A7558E57D763004CA525AD0B0CE78A7B23C517ED9CAC5949CAD
B5BCD8A0034029543B534DB1A8085AE8604AFDC07C6AE55E523E0741224D84AE
85544FC7508F037B32B205AB71FD9D4673F7E1814C79AC8A73C5D98BFC0E9ECF
3FD577948B97F8E4A911927D4E40E025E1688CAEBFE50254971722D40479BE9D
6FD293039B16F255EA2DABBB7EF98423C7EAA56E93F8F4C47A8063B078CBE4CB
885BABDA0841184ACEFF2548E581F40AE4BDD30D355165EC3D14EF9E3FDF3C21
2A71D6D3BEB3D4D1EE29E46C0983F1FEA65D8D785DC3DA7D707283AC167D7E98
0F562A5BC593827583336CEA7EBE04F7ED2060C5C59C667125C77DFEC6404A8F
62EB3938E17A032747506AA18F454325C803BF645346957FF866A00CB240163E
303153693AEFB2B3D0255FD876B6AADB0C92264EEB781D18D9B1C27C2114D18F
E9AE48AFCACC0A61DD545E42CFA3B3B9CE3606E25F7A2D80DF5ADD6BD04BE131
3D9AD87BEC0EBA64BF6C9CD86FB7113E458F6E4DC7A3A9EBFC273101E85318F1
6C541C043179D37F2275AFA2689E74033C5B04349A10B866583AC1055E6D3A1E
49969ED0AB4F879B755C9BAD087F101F3AF1A60D47130FC06DDADF82B707EBD9
9086A07169B1D2884683742B74ADA93B618A6F8C9395982D07CBB96C1835A31D
E6CBB07DD9E05CD7F55C96204DB1A7E63FDEDFEDE180EBE8E6AC8B9957DF5426
1C9C87973E9EA0C612473750350B89DF297E08E3B027A600BE7525389DD4D28A
D0C38915ACD120DAD480CCF17474229E3F2B7620D73C4BBC53776157E0388768
FBBD89D6FA80A6CAF71484666B0513D9B1E30AAA3BA4AC674DA0B18B5A15AB37
4A3C6CC59F4D04E19F0AB3EF3A85F01B86C8778A8D25C879BA1E9FD27457A2C5
39176E9F1445B8D94D9BD61BC462DE82EC1DE3C8992F25F84A3EFF8255BEC49E
87F3F1F7C2F3EA0DD362CD8976DFF014E013C5DFD7B90F1B47DABEBE22074D17
3784BC584C179FFEE6B248164D3A8585BB96FCA431A3379DE6B58E6B6E802185
00EEE6EE5E5B8295E5CDB6F03CF37C0D8767E5BF3B8EE994F6BBC0D54AB4C408
1D3DE6AD17E38D828162CC25FBD203AC964F9A388624E1222889C418B368EC50
F7354C0B837ADB52C5005815E5409D79C079C98F72B0CF4F26C765E708799113
63E22BDA2401AF0A9D3B650C84E0A44775400C8FCFADA7D7D1897014070016C4
01372427DF402D2C4F7CB06F281D5B6C987B595C1E5C57033BA0081D1DF5D53D
EE77F353E54AFCEDA7608B4E8C6D51293ED839BA300BBFC392D9E9F9FE34D9CC
1795B56DBE12ED35E81B3027ABD145E1EE8EBCED002254C08D3D8455D4A864AE
DA8CA0BB22D55821B8153AA1A311F1752B41646638D611054E1E2DB688DD7723
A257EA38D7EBAB70EC10FCBA1448DB2952F62ED44CD54131430FDEBBE6C931B3
BE32E1F0C43B2A3F13FFE07361147C6F0ECA1BA9FAB1813994AA99CD63E4A3C5
E4B120D429F3AF78D27766044755A6F428B0D6DC43379C254A99DDC340BAF14C
DE749A996F302D335AA79CCFC1940449CDFA7EF80DCC7242ED0F9170523B2153
339EE52C66C5DC5F1FED52BC1F16853FAFDB13A5D6033D656B4EB0846A6F5A93
7844C13B7B9D624A431FC71ED3EBE6F38B703D5046ED0FD536EE4D3E7059662E
646F8D3ADA5CB9C32EF750333036D1A09068854DA17E3D77A0071AE35AA63662
36D873853C1BFA441927F7A4F7916C49AA32CC720EFF8021C0AABE6FEB6F9551
B56E244E72BBBFDF56502645F141188DAF3B54D3FAB6B88BB736C6108D22A254
08DC2E14AED563127E69974EF9387D8A30770F84EC461CCEBD57779E1CC5A25B
51DAE70A97A074CA02B221791B8B307C3FB300E639621787B42D2728117F6870
96721384FD16730AD0D3EA0362BA998082F7925B2BC57A82083E7C615DD35389
685D5F77EE57FFCC205375490350221D6EB1867967F95915C45A64A6E6CFD819
C856703CB653A29335C5271BB40EDEC1C7EDE4CF5747BBA2499DBC4B6A9CE108
7591FA817DCE4108DD064BAB74CEBBED98133E2F47B24B80ACF643207B7C02DE
BA8D66F488AEDDB94B6160E173D48174778BB372FD39DEB7D09D7BA8EA6E0C52
2B45A912C104DDAD578440C1EC97541B36C429308C08BBA86356DF85C303316F
A36276FF25F25064B73B062BD142257103A8B3D38ED82A1B824952EF205B7088
3D248D326C184F688025BA2B8BCE318686B4117492EFC5B131B3B5686A0918D0
034AF472C6AC7417D5414A8AC1B3BCC31CD1DBF7D0DB4C32E57AB844502C2688
97CFE1DBC0B237B125BA469ECDC6238C1C4EE950C17E772C8A7E9D75CF9B9D2F
6333E9729784B02597D72C3A7D30DA699DAFED1B81116B3CB164C52621B84643

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /theta put
dup 26 /rho put
dup 28 /tau put
dup 30 /phi put
dup 58 /period put
dup 59 /comma put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 113 /q put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC27E4A7E07D09FB08355F6EA74E530B0743143F2A871732D62D80F35B19FD2
C7FDF08105847F13D50934419AC647CBA71DF74F4531DC02BBDA22AEEA3FBBBB
407E0ACC52BDC60D01A29407CC4F93EB8BF6D4813E9BA858D54F38918AC82720
4956D50291F0546E50FCAFA6DBD0099123F5ECD4AB338DB310DB4CAE11337A89
8ED99B6F483940C97544F888EAF0CBEB11094A13C073D0061808662A04A82BA0
AD35E8782F854AF66C20C0FEF18D0ECDD1646321B93D327E53D88CA0E825FA95
05AA57BD76812AC2FC80B948E955B4EB78F9CD1C101EF89004F58B8E4D286FA0
47E70EC4B3340C6B6BC5EF022EFFD0DB623CB9F89A56062A39A8FB54BA9E439F
97ECF9C385EEA131D05FB0A7B9318A742637111D3A2629C56437A84B8E640681
1A23331A2363A4AEF01578458B241364EF4D809ED7C00382F25F0E3DCC8CB3E6
7237C1E39E26C7A4D0B520B3777375E16EF5FFB584E7C88CD8AC69EF68E65F16
C3B47E0689B6BF09B219C4909217BA3A7BA8279C3F4951A925296E476008CD28
B5EA73C769D83A592E823452C9418126BDFDC25F434C0FA51F9F20E14239C90C
256ECF93BA6F5D50A420CFB0BEBDD128C45370A89D66CDEC035B85725B2BB15C
518B35E84F3C135E9E79C2240F8857E2FA1354C4AEA3DE322EB7D02319C1AC53
FDF4D83CFA61BAEA0964BE6B473B51B2478E4027153470FC92050234E4A56177
8A30BCBA0CC7FD76C00E844B08561C1A3AFF23EC8527A54119E73FE0A149C758
3A34C9D6AACEA54DEF56DEE5A459BE6700FE8EAA81C55C38FB4F5E0D32D8B123
C5CEC44B4D041DD08180B0607C1C7E5123FEC0D1D61FCDDDA99131B73543B157
3E58C0B2D38C1B772FEDB1C0DB8270FDE13957F34C3EE01A06CA3AFFB58AFCF8
C400118420FAF5F3B9F997093F2CB769E5F03BC7A4C3410CF0BACA5CE77DB37A
016D0436D69F68C579D40B163BFD8B79EDE243F6F08C4CA9678FB84ECA664568
6F35885FD001C383917E5ADEA223E83EE67BC25CE58CBEAC62A4CAAFDA9EE9D6
25F5EA21845958C24E3EFA72FA30E73261BE967F6F1CCE16D3A6D3352513166D
8C69157075ACFD92C6AB1997EB7EBBFC9A4421DB8A5056D11540FB3D42B2297E
7D25974E68317D4E42416D1F602EBCF6CA990DF7DE98B9C85B1E55166D583B4F
FE3FC7A8F83F373157EA4DE231E6892D139C06CBDA3A39CD22CEE8C61AC3869C
25DF35D0E94A18ABB81AE4FB8D148A9C6BF20BC0A844416AA7B3FFEDC51F4897
BA4B08BA05E03170664B86A629273B8B47792F342C03778F05815541E3DDC63B
73A094036378D634FBF0A8D53E92F696E3C6F3D3EFEC07D14F2F4B23782BB108
5D8980531F0C362112D3E5ABAAE7F0EBF97807493C20221708DF51B0B76CC354
DA63C4D84C792C51DB0919FE0CD768CA1518EE422F47E6098001EBD4F0D239B4
B21AB1FC553CDD73CBCD1F551DDD2D6855E4A560521891A76883A99C1C5ADEFA
4507BB129CA4BF9AD39F8754AB2602541A2BD64FAF2BC3CA37BC0A905745D9EF
4793E26DBCAD89954554849F6E70AB73A619E1EEB1C98848A99D54ECA1CD7E88
B93CF4D9C66D2F9E2E72320D98E06AFFD8CF2DAAADE04A4ED441B1EF9E00416A
0C2C3BA47595608C836E31BDE97D7D62ED8DA8B2BD4C88ED858FD81A07A6913E
A6FE597B9C4A07125651461828AF25CF0E25FBE51FF4CCC80F23BB86D722F83F
A31EDBF0EB97FD5A24FBD4B2EBE12B8EBB724BB927C6056C79862D413FD2B4BB
0F7DAAD52AB51A9538FEE500DC9C2EDA7ACB31915EC9CB0163416EB9A27CDECE
9634B06ADBC809D557DE8E1B773572057286FA7D731951414F607C660C662063
1928A20607CF6494BDDE8B9A247752EE62DFB84B0A62638039C97BA80946F0F3
DAFD8B773D5A5CA53B36339932BD23E170E125C761E171F9A1EC9662094FBB15
89F2C536C55C33B85B57ADDAD0E0D1AD83C0D568A0C291664B99AEE641B11825
108C5A301FC1DF2B37FDB2B60ACADA60621323FCCC677A1D3D8A2978EDF0280D
490B7E614CA31E6A4AEF7B5AB2A11A4D62F1AA4CEA73D4E4778F82E2B400B964
5BFCD8FCD6FB18E0058182324F1F7410A9E2C4FE9A4A299FCE0DB0270BE1C0DC
EAF2D3BC8D4A5D9960C95E28408EA43DC077783A43B0DA1F587A9B65B6CF41DC
C0366E3B418848D292D747C525F8477029107EF6963246E61D5A3534BB89B834
053DB1CA3A75EC84BDC74AD1B1E6F5A4DD0A4DDB500823DA1734D25D7CEF07C3
56890E0E5DFBD77BF856BD4FE0DC8FC5BA1D7F1B046B8665FBB0EF3D3F78F435
0810A9FBCC6B8F5FDE4516AEB97BB73BABD0DE6C66EA6DFC80BE831C40BAB955
249CF08B99880823E8CFF67C4ABADC7ECBC96A76ACA4030A15CD61E30539B862
893E8102B7709223D5D1A88291B6E4728BF6D6D38DEA964F9B25C26842E2AC98
573FCBC84C8DDE22149A8218D371A1D1FCF1F29AAC8716160C45CAB84E0E8295
85064DC5177054251D257265A5D0D4E72CE831DA6D89B30F8A541D5B6A80F1DF
7FA4CD89F043B8723B709EC45385C1907CE6D02ED7379109B6D0743436296801
46B5FB644664B7FB8C5FCFBDC32F56D37D59B11D984F003046133AAC74CEDC85
DB9F4BEF6DCF6467CACAA7294A465878AB7FA5EAAC730937C2F135DAA729653E
B7BDD271B55DD57E5520B25400FFC2C3821632A98BD01AE05015AC5C63A62C8F
640261A7EB4DD77E6FAE198F0C9070157F98DD0F67AFB9C0BF0D90708AF220FA
AEE681E70950A9ACD3658EE2173A0F3CDDF523DB199F1221D2AE7EF20A393CB6
391A907F29C77B95136B10FD6D12BB8449A6F84AAAE77EF60ACAD82752294738
F15D32F0D595A0BDB7480AFE7B99EF03868D2430674825C305F83664B3DDD876
62F026513F51D272C6D06D47E4FD377CD2799F70DBEC80B6985AD577D1B1B55B
CFA3EC521527D04877D63C6CECFEB673526D1F8554F3EAFD2CAED10F2E273D89
EA94BBFFAE8840EED347B1EA89E3560EC25EDE76A3D23E4A4C8311891EC5FC63
548819257811CB3FECEAFD1864ED0FB5B788211EE7A834C38078416109C17E5E
4137427FA16DD6E00FB10A16B9B7A95DEB01D1EC2B4D424091D161FCCF359B66
E8041EF1C5AA1FC98C60AECF15D7ED2954EB99ADD5352AACBF83BE30D3797F22
209A1D01C2F875F8F8E937464B2F455AC6A83ABAE4C23A8F6C7D8539EEE46F8B
4A973245C42AE12D1858C12D85684960607CA94CABD666DFC966D26A390BBB9B
20990559A5D72F84A4AF12B67C8747388103E8EA7EF88EDA8363A5882C2137AE
2596E975455F279FB2E84B51DCA6F653B90FA7C7E3CD71A21EFC419887713CCB
0EEF6B43F4CB0BEC539063253B405A53AD8B2F8D91354552165369D53518BFF9
04E2BDEAA918FF7046E7E2B73DAA01F72E813DA790E894B93C51242F16A306C4
8DA2AB569EF7D408EBCB7A53B2EAD60F65183BE0B17E766A2C9AC39F993D32F0
8A28920A2389139E18F59252E3C10BFCAD9EBA0739B8F34FFA53023F7315FC76
F39C875593918C75FBB317E324F5AB53A30BACCF6A5EA5EF2F4F4AE9E50C5254
D2E3A6FBA4E0A42390B1E96FFBDB94C4520D61FA26F1EC4D1454024DAA9EA4A1
D80E4810CDCE7C2B48C3CFF20547B5FD3918D5047A7E75479C9A1670B0011D64
8B371415A35971E67743BD012D60F8298377BAB78E589791D1AE4A81F1D65D93
B55E25F355DAC980EB0589E039661610A12CE97474089D8E3ECBAB373DDA09BF
9DB5AD08B54AF2325FDA0E1E18213311F139939C07412C86BFC38A207F6B6578
181A6FEA4297E27791F569541F8C6FF424A5276B935F9BEA7E5E8F76182EE19A
55984E6E4003639EFE423416EDEEB93BDFE155AA566CB18BA4C072087E0D1F98
EF50786BD301D20FCC859EB84F394EB040259FFC934CDB68F91C6D3519256D02
8C45814CC463F3016F4CA15509F95FF44557E79B6ADFCCFD286FBDB990C494B6
BED9D0CF45DDEE4F757EFE020044EA9CF659A5E3CBDA5201D68802D5582562A9
049964E68D6294638947306D2F2893EB44227EC7EA8F2EDF80B7BE1CD6DC61D3
3AADD2E4C2CBEF6F678E4899C3B1072D22CD03317A8E4331F81B83A7C85D40D1
0193B9C1971675C9968C274A29F4B42E24C14157B641A65289EB049FFDDD9E2F
887178495D2E98F3FDDFE513E725D2D597462B5CB59F8F4B0B2AB2ECDB263796
26DF8AC710C62BFEAE0A1B76FE5BFA5A3B7B062D61994458C246E8EFD30A2D8F
70DBEB17F3ED8594BA459509B5484B4A42BF4A797A94C86B54D198A7DD48D71E
3C364839F9CBDC32397A489014874B0C27AD9D910C25B8CB6A1AB630E2781586
2219A0739F1201C85090D1C000E4F455437B09104CE00963B620E256AE9C620B
BFB575476D0CF3253669EF56AFD2E07AE0F9075E3CD87461231A052247F32BC6
2EE2C1CC148C79A55473068D7A7F9E3414ABA851D04107944F708A62BE7B4EC1
41D0E9284E3B3041241DE1206206B44AB37AC7D6848AD335F548C115339640A0
7E2750A31B8FB5AA1B2DA80E6D2102E73B788E9BE10A709E12CDB5B390BCF91A
479DC166070F69DED1A3329F4564AF66670D9A6B83CE6599612A60AF228425DC
222E4BDF6AC8D3E818C36ECD2C3C853894E5440FD9E642841C8CE514D030E7B4
F22BB0F6556633FD4D5FC1B7818441A6BF9EB9A56DAEFE0564F6678814F695A6
BF68CB59A66939C55DA6FD372F8D6D6484589F1820FB36E70E8637A36EC377BF
E9DEAC5CB3D85946AE8CBAA09B217A7BE1F7CA4C9B2430CD61A99FE2E9F347BE
F27FC1D2C98B3A2C514CA59DDC1B6CE5D25BA49221CF709AF4A519BCC90651C3
9DBC732C85E176BFFBD58AB31C39EF443F6689697BD9A5334429C889D6455A77
CE63A4A03152BF2401053FCDF5062E6E10D5372F57D6FBC6E9525FEDEAA74492
169F5CCCE354F67F10CA14EB0243F3D2FE473E39635BDAC5DEB229F6A1418AF4
10E81B3860241196C1224B401B1A96137F44C3CB21C6D53B904C771DE92AF2FD
06389B670115FCC6EE04902467C60DFD77B5A5BA30F29B284ABD93D7B925F2D2
BD357DE03E5229A883B5D34EDD212C3A8C4B4AE77966BA025DBE32E895F3B8D5
A0F1D22F3E2BE618803171D2C2E9E5B2BB9946D740F0DE1063F91E6BCBD6F17E
A7371334CDB3E01E76941B9ECFFF6F5124719A1721D6E51228C6C7D55A136398
3EAFA7BBCDD98C9F9561E685179213419F197DE5318B240628F6753E0B375A4B
07299EA39866FF3EA9E0550CF154EC9807343989BFDC11D31486C45D6AC7F369
92057FD06DBA573EA1EB610D24503451705AE174494EE601E67B6E2A7C7EF088
D94A77B83BD0267DE064D8F54CE89EDCC4B2D8CF906C2078D72D2128C7E3B149
056B70E00164C806AA246D24FF47BA0573FD77ACABA47E76F7069CB405FD83C1
B567E7488A08EF30BB4ADA312F24D017C2D7C4A8D96D83AFD4D51D7A25AAA9F1
6987F82E069F3FBF94DBE544F59FA1E9CA8E7EA66103CC61B6E18A9F5FCE998B
67D0F309C8BFC0DA27257F7995324670AB1720A168C30C06BA5039B53B871893
2E3935753D6BA92109560BD615305B99912426C2ECFE1310F92047D4F5FF1D55
C0429CDCBD75E99D0F2C48F96BC9DBD3178D31469299EAC03390945694555179
726620929D3BA0105B20D751E614295ED902425B37C63F44FBF0421F37AD879B
6C7231486F6E6194DF7905FD53E6BEC30CE06B19C1B00207F76A2A6112C000A9
F420D33241B9223C6B3D919EF1A667338A15C162F6625615444811DA0DB9A220
EAFDD0A8D53029EA8899DF7556BB028D83AF5F731C072055143BDCCF5D730CCF
9E35CC2D2F382944974143C15770CBBA26B848DAD3A8F73ABA5B831C804CEEB5
FA3A0B597DEE32839873B068999D05F197DDC821C5DB706E989E152009B0E164
4719EC5534324C4A84362A632B8D3BD131408010ABF0D69CE1C46E8EECBB98C8
619721D98E9D8AF1E465CDF63E151BE395B38566EE5410560C8B6F57B9451E26
90E2B92E0B969C228DE2C80CDDEE59F5B65C2BE6FC595D9874B31432538C882A
122CCFEC1C6FDE64B37AA8F1E88A3860DC924DE68AE7E643BF80B9A6E90B9392
FE97621CFFB8CC863780FA9E2DD31196AABC5DB903144BDCDB278D6B9BE18E6F
A6BAE007CF2C0F0F17B511DF35F619F55F1098408AF2B1695A947435B070950D
BBC26DB9FF49156BA3B572FD6BB4A283F6877CA82B0A76B5DC0CEFDBA1541952
B363A0368F0BBF8C29FB82334DC8749B488638269ADD5F16678A3E641593A3E7
7573859846C176446293290B514E3EA2D16319AB3F1EBF7B25B54DF37D85DC69
6E0DE20CDC0EF8D492E97F324F34EE12A8BA2F64A8214A2B4E74FAAE841F55AB
4A6996020BC74629DFD28AF6DBAC4F1DA9170809F7E86316ADB16F02BCED9E5C
2CB680F8CBE3453BD94CD0F4C20346D3641B6B3D8D7A797349AC3E3EF0D8062D
BC7BC0B6DAF07650A96A43EC54EAD340D01633B7B26CC2F80EA85EFE8AB5A7CE
3F8AAEA800A87AB55C18E0CBF6BEC6993D61695B67B41D4D1CA105493657B45B
FB3BC1C8D94EC083623CBD64B12C51789534AAAED7CA87FE73F76B2F206D7E73
AD6943933171C7B04C387CB7026EDDB0A4E3C03DD0D16C71F92CC76F26E0BCFF
A94C208541074BE7A1A556D5922A9C7B629557384F90E596B29BC5A7D5E2001F
584EF72CEAB3EC6A1039362B3E245BE2514FC2CAC060F1209955FD77EDC857BE
54F3235FE7E0E2EC0F0B9D1D87683B0DD1BAE5AD84C4C14B94AB3EBC3429E948
27E6FE7C7101DDCE37E0192E3010F0A04195241912EB89E29BB3F032A6B47A7A
0BDB79672466A41FEA331C9855319FDEFB62AAAE1F04E50BF46BBD1B9CF5A50E
BAF96D7212B88C805AE8D9B446A4E3AAC064BCEF2928ED158D148BD1BB887F7E
5633C33204AA0B5ECF466CA8D3B326AD2E1B683616CE74A39D57131E042CDA3C
93559276F47261229C068050AB4BDC24B721E490585ED4E3BEDDD8C49CA3AB19
664E3F0962F3D1C1F94456D795F8BB531F65416C928FBEF6981AB31DF35FF05A
60BAEAD2D35F62486120D71C7BB46D7DAFF5840EE67D0935BFBB5CF8CCBC0E84
8B09BF49F3625E1BA756928E228A176D912734DEB0A0BF67CCBC200D251BA1A4
96E3F4E786C75D5BA97D5DA2E8B407DBE404F8E43C383DCE25768DF5611BBE03
A17843A6F6D104B030D845F0B9CB9C12011074DE76939C027778F259217347ED
474C857AFEC1FD17DD5136F92B9E79E781C22FFD9792FC538310D037FE503C9A
D3659A98961BBED9A2592B0C280E854EAD6302DD3F14E6AE4CAD27E5B829186A
F54D095F4CB0A117C9EC045D0FC608A8883BF07CD99EAC59D8A28A117383BED3
6A11B09B106D9860E83F9C4B38FBC33F9158B41D71AAAB168309211921F58B5C
6F7485A526B2D6AC62E0DF79DA8502D9F425F95579AFA8A5DF5CD47F806D6DE3
A2EC7C04241CDFB1155F7218A84F83DFBEC4D4C16C87ECABA6352C711EF155AE
2CFFC9EADB82CB615B3E3B3CBD16D1315433EC4BAA14601622CA26EAB8B3C195
963E2A0AFA8DFC09962DBAE57A7ADA320530A6524144132E7C2B911C2593AFFA
0CFB02CC295E504566E2E7FC24575A15D0CEE6AD5BEBABE99125DB20E8EB227F
FEA079863E24EE5F2EBDE1AA78357BA7D3DC9AE937EC4E618F0CD258D5EB2CAD
456F1C33A1D1EC7A8EC0B0F49EA7BE3B67CB8C3B702FF45CE6EF21E047E0CF4D
9B38BA6AE50896B9B8595ABFC14DE3419831F86647D5A29192E44DB4DF08E87A
302F923E910A646F84A4722E8FECB22F9F7D33D1179E07E609632E75A2D4DE96
EDDF24E1E6A64D26A2B02EF018F3AC760D8EBB867741825175A5C8AA031FA6A0
EB96F8F418A7ABF64AF7E755441DB566FF4597BEAC5AC68165B69B97BBE93A64
6A5A25BAAD12A5B37573A2A72AC568940FF741A98D4EEE24B82DFAE4F9D57620
A07585EA267DB0428C98D6C69D359696B033DF7200EF105A846C193B58813B08
3DD471EEF69030D483D5488487A0FC2B3CE6FEE70866726F2013C1E1EE9529DB
2B0033E61F5075393E56AA55612060B7921C5513CBF222D95090525186FCD020
1E1259B1E9F9C0F7F07AEEAE529C8099D66A3B9726B9A0F889AAD0D8099BCF90
D90045C2CE45E9F8764B254603AA451427BF1DA5913B11EBA30499FB863E4841
173A3870511600865B156C50848D2D6FF6C3110D8F6B42F15A2EAE418A640D97
565F8B8450A9CF6AC646215D31EA2D4DC5F74945354105538D1598F7C22FBD8B
143253C00CFD768B286ED491E2EE508B9820183855DB6881B2E8935602A3AE60
7F7C7E2DF0E3723A6BFE37C22CDF288CFE9F0E6A8AE5ADFFA3048769ACC217BA
A9E07ED6C88268CD22BDB4AB74B2D1F8AE262DE3F636119CE757B535C90A5FD3
85FD56F847649515A704D78BE539DC9784B9547218E06EF85A036467A6EE5ED7
58C4C501E9F50599FB4878CBCE9DAB787670A37C414EDCE56BD14F25ECAC3270
ACA73A6D4F5710651876FF5A671ACE80E3D69F017B998AD83A19BA322634A877
DEC3147795CA57A462F457FDCE189D5F1FC0DE936B1A543F75332D2EAFBEB7BD
878565D7483FD5263F561A94DC5CD337BA8CFA809949C30CC1B2C6FA7DFCCE13
CA1237509F73E2629CC5D00F41DB4D063CD97EC9C35EB2D098057BDE0629C82C
2246D6BB38B509A0C71B31E2AC53762DC7A458AE9FDD9D104BA7B59D76ACE793
5F037B6107C8FA45490E5C94FE8F6292DBABE1DF4364410B76AF8B2D2A242C45
AC38866558B36818ED27F0EF5ED3757A50E6722A96AD2E66476877BBC75989FF
F07C1D000579DE1AFD7F26BF5354CBDF64BE956A2B57FFB0E3678102F9C6338A
0F5BCD05F2AD94871D2D1481892ED22EFD268AD5CE6BD2ADAF49351BDF24C7D5
1CFF7C4EDB419D61D8663E55186B2E8C9E4C194E010DF33C73754E027679E6EB
0277574FE9F2A4A9B7FD7074FEAD5E30CA687CC09B275CFDC2A42A84F483E9F2
39EA49768EB7DC4AF39B6E3429B467669D446014F48D58711BF77E933AEC81CC
3456121DC4B605015403549EE71E18B87D7D2B5033B86A77E1E504C3094F3902
168AE51327DFC6BD070C380FCBF173CD97A067908E8A7E176E1D1EDDA2C012D8
438F35F8B0C6A514264C72B41D41545A7FBC8D137205D32572E117065AFCE07C
D69531C3DC68A10C3C4A4B3636063C0BEC1AB81DCCA98A3E984385C5CE8F15D2
49945218FEE88B3565C4367BC44442C7A7E3B961E6F11073460ACB3644B33D38
529CBC2C4AFCD7CE09E15EDA78389B3C7F7B62FBC7F6594E3352263992812735
AE4E1CDF597F4C25E2D7A43D306A5A2EF3CFE7527FB2F544CF1904FF3643A1CF
6430E085A598EA1D054B26F1B798AE1170344A0E780AA55F4F0C58A8C4923A32
826D062FEE8842E0E4FD05DE81D840A89EA7EF8CDFDF6A6BB4505BA77C12B762
2D1D1F114AB587C9DEB12E2A0C761B45CBDE0BDFE62C80CCBF4E9FD6033D98AB
66D7491A5C077D4CF60AB1635CDFC3206D5A305C1355FB81640070829CEA8E1C
3CCB993F923CB344AA6939AE29A7D7FA4120BE2254A319621BA76CB75DC390CD
53876F3F6721DA976A3B0EEC28AA5A5521E82217DF4E69B26E301A3C73B2D097
5C4751B97182AEFCD600B1283EDED6A89DCEB358AC2427B8DE7D25327C6F6ACB
99F69565BC63CEBF92AED7AB45B77706DA24727BBDE90B66AA1685DBE591F3C9
E9205F69C6D65E09F1B3217AA771B8F66D9901C895E8F738ABE7BE02C159DB9F
1E00A6FDB3A58C8F167358EC9CCD4343EB22E9E24B429404B25A3BB041026F34
B7595FE6FCDC6D05364CF12C07F8E3EA90EFE53A5F951D37210F70D6131D77D0
A76610289D2CC2ADA08AF104AA69643F70267E43D085113D037927F0376F961E
1CED1E6C2E04286271FAA4D0EF44010F7936E4801B4C591645F207D1B6E3CA62
6E78B08B505DB69A5674034D5565B534689CED93AD1AB68641AEAEFA23C09939
220D88FB236D901C6951F7230B45F4562A860ACECF136FFB49A9194A159AD532
7CD4EA6E922B3C8B3DF7CF84950D0B76F10228CFDA2EEBB3D8993C9C70F0AD26
0B8B6780807377CC4C6A63CE966EF2BC77CA0EB738F02EC8E5CF7F719248CC11
B0359CBD8C0CDF41BC2950F5D848BF39439722900BB88B13B474CBCE71E727D8
C4ABAD5817D7AD3F5A2901B6DFA81B1159E6301EEFD6F9A1E91236F887F478EF
8FBC10FCEFDD10B33A6851D7C600C3544D41EF3F37ABC1059F8F0A7DC8155C7F
0AB7755E6AA89206B9E16454E1208AF78B80E2C657E2A9923D037A5A6164D408
1881C25513AFCFA5569B3579441E8FB5FA2A1EEC7C4974CDBBDA073CE285C8BC
57C5DA63FD20D5819B945E8070E4E491C2CC1E48131E1C02209356E6DB906752
87E017F0793F315D51DBB61F7E7C0243C965CB73B97341DF855277A0B6890C40
72192D8D16A3B484680259EB8683FC9409B46F7DC25E9ECFA9F6D32A0A22FBF9
18D882A3277B03CB43D44C69921613BAEAE0F9EB0AE7C8DFB86C31D6C70FABB3
09EA3B7230633ABF2C5D06A8C9355D75FA8B94A195DB0ADB805B7061BABFD4DF
77B9B95D4B88150ADB0B0EB5C20CA0085FE358EB31CA957BEEC4B4D7B1116D15
EF19E3F1EBB5C2C130AB23DDBAE6FF0394AEC76CFD1F6167EAD00948687E1D15
EA3A83FFE4174BC8D9E75F391DB886B8BC87476665926CAEC11DBB8834ADB3C1
12D895F88A895728C84EA5898D1483B95391E8343C7E8A32623E37136E257D2F
BED5E34346DB82BEBA5CD4C5FAB5C77AEA997202CA97B346EF6860F5CF35F4AA
6DB7ACD2480FB3BA87BEFAC1C154A7A9C9F057192825E175E992E360A76B7E77
8FF9FF63798470A50CF60A08B106F38127D7887711B0A5A55053C4A12B9A23E0
CFBBEEC0ED8B20EE8D1806251FC204B33B3881B8BFAD8832C6DCEC19DB47F9C9
FB57218E96783A71197F5F74A6A69FF7651D3EA16A7E2CF3A64D79189160C2AD
F2AF949C5FFD79C0B8693652109186945DE58838BB118EACA3A47EC951314E96
99B1171980D5093159779F8DBF14A3C7649431CD219195333BF4832809B61353
6512FF538230392592295F5A58E49569D87A4F29F6FC63C6BCBAA16D0675BC25
005CF7C1CAF5AB03364A0A9CE5D4D683C3425A762FEDFD996AC3F73DB39C27C5
5FFA2441F98ED1991F1F5A5E53475666AC6EBA75338D947AA55362613626B3DD
D1DA72378744018DB389F93F4831862FBBD5EC86D5636A9856E6159F41E83C24
147EDFC2807B7FCC47A0C21EF1F4E1F4F49CFE2DD449A0F176B125AB4D304696
18240A72901ECF2D7822D0F62678A3C5CAD922DAF83FE396A1E987B4B443E198
DBFE4858E50423CE41831C5F9E2B7F873D4DCD67821703AC88148B495AD455B4
76ADFAE52581D3392ECC5E11375D569DEA50A974A45DF8E8C224B80B30C3C7A3
FA7110FAD58B90B7C1C8742B4C9B23B591E1145719CE574EE6749BC52A9B6DC3
291E41180C17309CEE27369BC49DCD3C23C330C2E46CF7FCCD3E3F1BB882EC2B
A8C311B8F5EC99F4B7B81D9AAADC80D488B8DA5CD5AB3B10E202F62DB1695431
AEEA33FAC8D7E5726E3918361C2C5655FDCEF573C02F7938562B47D19DE27284
258465C96DA88FD3C1E222FCEFB44ADF8720CA0496DD517AF5F42E8C8A9BE278
BDE04589C99ED68F838FBD23E587A4A4E911CED506511A34A446FCA902B16140
E7213BAA0702ECF821C4D3EC1BEFEA86320534D96327A80A3DFEDCCE2A3B336C
1B58D71D45B7F05D4FFD3386
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
/UniqueID 5000828 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2DC523F046EEC4CCAE25792B702C288732F5B13B5CCE7
E8B6A1A1DB86B1EA38883951A650A1F10A75487EBBFE4E280F9FEAB48E2DDBE4
BAB5EA7A8A37F36472F6B02B8A87D7FE6BA179E313C19ADFA5503C6E201C1C41
542324E1CE6E3396AB329CFA81A3FD438C5C31BCF78C0D6490F9288B318E8D32
96CFD6AE32E51AEFB4E69ECA95C957F3E8F2D3BC8D053AB8983C2C11D68933AA
F07385706A6BFC4B55825F22F82E55D70888F109EFC2864447914DF3ED2C7197
53BB1EED9C435C9B67F7B08F6D0D6E74A2E6C0FB96EDE1F4B0B5DC6176F23E3E
E66136AF4E9C5882A38AE0E11915AB04E02F7B91544738AD0687A60DEE73B50B
74B3CF47789334E9E6ABB62E1067C5E680E31F06B8DF89D5514A870890CDEB2A
D1FDF5DA5B59AEC3336D4110D21F16973CEBCD78171B6DB3A1C79039C2C70D6C
7FD73E94B035698AD38B763BBBB9F6BE63A59F786CD3D37F0B6E226E5884049E
B675320221D3ED755882E77BF4ECE3E6C9DD3AF8EC22587ECD5451193621D7C4
FC39A81AD6ADF674E8EAD7BAE2E3E499A32D99DF2273126C51EFD6BA8FB82226
5FC8B2296599C45A1D6B279AC225158AD9DB09D8E98026CC629C8F9031B8053B
71B2A1E9AAF202B0D03294403966BFE0EE23ED3C41DB5CF9C4C3CED8657FAAE2
9ADE08CBF2E42FDC74E9FAB3CE91F76167D1DACAB4A748FAA5A54F8F2AE01777
31A8FA5B542EC0C83C249080F1FC375FE0642C7ABDC0558261F3ECB60F1FDBA7
E8E5DA172A4038A14C793A6688B3214AE447B6131228A48BAAA6DB9373759E80
3772CAFC4C32034A164D58CCB34497076B3FEA2518F290539B1F42FB07DCCC2B
67A96C0E18D1F628E0AA40D51933EAE0567CCDE5FDBBF318285377220AD5CAF4
1AF63041D7D4A6B700084F9F27DDF43A6EB338A214DC5C1ADE116CBDFE975382
0E1A00639C97D0D0B27577F0E8D49407FFF0B287F86BABD66084853B9C6B5E9D
2A7BC18FDEC345CF206C62AD4D9A8E430024BABC201EBE4B2407CF9B87FF3B0C
2E58FFE7430135BB6822A781DE7E39AAAA92BEE8D3C7AF4402D350A7854DAC3E
823A063EF12433490BC43296F1ADE1C6759201F04327ECD45CB17E8403C1EFB1
61034D42ACC4DBF2B346233B518EED8F2777A667E60395A24C0D521A9704FECF
7CAEB3A79EF6D16E636698608CDB79B47ED3C29D5374D66AA70CC250D1D845D5
972947BFE6C4C6EAFB1BC7CF1B054DE25C1FB59A73C910A0DF472C2BF1BC4F33
F1B84D0A291B1E248490066E56F7A1F73C5B37605CD6A4BE902E08C66DCF7122
A46BA0997E64B50F9A823F5DE4AA66AC2F941DC0B8748E9F27701BF13A908629
AEDEE999EC59CFC718BF225208DD8B5D1F8898AA041FC03BD4B00D32DB588B52
41012A1A596ED0438CC1CD7ED4D0EF4125A1B7BA89740C76BC8DA866EB40AAC8
DC685096D205DDD042D1473C77F74E99C1DBEA114DC240A5749B9F64CCBE2EEA
1DDEEAAB515D3FB7094DEE0ECA39FD95930A89E130021D7EBB2C78CBF8ADBAAD
04B464126DF44C09C53E51C260E0CF69F9D358538647672985807243F5344025
2F4561799FE2F7A3CE30D28B11A6146F100D8B08CBB4E3534D77986A67874566
5EC0CA51FB299D920CC68FD4F3F8CB13B61116532AB5DB48B319DD6156BB2574
53D40FB52646F5CD63506BF36E73B62C0D1BA0154778CFC6A505461D23DF7808
8828556B8EEF2818B1FC088065150BCE1DA461B8FB094E6F62E1FF6EC512FA5A
A79652E3C13C26DDEBE128DD74C4FA9AA0B6EDE8BD89678CE42BFA601584C66F
DB7427572251D7028F850F27DD8695C35013ED0CB9CEE21B8401DC8AED5C20EC
FFA9C3CCB75B19A61992D0BF04EFB6F8E8DC165CCB6C3E2518821088C0A9A0DC
BD99513636A89A9E3B4ED8CE53764D9F6E0B80025AAF4969F85A6C455E5918BB
D9A2141AE2FA9B870A94DAC601EC56FB1648464F591D3A8D0E1E260F635FC1AE
7114DE5F1BE6253136FDE8773E5561E5D723D6E29738E31C5E3EB7A2D1A62BFF
8764813D1CE7B18DE2179080AE2D18584FAF59F17F0BCC2518071DAFB0576111
CB6D96176BCC08CCB2399455754DF002B7B4F5A05ADE0AD211ACA8405AF323D1
B89D6A5EBF16AA0D5CDCDCF1FE05C49BB3BFE5AE0F5E10C412FF3189FB0F3370
A3468117B43A9DD3AEB017B303FF279976863B731EBC09CFEEEAB5A516EE22D7
DF0B9677B1AEED87A982DD5E01E971B5C9314CBA1ECEAAB3DE13B188DF59EB48
8B72D15296755EF99F6384DDBFD300AFA0BC9B00D510FF74BCCCB7D94E07B8F4
CA75ADD16179EF47CA12EBA298D71408C5C8426DF1DEACD698D7F5AE37B679A5
3F747EC664CD8F21CF95CB24A91599DAC1E85FFA2E8E95FAB280F1791F4610FD
ECA3A583FCBE87779BFCC971E1A030A18A6EFE7CAF0F64E52E9C0FB1B5E158A2
D61FC85E95737B7BF1F5435264556866FC68598C20BB4E651CDD2AB31A237FF8
B518DAF7B16734FADD5259EAF19BD00C1A9A2C4A88B2342121CDEE1B2E2F896B
04A67A05FCE38D5627D5B79B5B0AE5E172E7BDCA9734DD18B9B523A592BC4D88
432ADE4C648B6B1A5B57467CE27232B608B7E080250CBA90C85AC54FAEB6E20E
2AF784666BBE27B1E61EDEF9415800A68A064437D160C600BF0E784BF4C1E66E
EB0009DD1F891D56CFC623D629CDB81715C1237796BC6FC7D84193B208374C3B
589743B23207F7C24589EE15D62DF935E61696CDABB6DB6F2F5E71BCE88ED22E
6A2FD41130812E1304C69375ADF7D06DCC953E26396118D46B600CBC6B917B7B
F16F982E7C75533C1B04CAAE6D80CF7E5B083B8D4812F33F0E53905AD8178E9D
C9DAD873DB3E05FE60F17D02F8E9A3597A5D419AC657965C7A1F3A8BECD59B1A
85B671C385F35C45A5A14565FEA389F1D0F75945E90C625D27D3620DA605C3C9
00FA3385AA2C3501570C685DCFC84E42496D0CF9FBE049AB647B3B072877BF06
EC4C45231E1CBFBA0C6871FD5D557DFA1A5A40AA29C715E5D5F351D74E665E4C
CD603CC216C21BADB4F184C16620C06D3FAE4E355E9C62590AFC758446EECAAA
78AE07A78AB1F11B047FECB46CBE263FF53A312E9DBB0273FCD2F059E625C101
F79EC233ACBB8F1AFFF9B09A447E2A9C11AE74680673395131C7A2EB936B57D4
4113344D93C33DA59624EEA5F62E87F81A763E3423ACCE70749E1110C17FED8F
F3CC128E384B01684555386FB3C7CAC899787779F71BFA61D36667B322BB9FAE
4545A573C433DEA8F50C56F4C346F28492A025ED6AC0E0D88715565DEE562424
2774C8967CC41F39BC89470DA43676907039AAFB0BC083A0D9FCC324A47382A3
071B9AE6429CD81F3F7DC9EF1BDABA1769CA2CA0E24BFEC1DCDB0DD2B20FEF17
ED144C9E38FBE5446B60DCD9A46BD25D8E2CEA34279A12EE66A42A387A96F822
78CEF82BF5FD9D8723A0866123DC1F103AD8EACF37418454F4113DE4F6805715
190F153B7E9AE1377673502CBDEB5C34725F2CE2A1BDF47ADC607198D575A63F
89EC568F4CCDA757E8DBC7E0A89717FB635006496C528FEF508B21E39A2F6B55
5175F7366D0791C66099B2FCDB15337301DCA9830205D3F26F9E832708169A66
AA901E25FC34EAB5E130035D528F64F293C9AEF6F1061E10A5ECC242CCA8F84F
0C8C1C944335447405ADE1F892017F0526F4E965460345A446DC839B2DEF450E
B0AAFD2FD8CFB200E80DBAB7B352175060970BBFF4E518F1B68B3052887F3DFF
1AC8177003D4940B5C5996ED7F18694C800D62714906F7B9664DE4D00DA80520
6F34006CDFE9360EBEE713527049197E87C71136A580D532AD66896DE9E0B173
695669AA4342B06BE95F552000A7F5D572208EDDF2CE063AD2F0F19A0ECC66B8
9B16AFDD5688154284F66372E9C8E70CD017AA36787D5B2FBF1E58E9C78EF653
018C08CCA293CB98121AF6DCD15B0BC989DB906072C6D76DDC018F3BEC7AFD39
BC50879721FF91F0852DC00697032D66EFBED5DC3980CFEFB69A30CB74C1FB00
E5DB1A1F07EDDD82932A4FE2617F9462D39781C18BA8A693F6CFF62EC82F4ACB
D524F637FB4611554EA7F3584497638B7033F05669A5E5C908F318C486F2A472
07FDE6CCC7869075BC6E7203A10BB4910AF7274B80E108F77919F1B4E09BBEA9
EE74F0475DEB2C202F8723E8A4E774CECF5C065904170C7BF5BE99F26CB345DD
BFBF7D46177D75CF2FFCA23E2ECA5D358132BC0C8AB75F22983C1FBA1B7D7969
C7F0BACAC61756E535FB13D9C064A3A3C1F602ED8145D34C1D83054931C52F81
8E593D2670439CC5323CF77237CB8728FE226F385E72481F855E28904BD4F06A
D9A2E5FB6F08556CC453FC830B86EC592B99D4C5388635709F7A5DE7D9F0F5A7
0AAE4974BC3319C21B86B344C8897863799DB8F0C3251F754F959540036D818D
109C726F6B44DE86C371D708C53262DC33BF49B470255951BFF27B91B9EDFCD9
429CFD7077D4EFABA10CC6AD4931AA3636BD60C79B1B1709E3326341EC614D43
9CC55CF5040040AFFFE2865453D93518B412FD9FDC7EC3E5A965499467A6EB2E
4FAC922B2F244574F22F0C91C0E3794C7305E1390E5DBDA4EDBBD025049AA02B
687731895CADBDCB5ACFA61F03D7B4215AEA58B2472EEC43757C6F41BE3BB528
50BDB13372B9827164FA67ECD59F5276F5907C2370FE9DD57A9A8C88591094DB
62D11CBFDF5B37898CE1CB80D5F1AD2F869D5F4F75D727BDEBF695892F216430
81CF138E8F44F035924A0E78AF7C81FC53CBF005739C8EEA1C5846A22A771C72
BF1E4EAD6AA22B0D926053901EC9C578EBA28F6D05A105792501C9906D182B7C
6652BFEDF0EE6ED5FAC850845491172FAEC20A124D34B227839E501F59A97203
107C8F26F7135BB4527D2CDFCF278CAF5D0D17CC775E57F6EF4A55D11B864420
5C8C9BD3DF4435D345826C5C65A0BF11DE882EB736F986523644B7E6AD1FF0A8
7EBA4147A2FC5A7BB09FFBFBD4A7474F96B1DE94BFF29062844BE1E9C34DFA72
41A58F5A75E307A31D568D71DE555E708E0B7C40F36616B73BB40D0FEBBCC3FF
2499133B4DA8B037B48F135CC68DC00D742D7A82622333079DF190BD52055A4F
9ACF55E841F26150F0EFF62F668E3990DCEF0A70858CB607DA63D3557246ADC5
699D5E08C7D66A69977C9F3837C3BDAFA6B6E9A09E9B78E52F772210915FF816
096DB677DFDF7A307E355C9941CDB280006172C65590E1AEE7D2BF9F787CF08D
DA5878690E5651579FD6C332CDB8EB4DFE352B700FA89DF73CD80591EEC46929
05D4FC68B4A7B017D112E4F82D4AE67A49FE3A9AB02A0F0A78662F1DBEF1BA2C
B33E74E7C4ABB12333B64D5BAC3A4B77B011C94AE1A21190F7A9D0644E793306
FA08BB066DE2307B19620484686156D1C9B0A85630D4D776EF1AFA5982EA5A60
23700B217EFBC615230E05141150C88AC9D2CDF2B301737EABFD5DC2805AED47
0B2F272CEF60F96C8E157AA764C845EF6D7AB45855AC443221A33988995C45AD
AA584F8CF7E694A03029DED7094F60EAF376813FE5ECCAB549FEC7470BFC1784
9FA3CDFDB398751A1324421BCF78F268A5C6EC1C04478571AF940FB6F309C427
757E9D5AEC8E8324FCBD864FCA22BF335B9EBCA0E70604A67C70FC650CA417E2
C7BF12817094BF34454518923789C4185F39A3CD29D25D76A55164A246DA9FBE
3456CFBEAC941ED3EF296948D815289DAF91E3F2A3F9580DDE06A5026D7D80D1
4EA798C11C266BF3F9FEE024E90EEFE216F1D1471ECD541A31C509A60A9635A3
70106B4C665F9F3EF40780D4CFB776953B186B70E7512D789161584DD51FF2A1
6E98A543A7D66B94C9F2213DD238AAA4CC8D70AEFADAD52F3226CDD6BFB41488
5D832358AB236C5CD8D189F96486CC208336EBE87B674B1722E90720F5580D54
C6CF9CDFD41A64C1573AC631102BDFEC961D92188549B43F5C5C1937180F864F
0703E87CAAF6A4E4CE6BD34905E3966E4CCC4F1E026EF1AF919D302B4FEA2B29
C2B4DF8543FDC79C3F0E1ED7044DBBC5B6D20BA8D93150A71B702905FE804D96
C211EF4934628D1A36A6AFC89D9B825C35B8A1735CB06F55E48A6702D1802E38
1D7DC9F48CF18F5424ED2445B83DB644D9D94F7608804B164BF935F031D45CD2
6F02DC07D1D6F20390653B68B2D4DBE1538C3C61C2E364A1C2CB4E923D06D246
1A820805695BB88E75EB563A3B2571224C6D81EFD91438AEE7EFFD51BABC6B2E
A1F221A2EB8D4E8F9D958992B357B92B1FC70C7148FD26E5DAE7B6094A5C2344
321340B111E73F2F6097A1294EC22FA109AB12C0C7A66144F851E19791291251
BD4724227BE2146557611892F445114012218BAD180A3AA6DFF6A3E3E744575D
7E03C4CD32ECB9482353643ED5EDB19CBE308C173A516028B62E9E021517C485
C08F7F4A265DC12A6C04FF1F8C17CFB81C5A7E4C0327633E018BD5C7CCC74488
CEEF2D402DFC71DED58B2A7A5C12406351980BE0E5A614253A2EE504ACBBE49D
DD67C549369FDB3F3A5B774AAD6D2ED0D63D518F52A24427ACC650D477E6BF67
7827A17916A79FCCA4746913790B4CD73938418C0E7D40CB24BEE357D2A01452
D78C375F7C480BF1C6E7383B80222EF6DBED5793EF29E690CC8E43F95682DC16
7ECF60E4EEF08AF01C05FD658C3B1F4266A4AF89F1BDD2B6BC9A5B05F475247A
5F3FF289071AF8CE69742582483908ABD1CA0FFEF3561DA9DC8B18F4B0DB9484
B92634A38D74F7FE351F97A0632DC081444C50FB02C04F4A3B39626F0BCEB41F
1FE8CCF9403EB43265E3F1E5AA9687F6CC2F66D90D4924CE2DC5546745336D84
28010A145D8535E1BD829073B563C877E16CA368E7254BFCC6EED368768BE348
817D1147926110FA7CE6B4E73BC0375FD826B317B72452FE7945BF0418F4E1A0
8C0BCBBB2C81B29D97264788D888AFDCB2161430E587AE06D02E9C2B1DAD9C00
4CDE82F59D1B7E9A076EC34B1A02FF8B19F764268C8AE2F3D61F3C99FF20BBF7
32A201C9EBB2976383D2E25775A87101655BC9A5755B6A920349293599A4D28F
F2D6D8E1AB1F9B30265230B47ED4BC124B7EC65B50B589C13C4886A40FFF05A4
48A7721C3D577D98768CE0876B6779EE1CF5DF2536F34D49145281075F312968
E29B4FE151087D036E45CED3D764C30D359FBE002FECB8173297F1291B3F18A4
D5293805B020DB87E4A979827267195996C9441F1C9D52A11B77B874E1620A7D
0F54FE8E980D818F56FE83811AEA916E9CF14B3F8AD673729654943FE4AF23AD
ABB5B840A9E770686BA4CE25A9C220EC4801A77FB5B7B0015634044F664B26E0
952F7AB64518D315966B5F644A7EA02F29938FC52C42DF717E6F7EFBFDE2754A
C6776A95E3BCB846DAC5D8D6CF883022E2DD5E6B5630C9851485AA07171A947D
291019358CD19D92C93F2FCCF7A9FEBE15D6A6F1AAD9D34B8EBC7E75CBED996F
7C10B80B18FA10302C4A186F24B85D541F808CCD22EF29A67D6B237446F4112F
C3AB275D9666427F63884994EFCF1BEC3F9E9F39D83A8F3F8117DFDF3AF93528
CE6D00AD07B55B777C446F96DAEAACA436261D057BD38DE1EF4E4368C5CAD07F
7E8136F48A66107CFCC69B5EC080D414F96262FA676414168EC059EE96536213
723FFA83C87BB74FBE5823EA4C11ECCBAB7C943780E99EBE4B6040A792891B88
0EF99A39D73EF74B82C6FD68E84DFBB7167667B6A5B187A0B05CE6A07C76D71C
5D0996C3E6C2D7A6E5046D368C3521D84194CC5B95443F852CF81D12B69EA013
7D47824A90ADB83E2DC458B4863685268CE355C9127974DFA0AA693BE869F7C1
CF5DC3B40055259502162015ECB4666C12A0C9879EAC4A946703AB201BF82E21
C743372938887300DBC42854615FB767D811388F11418192BCF26004D19F3A7A
A71D5BA5D4A3E68764E0866DA7E7B40C0801F70401378DB8A54417A25A36E2A6
96CFBB5C44283D18FEB1A63D1A1806E442729F7934B93DD3125C08DE5F58F024
A6A995BF56AFECDE7EAC197D307A512734AD840418D14E9213C613BFB8DB1D84
58E8A015979C4621716A6679C4FBB54DA52E7081AD9FE79933C2C620CCAD04DA
6DE6AF2455E9D51BDE9F0FA5E2BB1E581AB720D82C2DA91DE29ADB9EDE2E429F
09658611D872AC308FCEB57B1EAEF4D67F39F6CCA6D33FB4D00C652EFEB197AC
616F501792EC906F567A53DF3C5A27578366DC43BFFBD5EC995004E6793A53CE
57118C492058C2360DF2E14123B31E25F7A19491E9001E0CAC2A8A925F677C0A
66CE677A17262E13707AF381F6D473B1C9016E01F13E3E68CDFDEC99E3F71B68
8FD6F44D54DDF7963088B57E2B5AC6E777DBB31F89A56BAB6576D65C169BE55D
BDE344237CFA597AB88DDF6C06D3B6D0908CA37500907CCB97529E8DCB13ED9A
FBF7D8365CBD7B2E87054CE02B64657DAB9A05885C0329B694BFBCCD9EAB1287
0E467538ECEF9CC98C7ED2753AB65ED6E1EFF39F85C530C2BD88FE12F6C18E60
1C99EC1FC0DA675DD28B5BAFCA89E90FDE761566166155F410DA0A634DEF51C1
836C80071F84BC8EB3AF8C30152477AB09CC53DEC2DD8E01BED999668DE249F4
2203ACDD465EFD8A2C25428B03053E8440CEF5155FE4CA3A87FACD833A96402E
C6EE861CFB0917A65B20F3F61E421C5026B9AD1260CB4AFF12A7F5CF8755295C
6056595D58360AB85869467C8BF9A373888F19E260E78AB5001CF34AF78456AF
F2311B65C63218426905A90486718EBCB9C42D777023F0F9DA4675CA0B42E8E7
B08DF98A2C391F58201FF07EEB936AE98644C50536B61F61E109711E2127EE25
502C6B98EFDBAF7B8F8532E5A3A25D3872624383A94681CD3897871E5E2799FA
2713EF79DB2EAAC02607B679072396D0DE2E0B008405828FC4DD2EF78AB5D4F3
768E597B930024A13BA73DB2CB42150D285BAB1D2BCC636CC09418CABACA3406
88311FBFC4451870ACC424657021225935592F200CF8DD8FD7A31F4A0D8F5DC7
CD639E5E1129EB519F78BE24F8E9E04916F759649EF14CFE59D186F8B57FE8FA
6AF140FD1DD9922A0FA9EDF0ABF8656C0F0548AAD9A146310FE084150D908C7B
4DDCE72D683DC4F99D637A0E0DA247A68853150639732D4586C6CBB5891B6653
6F01D86E83083EB4C33E961551BF57FE8E20B41C68D58BBBD545BC123462ACC2
A5BE3844FEAD908399C1B4C1328040B176D6E58EE2BF728A672F53C4C3E003CF
6F1D9DC11B449C52418FB90DDDA629D8C4BD5B29009780EA28D426E0140B7C8F
98C38155453577458D651E1C0551CE2FFC4E47865F643FC8B795499BBF57F559
4A80EFAFE03F3419B370B98E0824894595B8367E550F14A38B9A74AE7CF19A02
032D351E40E94A20BE8ED735442AF36125EE8FA864E41D992090EEFD4CAE3F4E
686488201D441605C23D68FAD72FC7747CB1C06F56E121692F5A4EE2B2B9C415
6614FC3CDE88ECB353F328448B44F0B1EC68C3567F5AA8E2D72F4BE9C78B13B0
AD060FF99B057A7200E8649CF49B8CC654BE17F7E6581502C5CCB29FA64F1C3F
87094366F3D6E6C375ED6FBE6A22A015121CB9E9BDBA3CF2779E374823B03DDB
21C3221DD13BC827AAE9F722F52AA2552B01790D312639E607E7F6C4D332A6D0
1370244F1F9DFB4FBB50E286DF30167BBD37EEBD6C27B21A1C7AD0635903C90F
A075DD9FA09BA25C09390BA570047D1D5A71CA27BF114C0113F983A927F4F0E8
69FD7C9147263A0F0DBD25C87B433B26702E601C3B334DA6A8441A3FA15FF719
9461074C1A1EDE46B36FF3B74FC2ECDB0F7AA8A5F6565BFF60D9B723DAD8C6C9
F4585D3CDB9A381FF0619BEC48A3AD57CE90186CD09DFC0AEE9DC8A810A0D1AA
27B2DD9426F291B9935300594D04B96C1BEFC694621F62C182721E4D4EFB652B
5FCA2C0890C53A8092621403EE43F89C6F14E269B040E0CF9B0CB3AF786661C0
2F7F12831BEF87111BF93EDE14265AC96671F739FD468F2EE3EBE8710E44BEE5
0B7DAA4F9B2107A1784B28A66AD61B77BDD2A322DFB438C7C370BEBFE3639AB1
4B96772AF9B3AF992ECE2F9BB3D56BD71F996613678F11EC870E79ACE0B4A105
F89D924C9B96AC73D9AC16DBB1E98BE74D82D913812C5F55CA7EDAF8D9A467C9
103FA682861918E6E9028D717A3E9FC5EDA549FB4E6F0D47D51C15C8DDCFA169
B12153AD63218DFB243A8D3A7D1FF7A4A3B8A6D1C031B0C16C0611CEBA264992
D7AFEFA941CC8C61BCF763F84D6F62837380F8107C6706781631E27BF7662396
5E7F9ADE5F53632CAA93B716073006567A1342038AEBC1960CD808FAC8E61DFA
9E09E1B766F6BE3C02BC3DF84F0B06DFB62ED2A942626965F903D71BC409ECC6
C6DFA57A01762D88BD129633B1F55B8F96809F61B63DA78DC9E0693A89CA2242
66FE11A82830FC7D4F6CF8773C86387ED53A066ED6E9550C6F90A7379634EE41
12612A31F11C00826F8B005B975FD736630DA8E73AA31E550D5B285FA9972E1C
9AD43FBCDDD9A8B42747DCB01CF9F3739F4E7C15691FF2BD47E4A4D227F8B011
FB621DFD1C5AF82E3226697BF5EDF476A4B42B57F9FC400FC7E0BCB9C64890E7
41F16330EBC3290909D49FB4FCACD232D9533F226CC9A85EC8DF5515D7A11E34
4F96821CC79C3D66CD08A0F527E7105C691580F6D4F17107AD463FEC89DEE62F
96C1D0932C8C166110072A7E4CE6DA72A246B4F02BD4DBE56A86292E80F081AE
C367A0D754055F827009CEBC879ACCE0AF2C2E0A731C52D0443D57DD08AD5AA6
55D00EB011FFF39CC18C7028C1C12DAA75E3C4F913338EA392B0FFC4FE293D1E
172580016A80CB22A60DF808888C3954A778C73B1E468B282C4DCC338759493A
A11CDEABE3EFC82C574592BBD74BC469D73204BC0E35B01CD5D8316051D903A5
5F5B863F9AD33ED3B57D4BDB4057069E278D54384D8AD259A7E949FB8D936A7E
03B4C3A016D0E62C8A831D9B757CC889A8385EAB3BFB550663E1EF59E15910A8
B8045B4DED6BBB62C73D135753766416890A9E1AAFB2E2E5585EC7D7B16EDC92
9ACE7034E5FCE14E05C7A4627B31F86747EC60221D68E9DEF975C96AF79D53FB
AD17F092F97B2DAD2010DC44212F429290A2750DFEC7028E04C57D8FF2553F84
59525386D3F47DF6C6E62B70E9CDFB584037943919A3147DF9ECD49B0E95923D
06A8FFF1B6D97AFDC8E9FFBF0D430B12F0BAA80D088F1B45A0905C257795EF43
0E352BD89E98058C8F4EEB8A4E85A3FC29317F5F00C1E2E9B6AFDD41A2BC29BC
E8138621EBC372135E5DEEF768E04F9468B4698CC950768175F7A1A735AE9ED3
CE3656E7785A91425DF0D72695E7BCAAAD905E19ED1B530AC1264EAF8EF35DAF
EF9E44EB5E56EB8B27E330E893CDB94E7F7140A8240BC0AFA0B88AC3E511C400
638D44321711CED637E63BF23884F6F30F72514CDFC7CEB760182B8FE39DFEFD
1F9C938E3F0A9C3A0DF8308E13148A222454D0CCE86D97EEC359BE052D8C6893
0A33A3956C1C9FC171CC99BD2B6E42203A3B3BE0801C531224B3EC67818AC5EC
7A0D62C4B3DCB0A0A31E5FB61CDBB21580EFAB29A8B2CCAAB4DAA5C8CF1DC278
D019AB323DC7ABB8FAA0BD44A6ADB9E7F34F3581872EF597A2C717A49AB1E3F8
B25AB8189234BFFBBAA7D7CCC9C8BB2437CA8928871A44F4F8ECDF26D30C5CAD
12D264A195C7B9CA64121060F2AF55B8887B2DB631C6476B199586BFF16EAEBC
A8B4B0F7BCD6F91F616336DCE8B2512609988ECAF2AC22712E942287E4E1B34E
756689972DD76E06DAC45396EAB16C92A5D4C7902A5D06F37FDA4C216EDB1D2E
A99D3574752317F433AF3035EE9C9909E06CF80E47F3173A8A43B357C9CEF1AE
3FFCC066D54AADCBD373B25F9F03DFF68D9AE84880CE60E4F1C7CC772291B862
18CF8199B54DABC25191B11608215A30269F6D9064B8263165AB620EE1725D4D
2F457EE1D3DA5D20F0E1E0B8171E4CFC5FC6E3406C1E54D23B5EA69BB4C0B852
9E0BE95F0C0B8CA55E074663F4875707B5DE24E5280C97D1A1A4ABA595639451
F4764935C8D8C23A546B85E56B4A3435958614A25B0C61DEA1E93CD851A67913
D44517D658F7EB1C65C81ED6B53B0848B54CBDC57BF8BBF675956D4EDE712E88
C79DD9917E20D79DBC7ED0AA3481B8EB2D929542A425F6AD7B64325CA1624A1D
EDADA4F52673BBFEC4BBD3BD5499864F804F0495CD209A22BB04380F0CC50383
DB145D0D9B784611C022267186BD84B1A0D8966BD5AA2A1533071BD743F543BB
2075AE8B8D691F045F16C79881B15B1126107A182AEFA3E95AAD98E4CD24622B
2CD2A78ACFAB3867E926CF90C643FC2A91A6F958FF804FAF49FDE227E15CFD97
F76535C0D2CCEFAF00D865658D452B79821AB7F66E210016AF9A79FDF73E7C51
517ECCF261B20B1E2EFD6678E43E19321937FBFEF454FE730215517577902DAD
E5E6A4FA01696C5B7DE32B64701351C4AAF14F95FDEBFEE2D31209884B67C638
E3293589DD9DC424EB297FE5B37816EE2FC221DA3DA4CCD38171E362FB1AE3B3
F1B8A59AE9CDDFCD82443A35D722DC164B65DDF893149E644A989E9EEC0E0206
33F40350826542A8707028871110EF7867B9D4C079A9F720F5C4CB5FDB2D96B8
3C74EE57B62C9D9BE20A43FCBD8B3CB81533F9D58AEFD662299A47F03D869D29
9EF44D714C52DFD9A19576EA5A33BFFD72FA9CCC2EC94F4A8D52A175367FD28E
02369910613A03BA9EE7E273F2C3E3BAAB3A0BA7D187BD327CFC353C7C3B3D0B
048B9EC06F806A4EC3507592B01729E34A30568FFEF2C491DE42CB10F6C4FE14
89CC717BABF4DA20D392DAA6F21B5B28CD81C74FC071AFEB9CC962C749F3AFB2
C16F2A66B812E1F1839BC406B61A51724B280A0AA7A21BDBCB4E9184D09D946B
909187394D592A07F783452F3DA5CB258EDCD1C9CB9879AF744BD1BA20D7B3BC
4F377D9D5695838E765142BDC2B7DFE26BADE086A408C1355664F985471D047C
D9246212F3E47E0551248F0FD39109C140309B39148C89FA0E197BE29F9849EA
B466E42A980B27B1E7671F970BEDDA143F8375E0913D40465EB41F51B94FDB9C
FE7E68D79E591613BB03997C9F3BB168FE2950AD7AEBD47C1B29E55D4BBC0FD5
CB701D9681CF351FDB033681634103EB91B647385D009F72C11F3E628065FC57
389ACB9A882307701FDF7E767AF876F3892F71B8F53CD48C6E6D340FAA79171A
F1D3878C7B1636C4578685E9ADED1DE8A1287795756DBAD02F0218BA79E7220B
AF339D09A35CDF9174EB5808C0D92EEC9D5DACD070D6A19029E9AD2DF42A7613
D0D9BB0334A50522A0161E9C03B8BCED4434DA124A4F953DE6D389E1A779E595
C1AF5C90028475297CD313BB3F783351F60DE874F559855DB87C2DBB7AB01415
D413C8904F4FE6D3091CE262AA9E6DD35CE69DAC0A5BE6E5CA02EB85C0791B4E
037F828DB7A6B686AC75D2EAB197C1FEB877080DAB56DEC11823F7A431088080
055B71728D7C5A098D4BD8624490B1CA47A7DB2271C0F975844F401E642E9565
A917F4AB3480E2CBF9A16AFDB9A6A78A239949867DC9914BCC888CE209C2197D
5B0656C2FCCDF867E3E4065EAFA881492C54E36DF292E8E8815330FB25514905
65A0371F1AA168835A9E4D0CDB2E3BF409312238600735221E23C38A3BACB074
67E886E496A40BB6A3FD3C8AA057C714CAA8B73F83C5080FD7C339F9DCDEF10B
BC8C7F175CF2F1B9DA27F5E37D8C565AD3B79DC2B0A8816CEBD725DE9506932C
C8346377741E7EF4D4ED2397E7C8A2D6B29399691FF7AF25E153E1E850CBA973
23F1D77949C47B16FB981589E4600F6632DE742EFCD075D93792C23C24CC4DAC
B21E9C2AC041B7D3533ABBEA253BA227EA3F1A1D5AD170DF1B8D50E19727A254
1F96F3EE15031470BAF077F788BFADF4C39B0DA2A676F15C8D887AC091EF7758
01100A012DF396E4E0DADA5527DB1AC5CD09D714C43F31F8C4628C9ABB2B6BA5
4C479959BE0FBD9C548BB41AE9263F86D424292952AC40439449674A60AC7E98
29DD7E6BC1C92E7D4FCBE4084A4AA9B2F6A6D4DD868FB3DF6A1F5C456CBE1896
84ADBE901EE4531D86DF4C069293706B8EB32846FFD0760789143A6F5694DE47
264047B3BA33CC8B523A4C7DC5080AD12A2113890142F42F5FFDC94B95CF0A29
B23DFEB7FAEACC141B58F4422F8914669DEF74F8AC2896E5BD29267D50A96B2E
F5AB68D5F2A517AE1C094A5E6A17A45353631E06BC1C968DBEEF47DD95F36040
89E78137EC04023373F3E224D69C49266C583ECE77CDF4A79C8DB87B656C5DEC
2827E566DC1EC76DB0E1781EB2EC219D40A440E8040DE7CBAADEB67CDF1631CD
2BB1CA4094C520998135013471E39137B9EFEB92757AF3DB562BF9B6629773D4
613C434F9071C16A7167057EC69EDE3D1AE934227668E198DCB46A78F08EC77E
3BFB817337CF537404672B367F031614748BECCE2BFC6C71D0EDA216DB0C52A1
F6EEC2AEFC12FF2D34282882B71A399E536EA25DF2E76303209B0916914A453C
3A11FFE394EBE950BDDF861DAE07A31E624FA4378F3564D8C9DE37D43F31636D
41E77EC2030A4E529F24C7B7D1651DA0C08BD21E8B89C878AE3DC2D453B20FAE
096088132427EC4A244530037EE336198CAA00E84A27AEAF1784A6FD348EDEA1
E94B4650984D2DDC90C2EBB978D02865A97C4C162AAFE4FA7E4B4CBE5FB32BED
0D83A65C9DFA93C3B389FC4B32291C61576973791874AB835748D39F0B93B9C9
17C64332EC14A96627A9E591C7AA14C41790097D236BE836A1AADACD8BA9F247
4AB7ED9DA5BABBED917F67F7DF14E3846297497C45327A4CC0C15577D3747633
101398B6E0F07324401CFDD458B9871F2F32DFDC950D8712E3BBC4B3DFF7E79F
FE8FEDCBF94CB5E4186ACA08935A420FC98760527D900408F3C0FF566A65E62F
F39018FF3BD4A0580EB89C014A6187B424142695FAC53503C660D93B8B28AB46
093457736FAD7097419D7DAC37401545F496C09656A5BDD0652C80D0D5DE6EC0
09C755CF53CBE915152BBDC4442E579E3D9A08C741DE84629020BC0EB4C0AD85
A49E621E6A102546F1CBD7515F29036C4B4E280088D633E79A1FABD4B808FC0D
6A11E80E24F0139626818B88277437D3D069B79DB11502FE0D158EFA7EAF8606
6CEB5690DC6C96D8958D5DAAA5CADBF129A4457A141EC2C7BCECDF118D16E19E
FBDA19368D078A4532ED7D915DE7A9D2D383D0A81E48615EB83BA70EBF98A0D9
3F90A3409D905DBBC6A4B2BB2EC5DD77B4A8338CAEE369228F8B79BEA4DB20CE
BA88B6348134DBFAABBD23DE9FEBCF45461A79F4ED41630C7F6A7B55EFB3ABD7
5CE023AB0CEDC7AC109E53714B794DB56CDDE37748F9B2BD871F7D79ABEE7F62
0159F06D365763A229F5388DDEF2B5B01C7DE21C54A3AABB600D7F8AE2F2318E
22E3806A08AD3EE34505BD5051121B4630B15356FE1878A84B290ACC23F55810
875B389539F4A364E10C3FB05A6D40AEEA49B9773886F1DADDCED25774BB3D14
4F3CA618AE77F908A9CF442321EDA61D679870EAD0D3944BA8BED41D99F7B4EB
F0DD3D848D6A060095F00C386587C81BE34B35E578F5059658F2A925DE9FD0F3
C24C6FDB33BCCF9EFA06AD95B74D1376E4F4E49A727AAAA5BF1771BE11318E5A
BDF9797E7597C715BEB4D27C46F5440701625AE380E5B2C46132B2D8A37F8F32
0C6E5C76787D90D28A3C41BE707E01E7AE145B121521AFF6E21EC34A86D0A3CD
BDD9D89CF48D3A59863C1D3C7990343CE1147EDA87D762CECE34ED5B74D6CCA8
21E71833B196A1CFEBB5ED4A3FC24757AE4E11E6CC689EF13057E375C4650B50
36D4933712D88299BAAE809752B75D82958468C449ADFAB9C12A0DC9640269AA
F92376A72A81BB74F1D4EB1D3E0AA3B3251F8AD5C55299659AB2823290C4BBED
DFC08C8A5219887BA59BE7AE398E69910964864751E62104090182F624BB0E79
DCE8115171ED4FECAF734AA7BE08B08329944E1CD57D9AF56FA13B6C6DA70A2C
B44316DCB31CCFD900FECE650B21F849B8DC361289FA2FF6BFEFA00E75E10FBC
F02B196210A500EED31489F111BE077797127215E776AB0B258C5A67976DC1E7
ABBC143F5B941CA662EAFC6BEBFB183C06941638A020366665807F70476A4831
D834871ECD6E6A67DA8EDBA963D594A6647FB1E1744EBF2B3DBAF3C8F226E0CF
459D30D940EBEB132D34AC48D06670A6D4F1073B25D28F5CECCB015131518684
0B4066E789F0E3D6BE06611061CB2FA524AE9D4D8BA15DF33782D6579117C866
932511380E97CB45EC4C50F45E83894AF9A88907C43D73DF388CB29795CBD47B
813C1B346706443D6682E03DD10121CA8A80488805C44CFA48A9D3DBF154959D
7A2FEC0C5A473A4039BB8C5FED34C9433AD78682958843F433EB9B9FFE49A5CD
A5D842D70CC275A51FDECE04D799C77EA9A89D7FC01309B63799254BECE3EF1B
3AE17E14C498806B2658C83D104AE7B004726543C082FBA7CDB06A83AD08B4AE
5AF0956A593B034D84B722EEDF7EF8BCC46D688F2D8EAE4670190225BBFD8636
897D1989C20108F983133126B4BC58B65C25165ACEE651AB6F79A71BB49E78D4
D9DE63F744939481037CCE8AB99B223CB81972B6B8B6A4CAB6D5A83DAF20D5F6
C926359A60E233B8D0641BD0AB0B6E6E2F56500351E244B458C2FC7436F6F094
3B2B53913DBE00FC516CBD974EA18DCF06EF209CB9AF64817667D4A39EBDABAA
8CA9AC8F4BEC04839F660429F4B880DCE30420AFF4556C04762AA1635532420B
B79E7C532FC44B0E0B9E2CE9389ADE4D2B69BAB7E30462BB1DAEB7EE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
331942DA18ADF89C5E79B969611C123465054D87DF5D994A1D61E91B55B66352
AE37AE1A685D4D0ECEDBE89232C7A83FA5933C5DB0CCAE12A556E52137ED6EA3
70A04B164860533415905181A86D213D226CC31CA04E68466EDC8DACC77F1ECD
BDCA9AC8357FCB067938399E36F108196B486961E1593043C464DFEC1134D15F
EC669E4BCA33D4A19D872A012FD8B47CF365702F8ED9D812B2F5131A9262B557
21810DAB7D971C4F0E4BA859C41223BEFC07E2624F4255B848E1FD68940BC469
C2B8B6E6D0D3BE1EB0608538B3EE103927762CE0EA171DB9C69D5374F4E91EEB
C52384801A4694442AC869A70F8B6703670284345DAC40717194B4A0B810EB37
A26C0FCD35483B8B8EB948E65EA41B3582BE1EE17D7BCA7605D8F7A1F82AD884
A57B7BCD3199BD29AC2910A7202EEBFAC1402F5B0C98A712F1AE4B04A2F92CD6
83A4AC840DE9C898E75FE75E42246117D7EF6B4F2BC575EE9DF7ED97A82BF586
9E797AEB7C23EA03985151EBAF3F1C7D558C9834AAD14F633EB9376B4B12673E
2FFAD453A9FE96642E594AB772EF94090E9EC93EA97F2D6F5BBDA96BF95D4CCC
F39B250DCBBAF35FEDB093B24AE9FA7FD1284B73E2890CB45BDC1B7AA1F24665
638E90D1361F7F4EEC02AD9189D77ACB56D7D2F70C9760F0B9A3AE75A1DFDD51
16FA674D89F9B8A7AF6DC7811E1DAC554D82C4D33B8FE2E66D98881FCD36ECBC
9B82BC21E63BE13D13C0B166C5AF3ABBFDD1CACDC0DB164F437340E7091741E0
2E8114C2BB95102CF9A995D5B91F83C2E0E8CEC02EFF156C2BAAA125D5317D87
C3B20CC884062DEDD71E655F9CE7C12BBED00ECB2964CA66CE661955CF4C51EC
18FEA78F8B055B4F5FC547766AC970FBFC27CC1733AC34182CBE7D699EAF372A
F66D8F916993D5B87A3BCEB167608A7947678345268F8BABA11A00A973BA9050
D49447F3BE9E912C926418FA10B03DD444E88938EDB3AC5A89517C0D340A6C8F
DEE3BAA01A714B01032260F267A056041FE13E1215F008D54B3F31EA7826D317
E5F161CF340451E71CCD61657EFA7E6835A63E2EFF192EAFD851FAAACF7C31DB
A81B9051DDB511FEADC764A5CFFF470E0B66CE35DCDB9CF6D198E18F11761ED2
A8074F8EB1AB1FE89E4A68684BA5B275613D489A6ADA7AE5D246EC5BF6B9E3E8
9D54A07A7AC8296A43256B4EB8434DE45DE54D2CBBEA4858231B9A0FA9A67FF3
C6A1871AFAA9C7FE0AE2D608F5F8B8BB52FB767007B9F1A3401848280A08D115
FE7375CE974A071F9CB960D0F30521C8AE65E4AFCDDE9D77002CB1D5842C69D6
35661C50FF1D310D0F47E9FF87098B8C11060F95CC713D5BF9A820C1E3701CBC
8B540EEBF9E9A1A570B4DC04779ED8E0A0C979A6B2F98F5D4712D60722B8D8E8
3219E3B35F9E1998CA46764D1165AF0B4CB6153FB493C15CE3E046547C9B267D
1DC799F33A05F976800ABA71EA46E2404E12675074FA01877E74BFC2E9E918F0
C6B25F4F44ABFE2F698F063ED5159C0D2AF1480D6DB22E4543068A386E940E87
EDA64F5365AF6165DFCA9BA384CA6AC7028E929C0E7F3228072F40FF40AC1A90
039DFDA56BE31B57E611F8B1D1E30D312403A08109F25FD81F2711F38B30003A
BC890DBCA09B642DE009958EE2A15E60E0EF8C3FEE62A7EF813D78903EA9884A
E8AC9CE2975DC03BDCD31FB24B5ACAE5F9B42B1BC83E4A2E9690BCFE6C843916
D270020EFABD696FB58473D82D95F8BFE038BD3743421ECC823B46408E7E4660
4B4BD512062148919741689885512B9E31A497D075A4C9EDD430C339BAB75334
E22F54AE680B0E617C1143BF94DE98B1142F61A76AFF0544CB02C3C98236A6B8
38C39CB16C9F2F1B42711895F3FEE2CD3F6A45A8FA4AE91815B0036209F1037C
1C20C986887E6B09E323EDB4F031F956DA530B9B4971542C35F888EDA74E47CD
5268B2BE4BF0101F66DDFC20DC4285FAD9C42553154DD477AB6610BCDABC06FF
19732C837846E47597A7715F62740339B5C3B007A55B53F01F942FC471F36AF3
A5165D54ED1E8BC639A96E22680D17D909DD1B6A4487B204EC334AACC7810426
4D88FC8EF4DDBD53A4C2BD83F0D0304F026FB5959FAE21B40140F7C7C4D809E9
046A92489EECDC9AC338F72B3CE1722414AC12AE53A8FB6EA4A00E9675F284A4
7EB7BC37FD07529728E195C98E22B6F0D7E6743B70A5C9F9B1948C0B8532F9F4
2D389D86C501CB9333F04374A5A626AE377A76E1258BBCE91F6FEA580937E719
ECB13B105DB49A9BB32FD10D7B63068D1104DBBCC98A5F7293314A4F96A2432B
4FD37BAE6DC9AF9305C7A97DC023848D97CDDB056FA2307A897D0C8D32B15978
363B3DAC87121193C4037A6D7683C071FB7D59DDAB8C092CBD613FB62CDFC7DC
B078ABD97727454F1F0C30F2AD1548C6E93809BCDDC2172110B028D21ABC4145
DBA945F155A6199CEAC8877ECBB45DE05C22C21BF5F591904FBC0A439DB283F0
D7A146A4BF0F5B6B8F46D715B522769066397054F0CC6EBC07A6CC22AB4589BE
79AC24226089113666D53B3F68BB5250BEB518ABB66891C4E4801B83399A745D
62F0A6E2BD4429F3947DA55EAED5BB3A120FC1A8EBF382EC4E4A826BBAD90AA8
8CEB08E4F7C3BC31013FA99C633ABABCCB7FF6D76656575DF493BE5FC005B843
4DD213A390B7F89B8A69723FB158CE569515FB5DDF3EDE19F588F82A60001524
616DDC5901D6A41B9865ACDB394EBBF9953B0A2FF04789A2E0645A059F2CEEE0
C68B6DB4F28B78C1C62C1CEC8303FBBEA46C9FA398C180FE805C2894A029E69C
2EF5FC4FB9D8DEE34116F8326E763173C4CB11C9C6C4EE517FDAB18ED080D639
1DDFC4ECAE2353679840558241F0878222FDA9234DE36EC0E706F10E8DCD7EF9
F7A94394983FAB814D994D36687627128389F8268EDF98E43BF379855B8A8F11
997ED1F07903E098B32C0247650181819C322C895896963D62C839C766565C15
681126EAB6BE88709D1B7045B5F11504438B777109616B6B43C682729291C907
2FAEE3CB02DCB80502088F865904F03A6E3AA0F7B0976D79F92FA89761B0EE62
58D07780470A3779BC3225EE56E0F89C5FCCEC3951EB33726FF95C7594492067
23443CD43A20FA96ED9F220DC92A0A571ADBC19991AE41CF5FABBE082AA91EC2
E7310D37190F179711D3BA195F58DD6AF771E40938B189C723B698B36C85F840
D5A779303C8BFB8EE4CC472593D0C55C1B17250C996824DBF428CBC57021C97C
78011D2AAE581EE1768D030E9F7700412F7B068F79B09D6A2CDAFF2BFF49E0D3
044D4AD1DFB967538721ED9A77259D1BDABDC022D79CAED39684917BDFB9AA56
C6E7684535BC868BFE2ED234384C89B63A984873E6B87310B54D1869DDFBB15B
1FDA208DFBF10BABEDAC88699BBDE9DEC6E192541243A11DD7C61606733D2AF3
D568DD71FC7C4C00AFDA3572246E6126544D67C4FED54D6DAB8049CFB4FBD3CC
842E845335E65A9886DBA48991982697D7DE7A3793AFA6192AB3C929E989A401
2AD94E875EACAFB92EF51E7D9DA2FDA44511A71FE77A9CED2CA8CCCF1FB124C2
F0BE54E47E047E544D9AC41BFB7FA85578959E16E3B7B1D43F4573A84B992F03
FFEC90EC654E8716DDF45B2572865BB9D4A739881BC0B5DCA32D4DB450DDA151
A0EA3FAF0970C700B838DE810796E94B33917E8B49AE7F3A5B1E19347406DE79
171FEDCF29123CC76B82147CC65058902891A097E21CBAD5B72C2E1530DB2451
76A63A81CB1FDF55F138663C4DAB2B09DECF7614C290D30E46F3BC616DCDE455
0230D6DC964E0387B58749C9CAE544880C224302C41C5A8CEBA18B3E58BFDA2D
68E83CD88A971DB1FFB740D1E27F67E8B8527225EB9A4E5D2FA96DC23910BC73
4F534E3BD6FF8A9929292D9EE9BB88B339D45D033E7C616E49456B297CB88C7E
E520938DBB395B4ECA02C35CE3BA3BCD2097CD01E493E199BF514C74BC512A71
92E3A3B2B872D9ADD0CE0DE28E58F30043F2F6BF720C220018331BFEEEE67A69
50F6A10FF32FC0F7BE3F2E17278F7C32015230E93F1E89F5F4FCD64FF14D1766
EDD9092DBF5C2CE1B48F6B03492552F264A32C35699D7EC149C5C99CF6556FF0
4AECDD3ACBE4BDDF29549195D401C89C0BD107AEAFCC11E8F375E671DFDFBDE7
17F8CD28CD8222E8C498CAD6FA2BCECF6741D9BD5D7A93D21CC1B7AF857E7986
C7ED36BFBBC90017EAEA3FF21CA29F6BAF649FF62889E508DDD1A4453C83BE66
10734D56F72C2EB0A4AA6C7ACB8D2B913D92C31747D083BA2CD24F6828AC7B1C
CC99B0218583902BF51784BF42ED38F650F485E1936F48C0B3B0659482F98BE1
47D9E26A95D63FADB5AA72CAD23BADB71B7BB9EA310A5684EA0C6EB3628F5875
37B008BB3014167946D7964440B17F71017DA84EAAB5096E36060E32B0466140
B24BB139495E4D4D95970F87F6C2B28A84B75FBFD0C04FDA191726EFD7685B0F
361FC82D8E178ED620B9C8ED7BFB10C5E5FE0EEA9ACF0183535F2C23890DD1E9
F15452C46E81E7DB2EBB936A0975EAD92C5FDE6B4952F3AE4DF239E641635EEB
878BB58422BB52AD7B3CDA373A615FC3F1742371CB6CB09B644373D187DB2DD2
21A249BB5801ACF13ACF3442622E4C6C70E85F57B3D92FEC84CD145C848B92F7
1984C35167CCA46F3ED3B7F02A6773530B14452C85CD1C62294773F1C8652B08
B9C2BA19400169451F422D2CE5E15F661B9EF254DC16E3BACFC52B8001EAF572
C435BA5659EE6C7227213211EECDA5DD286BA9005D01D24E9182312D850F107E
8C4FF795CE607EA515AE5D6B9D9E0EBBE5056B5D20E926033BA0CD87DE255C9F
166F12201C9AB42A78104788356FEF9A1BF57B7E62FDB4FFB214BDF6CC142B40
DF6DD330772BCC4FF459512FEB87E90E8FBD00DA594759D76A91D884397EA906
152CC6F2EC34D273F09F3215424844678CE14DCB798A25D1572C64A689C7DA29
6DB29D22C9B75DCBB3ABD6EBFF1608B6D87DEEC27A00A825449DFFA9EEAD9FB7
159DDFF46AA0CACAAE27931571AFBFD93EC588585A7708CE54184D4569FD2725
9C595692FEA35662F6F6E0419FBECC8F210467502F98ECA041F1F0B80DE12749
F245255D83C85F33FDB21AC5E9A4CA9D5F6E93AB21902EC2900C6FC379882F43
26AD226AA2B9E67211D0F6FA5DE4D8041799D660947BF2C6783A58E7FF5F24C8
72D6954F8873BB1ECE78EB25AECC0F637B9B56C1F97B687016C9CF4B4FA52731
C008856CDD333DDB8FB99F7B9FE384146B0D2024D1F48951A5619060848A3B82
85F221FCC70B4E8A3E15DF72DD44911F181C0EFB05D1BF1F9F35F7FD1C75C00C
D33ECE77BC4C51390E0D14D6E3FB133450687B0D8C3197C645F84F208AE8EB19
D5E2A8EDA69F5B2DBD4576B8E69D3A8304629F97B62C88FC22FC4E379B8C743D
17510334A60DC5F574002374304ED2186112DE78B7F5A79D1AF10527657F09B4
F7003326A5196E4F8CEF10D156C1C6685388C6ACA0DECFDA8B39CA753834C1B8
70D2073DC561B7D29F163A7196056AEC5DAF505C19C4008CA426D7EADCA854A8
04BBDEE7C5E5DD8DC51F9A00A2F672C917F2A1F8E859603F6024E1FB3C9EB221
681CE945A5C2A85DD8A62CBBE3B59DB48CC3827FA675A7BA51501A1DE1BAB115
8BCC7F6151DBCDCEA71A9D2D07E354C8BE45F1727BD497501739F7118A713F91
1CD550060144CFF4FCD9DDBD6386360C63D5E4E2DA871A0C67C39DAEA5C99D63
C526EF10EA1D4FF42F8C7E5C9B59C12FB5722C61B5FB33F1E792D7C5B277ECA7
03583502568238781D059FE6E41BCDFA2C3012E2F019EB183C3EB89ABCA66249
AFBD8FF957AB3CDCF9C7E08CD7BCD110CC4EF1F4F0CA004195E81B421EF29EA2
0F68BFAC46846B3A68AB8959DA3827F4DA1FF483EDA1BAD30134C9A641190CDE
2E9E039EB9CEC203983C109DDC194EC47A73E1481AF1EEA7769A84004E065E3A
04BECB85D9E236403B46163BF291B44969CCF07FF219074D5182C5AE9FEFA116
118C4FC027D34725267077DE17F1D2D44E787A3AAABB6DF57A5F516F72FF65D6
E6BC30C51580850D165635D661804641B0C4E4826581288BB2DB30780BA288FF
F8BFDE01BCD20DCCFA8B3CAFA6FFF34596A4B77CF0BACF8D8406A2230DFF9A90
95BEE529B321B513A99F6B2F54C40937CE4814ED632A48C1E0E386A51A3B12FC
F329A6BB574E4CE8837E1236456409DC69F209489ECC84C58067B71E2B1A52F2
C02CCB80AA7375771E7FA939B0F6CBE709F7856D723343EA5BAECC15972C02D7
107E8AC4EFBEC2E6A79797264B0E08BE50A17FA54F5DBA7E07E4787E9486D841
A878E5CD49C28D4A3F61858A32CA725F593A5A2ADCD03C9C631824DB8D9389E4
826735C288F72DB01E3FC1BE7150DB13985F9EE81B5C407E6CEB6F905CD85B50
6A3E53339D0467ED43DC791A982D0FA871BE9E8FE4190945DD57393E58B8A319
C1C76F5A2F6257A773F646FA21F4E48A59B4C8CDC3AAF9BB2259E0BACD02D90F
EFB7ED26D22BBA5C363DCB1BC833DB7CC92D226BF745D90FFB3A999495DF8A5A
A2EFA6258C45C89F4D47D49A331AA84262A174B87B2413CC2838544D1D8133BC
3F86B2A39229F3C63E357CD0336262EABB0220891CC9E29D97E637AE152CF5F2
81BCE83ABED9EADCD95F710DC8B8971AFFC5A598373281F2430973513E62C67B
BD348E811015835644666B395485CEC5EB22F47A7BB9F9EAD492F39D64B70410
3DE4E4C4BAE7638FC97B9944DE8EEE668701FA32AA52ADCA60630FDE7F6B5E61
F5B2AC2A5A1FEC2638D26A32205AD47CBFED0E7D8160CDE3FAF348194EB9B3C6
45E19FF2B64E69184B59BB18D57CF1E9BB80703E1665B54A557C765B5E643D3B
9F5FEB3A497394DBEAF6696DF6F8D0E2A10924E4F5D7EAFC4DFD218DA8382475
7895773C2D4FF47E91010244941FD6B8B5095BE96D46BF935703E637AC86A60E
D28079714B0D01C8FE28DDAE8AE0DFFBB373234258FC057436CB5E9AA4568806
FDB6500A57CF5D507BBDB022345F1AA4B75EE7AFFD28338DCDCE00239D941583
9AF76E88BA3C1FEFF76E8EBC0142C518B43F914B189520A2F1F0978B4AAD22BF
FFE12CB1EA03EE342A47FCFF6F381B63C1D7C7A5ED1D5EA485D1DA4E9C4D9EEE
55C4FE62440B61B17D866533232DC741F5BA15F5D29C81D828CF460F176B7FCC
036AD2DC6A2BEF1792C6ACEC4851588C10508CD85436FDA57B14649EFECDCE83
735FE582632244C1087DDC41062D0E99920A49DF415C9D9742E068890A93A05F
845C22328B5207B69485BBAB4727DB57DF62BBB03BAE05DFFD3F6F1893CF645E
F019112733563B57C6C9E2B21C247169EA43A78C07C8E89FAEC3AC22D00C59F8
15EE7BC9EE684041849329FACA9B9F28268E2C303AF7A84CC00770A32088C028
0F6EB7548F447628A396AD6633D0E18B84B32E54C8FFD671D971CA8112E91388
B5B27DCCF2633EB9898D418E8A1D9C36E6418183B26D2B103EB184F1DC2B4E71
028DA354EDE41E482CAEBC91DB41EE2504A3270783E8BB8F2BFDA1062D0FD487
18433CD8E021818B710CAC4EE7B23E28F6800F2351961FBB199EACDC2FA79155
767138DCB842A47B3E7DFB99851D186DFD8EE072141EBD00F71CC132C65EB639
7842C3C866D9421165E563588EEBC6BFA9E22B62B9743942427AE56A1726F2E2
AB8AE2814B6B3770C705D3FE4A40DE147C40F098699E21C9EB95F068EE34FC25
C01C0E15610730D975AF986577431172E02CB27A49B09C2998C7108D7487C40C
5AD457F50170BEEED9FE18BA576BABD6E3A8A428388EE19A2E2187F758587B5C
74A96B29CB4CF17041D39CE891834B3DE11AD1C9801BB3545FFD583A0AFCA57A
05BAB68BE33738CF63ABB6B3F5B12B5E242805E0BBA8C8127A2E86918923C01D
1EFEB296756A55DD6652389DD1BF2330A00AC881F1EB0C375C460861C6797E5B
8B35868ED95BC93B85FA56CEEFC4CE5CD5AF0970494EEE715E7F3226D5AF4A8E
8C4C31B3AF03CCEDA6D749A3B4BF685331AA8685B5A9383E0EF2B693A49D426F
817D2F798D1B1F8E4A7B1107D802E947E00888C395D4DE03877A1726F799F950
88DBD3595CBEDE3F3AD53095F23C7916142881BDA2EBA0D1995D2A34DFB15561
3812E5D5BAFC7948FF18FF649CA7949030DBC5BDF91861F19F1EBBFD8F8A9896
E996804DD1BB68635FA8B9B8A8C328A4D455023E7208799EEDF972AA4EB52297
AE6ACBB22B27A0F5A0D66B1691AC785E7B8054E52264C8339D1E5DECEF9DBE5A
5ED0E217D645FDE82FBA4FAB1D9082941211B97C3A096F9957C8544ECD719C56
42F219B3070A2DCD8E5375D18C61B56863089C71DB6395F83B53556C3725BCB2
D3CF9FE7D62A188C2EAD818D5C6AEEC937B327302E63687EBFDF130B56D4D510
C09B3835FE33DBFD1AA23560D288AF4C3FB99778F37119086A04B69FB1833BB3
E9C5F886B3DEADA9FF0E2197C5067FCD5EF673B296A1C78E702D539F339B8400
A25F2EAF850228E42EA2EB5884A54D0D494F0113930F50537787B5F98FCC2706
5F8BD4164C84002CE64D630B3E201A9EECD7BD788A11CAEA2342A280AA9ECD27
694BD59CC20FE7C3C4F1980DE446F8472FEDD800C5237329A09B3CC02816531F
AEEA8C43921B5E4A89B96BA558A1E0AA9E4E587C830ADEC9BB80F01CB887B7B4
4A20C2050DA9687669379A82A8F752FEA3AECDAD3EDE3C13A1515BEBF338ABA1
1C2439666C895C2B6E97FDAB5545D7E5C57A6E79F6F372028DD671554D3C967D
DE9BAA83D2D745913A16D844143CFEACBEF82A1EFEA970C2595A82C998343F70
60E42783075441ED9407751E17B126CF478372955612FD360E0D3F0E3C8D61DD
969802BCF22A53725953709903893D50104FDE762399193255D9974EE1041E6B
308330C5CD735CF9ABD79C36D5047847B31646FD8ADD07FEFA4552DE57AB403D
0C0142DFE5C10B14D2A0FD0D4AC33A76B985CDFAD07300F29371DBFA1233C261
F01F2D8888085214A757DA860E591136DB32299C7843270039CF1E0C4F253A1E
2CE94AE25ED082EF4E5D29FC6D59FFE74508B8E1A1FD1C3E95FB40AE1998EDEF
B22ECD79C6DED239539D503F4957E1C6683C3741D0FD907F4E52A61C51A10B2C
700E62161087491ABFD1D45E0EF1DD98B3A5F716B975B058C593187BF83718D3
78AD59F783691AA909BFFB68340E2DD477627ED2EC1935B8C1DF34964ED1A709
3E858E5EEF157C87EC424D537F87D98E09306F870434233BEDCB8D63EC86C2CA
67B09DA803C12AB19FEA2E1C4FBA9197907596824A329AE2D8ECCD58F8446535
6D16838875467B8E7103F20CFCDEC3473553F72F197B186EAA5F9F770679D0BC
9D79F3394A5F09F3E460070AB1E1F3E8E94E4C7AA8FA63FDF229389BA40F5242
EE2CEFFAA60216D12F91F6378D45DF8E74751BA3D892FB1E3EC6E3F8D0BFE2B0
CCA4D4DA01C836C8C4614FD472EA9520F64C3BF5A305DDD66C6C321BD4457F9A
A9850A876C73C35FA3A868D1C204BC12FE35971E0AB1B9E8F3402D2707F42215
7F593F144A12144A0FB9A68CDF0A10C9BF47DC6963D7F260CE070F2B9128A772
420E9357630701AD6FC10413F375E095F97531B1270672C9E7A5AFD1900C63BC
3D08843E4F69DF011C95F271CD8F97CB8525EF22E44F91D23CC4DD3ED9560495
4B3C7301389628366C01C3BB68F9505286C68BC3956698207108947DCF2EE5DA
F84CB99ADA6CD341BB9710FDDD1FB13C051BF210862EF6F2A0190CF4EE0830A8
FEF50B3F225D123D710C53EFCA4E7D8967FD5622ACE50C16D2281FF3B37FD33E
C7F90E9E2226C8643E5B344BF294B98E994AFB2CD4169658B3A6BEDE1D8F3C1C
719243574455330CA3B50FCBDCECD7C9B483042A457E5604917E967DD6B596BF
420B7E5B81C14142BBD8968830E4CC31CB5C95EB13F408DE2FA011167998B3E2
D99D0F302710649266D654F4A3420F87431600BDBD53D90ADBAC4B2870E2FF86
E96F8CCCF1B2FE1AE4247E8329B8793F54492A3906ED3B07CBBAE90F5C551AB5
D4D0ADFEF57FA402CDB196DAD0D6418165CC86335319028E9CD444A53B4C0AB4
F610F6A6970282F23AA1804AA62938DC8D29A9FD1081C0E347F27FD64B0AFB3A
97268FD03957A4AE78E73F81914DA88A6AB61C36BCD0204175635B56E0438E49
5772C45C48E8A6B7F16C681414455C19682AF9415217BBB940B5D6B79ED6D210
AEB4C8B960A9B976F17E605003E125493C0AC4686EC2A5BF307A307800290E60
CB1186FCEC07F62391F0B797605225BDFD3B5A217F80809D26D73E41CF216889
EF7F6CF3C8CD5B5002BCC6A9328BFF2B9689834C556D10E263F73276405974DF
569B5063093A788E23FE47363F1FEE8F7EB09BA4D3F0298DE40EC22E354EF342
BDC39E50A6917136F41381A92C20E3D00942B8922633859D20A13F5C59ED0AC6
8C863C3E2ACD95EC4C10DBDFEA88F09F6041F693D588BD522F489EA839B46BDF
ADC45339412B222F91AF05D662956E330C128E09DF8DB452D36C552C6CF3FDFA
BE9CBCB6E6D77A7F5D7227D382268ACD166638BC198BEAD920F0AEE9D30A78DB
AC3715BC2C0AD47CB169BBD5D21FE788C18D01504C8D2AF204D32D7785965325
E7F5EEBD5376AE68CD8B4155C49B98E90C0B754143EBA5158812ECA7751E5256
2C6839011ECACDF69D7BF2D02962299A757E7AE5908254A089F343429EA1666B
B684C490453345FD5906D609944B56D455EEA4445AE8B31EE206373B6E49289A
0F1FC376474F4FDA49F7B4AA57A8047F99C71C73F4B8A3097426F3E83AFA30FE
9626E55F593A919CA519CDF397C3DB5934AEEFBD1EDD2DA88A63525319C69781
D8749E0D8C5B1EBE04A11A7FDE2AF2A1AF9E5896CD45C38C6C1D6332CA3D4BBD
DCAE0EA12AF9F784C7A32CE2B1EB5FCA9CC4C7E2E139B50C5E6E6436704D80A8
182DB14DBAB5AAB128729ED9CF0A3091D8FD06FB32D1E8AFCAF9C20DBD2F3B62
B0C3754EA08C76A7FE1A0211338A919DEA018D0F25CCFEE41298FA90729DFD79
266E1F91D8A77A9BFEF04F73840418758B23DAC0DA8C31B4BCF6AE7A67B52E7D
E82D325411958E978611629AF213BD5AD35931CCACA3FA4CF17E518390710860
88131FAE05D4DE22FB3B5894E045A12EE836F4016C1CF723668F0BE9710CB83B
350EA73B0751BEDB877E360560D05A5C44A05D843D840991F98DE70CD1BD58BD
3929A1C75CE8CFF31B28153F3A4788E23BACB74B7BAB792DD922EA80B88B5155
027C84AC5F7ECC8F65396AA352A964FCB901A2C9913E698281D211424BB9D091
071A1F4A0A6D5DB584F4531403AA680CAA20A10483DF27D9EC03D4D3CD128D16
8F17FFF966F78C091D6E455C2D3072EF3B8B7E5D8CF5CD24C1566B9C7AB983ED
C3B2E1D9EDD0C814F6EF52FE8BB68EE7E08382C091E38174290DDBAE5D8EB683
EDF6BB9BA56B6A33C109ED2EC86ADAED2BDCC39EAA29B506FD580E4C75DB6589
7F1FB592
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 33 /exclam put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 95 /dotaccent put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 127 /dieresis put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA1566B96E221864A
45A24ADAEC63F61C9FD18376D3984449A1F998C318A8FE36D0D5020E18A49625
0F3BB603BA1F3E66FF412F6A32433FF8BD2968D79CE4273AD0E0CDDA5153C2BF
F8A46A2244F9394A49D339F763F5A7411A3C29336B21CCB01723705AF589B078
3763035411FE36AB5D744E81379106890688CB5BC41184548B7FEBA08DE7288E
E6570FEA20C51FACE8E8F824BB61A4A038AB817C47B87391611B77928B2565A9
3B27A573C05D36ED01D8F27CB2C793370FA9B90021B5696280A55F2CB6117B64
293EAE0EA5A243F56FD007773CA35DF71B3D28643C25210CCE25F37A5095D6E5
9CAFD99DD1DB0D7EAD454C13464DF6FF5DD42339797AE5AE467084550FC00139
6EE818C6365007B2FD6E26285B832CFE6EA7E99665A224C9813C036CED262639
3FB39C1F05FF8F31D2DEF37BB9B883334F51EA124581B786A3D5FE6424B19872
AE7CB657C8D9528934B990B94FA4A6D61BC9D2CA9B4E95A22CBAA066043F44D1
AF32F545B9E123536914A7FD7FE96F12039EC25128C810BFF546AABC609DF57F
E19D511F324E32956177C4376D191C691B9F0B21FA84BAF3DCBBA536CD710A80
1DCD4C83C02E69A140E1A4CFFA3B012398F21DDD96ED8060DB98EE133F430022
41BA1DA473F1C99F0D6CDBD35188DAF712AC83E0EDE08EFC3CA2B4A21EE55692
CF22799274A5CFAE84C89C937AEECF9CC71A328015B63C1730FA68A18871E174
D035568A73346EBE4EBCAE410A4F2505370A0ECB487FB40FD823065AC56CE66A
9D8440C5B3F74B855EDAECE69835137D4D76FC0FEBA53998F57EEF25C7E3D9A9
21BFDBD66C84D8AF7D8A3B79FAA9DA2963FD47689E519FBB2B7793CE6DE04A5C
203539BF94A5A700E65B5A5DD37B051EA4348BDC4CA39909ABDF8C4102A58FD6
661206115F7EF6C29E12408BADB83AD40071F53B501C15601338467BED90B659
2708D01CD77E109ABA63C19FE12606511639C5D9D5522C80692D1CA874E17B9C
753AEEF13718DD36A008B2D39D618F4F766174423AE972CB619634766A5DA025
F9682D9E2A3C752D0F6F18B0D58319FCA606BD6DBC4F83D19DCAC84A6165B460
AC1A0057B12E2023F175E6A51FC12A4852043F6F2F2625ECFF6E866293531437
1C060C9383278C81B8DF68BEED88C49F86B7617C5B938457D19FA336C616D2AB
0A430B489EAE7998EAB74FC8C037550E12EF9AC540FD37473DB1A44B1747A4C7
4687624D806FAC32A53BD65A333DA3732ADA2774D6621BB59BDAECA5637F1F41
CD2AAEA8DB9774C2730DBDE3A2F9499C719A0E9D59FF37C4F4E6E54D5EC402C8
6599488AE21DD119CA2BF54EDB306B26351D0CC4C82040835580087C60327110
9F8A1277DDBBD25823AD30F0E960604BFF9CE454C5C841119F73535F3093FBD6
8E47B1357BA56E3D906EC70D68E85465479539187B56EC67A64DE38FC444950E
A82B014254689B676BD02A3068ED7ED5D4C9CA1839ACD730A1796A62727DB74D
F13E9432044956D254FCDAEBCB394B557E526A76D7CF66DCE72CA6E9961AD97B
5E08CB4DE10C3F93188202864CF17322BBCA7018DE57810B85C38285BC05D66B
29A4026617E88B9D9F803ADB2A86C80AADAED3137F1A3B75521ACAD1E87B26B2
861045257670DA2A0861951B46AF170476663F73DB3290336C5C770812059B68
82C33E138DA0528AE9F5191ECF2EC709573B9C21A00E59455FFDC933C3C2C334
73478758AA0E444E90B9B020431A62D3EB724A754D66136E25BE6ADD9306B0B1
5B63048A57EED909FD17CE62092B56EEAF6D61DF0657E1294C700317931A6556
3954516F3D4AC1ADF94A94740B8BC6831E15E7CE8813D981E6DEBF543BDFE1B5
EE3FCB42D1772228D059F3518AE48D3DD1093DC0F69B291BE016A51E2B99D900
34B1C661F5D5E203EDC0F5BE9564D7CD4250FCAA7C58BF186011C242D9C4B8B7
D796A3C6E7D59BF73F3BE5A96A5A71196D7292ACC71B936061B31A9DB505B106
71DEFE09972BF319444134346A3453C21C9283D4F36413FA366A2A21E272A93D
F11981A77886B44FAF14281CA4E6CBA9BB318A80D9A2716AF6AF5699FF308078
FD19A2A19AA020C4505C48C9B1979DCFF5EEA5AD70450A746BB313D613E5A0FA
197D4F48C04A080EA015BCECD9F5A73C27A405856BCCD52D13DC68CDD7E21C65
B718627EA2DA6794E1726CE43E66FF6240476F2DCCD720A42279B17A29079082
B47A29D6F8AFA85AEF3CEE851AFC1ED7AC887739DAE40E9FC488F6926C9D501A
E96A2EEEBB8670A5F43ACE15BF6DAF9C9F49044A8FD2D158FCE783857BB3ECB8
71094AB69A6FF5BE116016C578A0DE2DD73E77139BA5E9C217D88BAA2DE96868
F55D078389CFDDAFE8CBB12557F5EC8ACB894397C63A28FBB7BA00FF380593B0
198785B600918CECA123FCCF445E76AED79637B606A7A155305F6BFE1C45816B
EF256E69FA1303564250FA266A93B3934274652937FF4761E212481EC05E2750
DA071F1351098E88068A1DF63B8ECEA323BB4AE6C6E33F41D94336B7DE230664
A3A01A4AC34FCEF5E665DC6D48E546EB5F8443126B15EC2682BD7D16BC18A99C
D006DDD3DA0323032E314A7E1BC6FA5EB804F5DBCE918914021BED0F50FC3EFD
08B975A08054FEB279404D9F0C5134AF4A906FB3B4AEF45C655A9459B7EE6896
90D371517947CA902A4C70806FEC414D00D00A815C85AD9A38726D89F8C5AD5E
4F9898FFF50C36DA9D659B4CFECDFB789B54C363E042D32642AA4279C4BBD738
79C858D872560F67BE3C311BFB0D25A265A83A76DA3532F70EF8F6FEA32F6CAC
2131CD1596B9BCBEDCE054B2B48C50DE89498EE1A8DF090C50996FEAE12D6C13
C0D6C50E7475C6F1FF96A4927695DFE8224FDC73C246BDE511B10FC4835E4A91
3333CF7A7E8C8D2566AE43A8CD844BBD7BC4576437919C5EC9326FD7C6D44695
FCB2AA0C08F569A64D7205704E37646994401DBBCE141F281F792F0CF7329378
9ECBD788EFA9D2597F82BDBE85CBA7BD1E4754AA58E4ECBE61E0D71E54384C4A
0290BAA138686A82FCFD081C7B014366891E4A3B7CB764784C991AEC7336000E
17A20D5E85D4EB4C30E38270F783FBAE065269C8D54F5F1FD82D3B260B4E376D
0CB84F6583EF5F1FEE0EF2A9D8EE816CDC93E3F778D6507A8DCAE3C14D5561A2
055E182EB0BCF7B5EA6FE0E2494CA85178CF921DBEB04220FB774A08D44C39F5
CE242C9DB20506F542AA9BA329A51D875321CB345BBDAB85F8705EDB1B66FBF3
DF1F14104ACDE94214615440B4E864894A8A82F0D3A142FABA90F4CA5F9A1548
50791D2B03B8E26AC0B4C03D20D480DB70B8D463FCAC625AC09A8905FC9CBDAD
F87B2160D8956231DD34F4D1429A096F35EA1386ADFAAE91F8FF63C96CC9C74C
573361FB3EA16A2809F1BFD86EEC0E8546D92FE715CDFC44E10792E429440635
4B9F9B03D6E28E84024A9935A9727DF8FDB5C8FE9692310304ADDA3FBB6B67EB
7FEDABB1F0639DB5801586A058E08D48E444E522E72DD27D6C3848BAD374CB17
32F5230AF67328F064B1F21992D1F1D229F8ACB6B8D54D0505A847D14D885BA0
9D08D9462C629507F625A9C2138EBA9070CA375B49A4D9EB5C967E5A5E0AE52F
61C371A6B9FFF1889C67F85385A081DAA420DEF3BE79F2DB352E7C5F7A574304
7BABE58581292A304C41375DAFD475F9EAA1E455BDDCFFE619B78283DBA468B2
1C3BE25DAB0259E2B87920B66ABEA2D61C137A203BEBE0854EB72C3ED36693D6
4DED918B2D369AFE33054692C253066FF95BBC2FAE3503123B982B06557AE81C
F88EB3969FC12F933A54E142760217A85A243C0DD8B26974362BAF6FA7C4AF3D
006ACD3424DE48D241A8B2B8EA1C96EDE36DB9EE4FB77F1FA4B7063D0B9A2AAC
F503BF60CE4D1CD91EA0010BADFC3E131E881B75C8E15AD36A13E4B2D4B41568
03DB87494878BDDD8E481D34EC0F35D23870B38E252BEF3D77BB5AC02749C775
5887B61D2115CCA84A13684F6E8CD93BC9833B7582F72016DC7C9FF8205E9A0F
7293B166F7011DD05C3DBD135F58D8991356F613CCFE8B29F1DC876EE6BCC305
4CF9D1D9B5906EE55C86E890B54E2D17F7067DE1A3CC5428C4CAA3BC4F3C04EF
08705458B6C6516D88281AF096163482E3317CC38D8FEA2385A2A0548A95D724
43700D7B8DE9556526F58ACA0BBE794C854BA5DEDBD1181E1E3547946E63A578
8DEF852277553E9B1A640DC885A0880803F0AC4EFF194AA12E83E3E1D6C7F85B
22144CE536DC6EF8BE55A5431D9BA021EB4119158455F83A175870851115978C
D907EFDE30E30B8BE119825A220F779F130292A6A7A6FE61AC01BDCB5CF988EC
4A6FA55DD889813E2D14D89540991FA087DD776D68DEFF5B5130A38D42293504
AF3EB7E15866007DAD70124F6989EB8A921AADF6015075346ED3619F98ED5662
C2F1E0F61B2B013A00A0BFBB62D8706176354E67C2F5E6EF7553536D93C5BD94
5E3B42ED72972F4487EA3037B57EE23CAF0488AC03ACC25A21148A8FB2350E6A
C028A427F2A00EAAE09DB13ED86615010A8B3C27739ECB3C0F6806C6B8C82081
FCB405A6D62FFC155CA56DCE194AC2F39317B1AA307E15397C59F6863ED13DA4
DC7FA6B92EA5F59B8B6054B510F94AAE39CDC102F6D75272E8424FCD5CE17AB6
4CFA1C7A0B5F21884F0D07E05C5C7C1304B139EBAFACBD78B7FDB5038E8816D0
1F91F44BF77F6D37025C3D1140CA1C1F5924E7FC23C4DC5FBD4D5AA7BE2B6A03
A1B9971B7B1F499B976C6291019834AD66A79B991178E5AA818B2260B5FD9DCB
1F95DFCEBCC35835ABEA8F31402FD912980022E2ED07E31CF2F41E26EEBC4E1B
A70E8924CEFB4AD7FCAFB2568FDF251F7E32BAFDEA21816240B015A156CC206E
36FF5897A0C3B17BF69C4F80757E6E3E729C8413FBD50AF2018DD1C6E19A6EE4
AA0FB45CD7DDCB4FA1D8047D441B1AFC681CDD9AF8B0D0AB61BC049298C245E2
F6811F94F7F7C4CFA13F1071CDC9C4B62EA2DA26E79E88C339D80158B60B633C
A3B64BBA359CA58ED35DCFDB7BAE4477482D034F62EDF595A8541ECB9895295A
BDF4C965831A2B5A0EA04AEC87E8DB0C12F2833316B65474839E680E6CBCB94C
8D5452530AD3E696293329A64FF8D478E7CB01E0C678112C54A42BFF70EF3A21
6FACF8517AC2A20A8979235991D4CD2CAC33D52ACED2D62BFFDA8E52AE7E5269
479C3EC20D09B6F03838AED6583DAD2088CA7F3C687C90BEFC0DB9EF1AFF6574
75781652F67637E91DD657A37636584DC96168B7521B0E49CEDE0557DA24F0B2
227618854EBB4C3EAB09340C59DE5A93C5342F7F4B0A0C2A504E2987F32E7007
FA4012EEA5F9D322DE1537F1E7DB2825BD2D1C59B2C57875FC25F8B70294854E
8740C4EF5835D2989F9D1E34BCCE441E40ED5A753F8E2364BC1FD5896ACA6693
98DB9ECEEC546F4293E076368684FB80C89624B98346123E0E5CEE29A8A8DB37
09E1F879D9B61A96E7C9A15762EECF2AD454D48F166E65601E7B21257EEFDA46
30D8B50F6F6C869EC9F7CE90592ED63E156FCE856DCE1B011B15D4AF5F1D0DE5
F64BA09F232999792A15D2E97451C105AAC6FF4EEDB60A1B28F31445954A83F1
1EF4FF006002D040F954F5D27EEB5D43162EC78452B46376FEFE12EC626A0255
D33F60AB53E48BD97BF584C6F868829D4009F927636B1F61745F48154522B548
363A5E0223FA060E87E0D027AD9F405BCF76534DB8F4D959FC2EC03A0833D729
4D02DE35B15120790910E709F77FC1312FA1DEE6163A3EDE8A0D8A770F872803
A8FD338D748996C99B229AE1D178F30D258CD74EA2561891B8B99DE9D809DDCE
CC4F97F6433342A873476FF3EEC4269B25EA8DAF98A4D664638DAF2874D0A2E0
50A3B1258B20DA3B74EBE9A65CBF4BF6310B1F54E87A3BD5A5D3D7110EFF30C9
D85816BF2B50657C774244BE05D925EE1385046C48DD062F137FF8FE9A66C39F
A8A6BC8DB72149421DEE88240C2FE1E3D0F244567C3B6BCCC221EF697FA2FD5F
EF5C44BF83BEE1E2AB16D782B00446D35984FEBBB04B56050D9709EC1FF01B72
38A2FD44E9F963165D1E19D1D7176DFC04A50F7228FA971D4C38E387AA50F4E1
66E84C3B5E4969AEF6E987D802653BC61376EB9045BD4B05F6E64073E62E4576
07BD9E2ACEA4625CDE12ED19566DB13A605343A6745670CBFBC55E491592DD77
53CF70F6F6FEC23295C7E4BBE86E6F4EC917B5C6CCF4DB592CDF80966CF7FB91
34C7D0BA79466D0FBE7D7F667B7A16A58174A718757BD3F5DFEF56BDE57112F5
0DEBE38F6E17B80BEC8B2A3A23ED2790FBF3A9B8CFA01D96C147F8437951A3C9
64DD9F1FE284B0BD1BF5BBA60194E0523232F0CCB7E5A29DBC580BD2793764E3
D09188A5DA7319D5B4F47697CC2D3284A847ED88D7B75A6B5CE271F3F66C90A7
AD758F60CCF11107DEB5D5B67FA1BC4A53E31AE35DB22B8E45C3C8F3321488BC
3DE5D3BCAB8E7DB504B2C66FD60AA7646C7329D5AD8968EBEE1F833E5519149E
A43295B9A331AA89BC9969AB2B4A63A879C2509F1D12EA32065188CF339EFCA4
EFE2F344116FE35B56888CC7DF51B7BD73E6C61AE62C923D0AA14BDD1F3487B7
20919F17A20BFC9D41E50288503E690D1A45AF8677729F8FC74D73106BEF5ACB
1AD1BDF5ECBFB00D18880827CC83CE4FE087128FFF5523291EAB9ED7F908920D
5890C94733D481DB71EB2AA32C452E09440396051DA544E0B687AD5E1557F949
63EFA7DE79F6707984CBB5B648B9B31DCFD5838F8C083450045DB0C5A9B53698
C29C145C565E33FF839BDA147517D936D3C2BB8CF6DE0CBCF24181C189C3006C
1381399089235D78EFA09A916E5F7FAB3E2279A42C96CCDBF69C6F0A71DF7B8C
1BC6A0B5D2BFAAC70A4B14351777347CBA46FB352A36A491ECF4E1952A4AE21F
08BA4B0B3015FAB0C996F38E516791CA2A6895BB52895157B39B10C369F1F64B
600011E61A52A81E7E527C46A817A85FF362563F144E9C2A3021714F30B69629
A0E88FACA4C445772E53A6E862882DA832071ADCDA1D067A60FD130CCF4E54BF
D6A345203384E766473529AF152ABEF57C69ACD3D9FEB9C65FD2E5523A954EC6
3745548F270CA1374FCF5E34B7423B57FF78A25B59E841B28E617A0C42154DD0
517EC7089073AFAA94FEE6BBD08D99B1355FA62944D90CEF259DCF1E50ADCB4D
3986DD522BB266790937D99B05B78D2A144FD920F49831DDCCC3D96025CCF4BB
522A6E8DE4F2C00EFEEF44DF7CB1966F62E69808A6F751E026DBAA67AFF83214
E35465FCC675194E97E4FDB5ED3664FAF1A315E0BB1BE01B706B863E11908615
D83669680C31BB90858A91C98EDCD038E389FD724973ACF8B56187C68A818048
09DA01A6C5956944276576952B1BC2751E074BD53BEDF1E208EBCB0FE921EA34
B87914B6A83CAD3E0D102B17393291604CC0A1E828DB230DF191694A71AD2FB4
6ED3C2188FB9535A476A675964FBCAB962ACD992F9217EF76FE431F4A6B2A44A
41862B5FC806E160BA66A0D689A61AF63219099C2976EB18FAAEE3BA05F0E6EE
00F1AA6BF7233A353F018FD21D789CC767749172877ED4A25CFCCA3E7771778E
AE22FD131AD30F5741756561662DB09D163891D3732590956990CFD921D0B16F
B7644216A3BFA5197E4076D58003F6C24A0AAB56B537CD94EE396F9C8DF9AAF7
86FA56DA56246BD61884704211C0FD5021AFD6F053F6279E0B2FC3448A6C0D71
3C08A18C1DF426AD38208F27E3032B259270E2A009B463588729E269071AE54A
3CA0EB4A1E1C74BF12548FCEA79032F7D064BACE69D0BF8F052161B7CBD8848F
F3ABEF7D1F055B8C3D9544F3D221DBB408CEF9DE35571689635AB07341FBC45D
9CBB38C75613C1132CCB8DDB6C8AFE2C84EEC736C8F08E1538CC3126F56CB4EA
710AFB06058568FCABA75FF2D3FFFCA942997535A622443619487CDEBB2EE0E0
06BE05A2D4DAB0E886CDFB58BEF78EEE14218B30E8E6883331DDD0AAFFC3A474
77CE1F5244FFF655554DF9FE2C69F8D9BCB584F7971981C3AD7F3B3B0DAC5C60
E27F987C7DB03640F6ADED84BAAF4206A1991A1E99BAC65C8FD8D340B100A709
DADFA12140DBB60971AC1C45EFBB526B45DF246CB4061FC0FBAE8F8EF1471EDA
65BBE10A2A2C2B27658F3CCB6F1F71E4861B23C322E37FDF4DF9B5D422C5D524
64FAE92227F5B46FD37F1D98076FD81766AD9FBAF58AD5D29596AFC68F549217
0D1A2317FE7A7E61E3F394996A27437841E6FC08B4736C78E04D46C85FBB37E9
2DD5BD038F3773366C7A10E127BD63C1E80D89E5B189CCBF5764125B6295DFEC
B0E496D7F252E561A251305E48C88CA0BAEDEC452D58E49A8F02D2F52C17BCB1
CCFD9C31922002CFA42BD5D4D50895E69C79B757390F6337A40F35FEFED8A13C
A23872A1EFB4CC484E385EBA300AEF43A06E849A5223CBD363759AB02D6660FA
98F916E476D221954B3592F18B739E76C341B061727C597126BB7432384353CD
F0E46983F7494604D1C47F0F9310E7E1DC62711F87ACA33BBCAACE9B3F384AF1
FAB7BFD3A08F0647BCCCD337854C2A5DBFC71D6E17C8E45134EE1015DFD6D49B
8AFFBD8E288C5EB52D9C491B50D4E5951CD2A1BDCCA1E22F936BC2C2ED4EDF6A
BA107962E3AAD721036150579CFC38035E6758320A429B0F67E5F5621F43A5D3
DD6CE9E9E8FB9FCD8FB5E543FAB9FDEB0F4DA1CB6A7D711DDF7D8FE3DE6DE9C9
44321FC8B8E832ED808F9661DA135E18DDA2FD2EA1985D9238DD24BBE5750E45
EBA52EDDF61CE19BEE681C9AEA6C35A111A5B9C316634D218A6B6978E38872F2
84CC8CA7011173F00F53AA3748862C7529AF4DF3B5A88294E07A0BD7757F2593
46B162D6D1563AF3F49DFDF81B474372E9793F429C13EDD9A3107EC47861E31A
9DC381C0D6D17048C1FEBABEE1F2DD45CAFA00287396F3019D6A1782A02DDAD1
DE2BF11B3403258736D8F84AC9800A1FF79914B313B0ACE43E38D860CB671D2A
FA0B7CB747CFB42F0077B14FBC13E5B1A256EB3C5C87A087947824A414248018
24C22C1153BE0BB01D629765A47F0AF80DCB8051395066AA1520FA4A0985F3E1
C172EE37F7B2E0B35BF7EDF77DA314E1E34F27CB7170D3C94B72227E4E930244
4B3884AFA0DB586F6B06C7851292C1E70B2C3B8308E4360FF423CCBEFDC04E98
748130610FDB1EF00282B50D37B4C3428A8E415CA674ED4EFFA6FD2B2C58250A
11E3E7EFE00769716AA4F4B2E7E8FE2D8B996E2AC52A64B90860A1774E0BDB52
A9BEBA9198FD3B14C6BE04162569021D29FDF871ED8C754F238AC8B63A64B39D
11B506BB53A80DD15132FBFB626C3B6B593BFA96B4843A5C2FA253E717525971
483B640E7BC6318BCB1ABC01E1D4BE2422509305B47C7F2E19688A63F8C8669E
D629E4D862CEF610C490653B6E524BC204589DE4DB58113B5363893062A3B183
68947558DFC1132572713FC0BF13EEFA46885C51D2B7C70D6D0D6655B9EC086D
F8C74E7D5B3BE2F4952A8E7608781A012FCA86059CD98E7CB8AE3A32261C4F13
59A064A5132FF1FE97367349BFE29CC54383EA2048A4402AED1D1A47618AC01E
9B85A6904ACAC2A0432869917333E1416837262ABC670D6B0B47518806CC8541
216CBF204B75CD0229A79D0D33BE665FF95AD443ECA58D3D567FDB26373B4695
FE7432D25F3702EDCC4B0695AC3525CC7C32CC7635210F53D6F8583DAE1E869A
060DF6D4E6FE1D8AFDB84DFF9202C88B5159BB87183B66DBA28A766DC62FB31F
2A70CEB32DAAF4327CBF7D799CDDA1717211E9636D068B5ED2AF9915EBA090BF
9E3602C60D631DA56A3457A02A4AEB034164AD958CE42896419DFDC8BF7B9ACC
2B21555DBC09DE1A7027F77B7225726A502DD5467646B857A449D7DC90359632
A5AD1256A9E5C2C2D6B7592092E1869C4ADA5D8E36BE3516131FB0C878C3402A
83DC7377FCA1BA7B7D87A6800664406568C7A1E03E68C80A66E075548F70BC77
3F5B704BE19DC0F1627174E2E0633CDDF6AAAE55BBC3FF2B4C16508C63FEAC64
A07A83824915B48EB2BD860E6FC33A5DFDCE597F02949F01ED059F56C260CF27
DF5929BC31E48DBA0B45749395D431A71C8494A232FCAA613A92B15ADCDD6A8D
D8BFA7825DA222B59E66B84C8362D199B8EDF138CAD0B61D53A5DDF759007C4A
D503F42B644FE1A15D43E9BF15EE37EAED0B78DBC36F7495957AD87E10C898E5
C2DB7D657D85D5B78965D7BF2A36C6E9E6471FB21833B25ECE471A49AA8CF13B
F1B8B91706EF356AEDF89C12251FFCB38D5BE48FDBE1DAF27D5956753225DB97
5FE75EFAA6253F34810F086E183FD705DBDECEDFF2F84CFC406752EFAD610CCB
43F9C8174CD0ECC75E186DD5268711B83D1ECFE7BEA93972BCF6FB89FF0E9184
44C477A588E5398902CE35F087C6C7A140ECC12EAD65A518DAADA85AF42E9BBE
62B2AD2B87175C3C38093172481E40241ED51940EDEA5E5875280F649EAEE9C7
3BD67FCA9131BF2D5952E7CF922D43232FEE86449DC95E58270357D9512F3824
466D651B556BCA4D81957B4B6B41E04B310C769AD533EFE3E810D70FB38DE0FA
A7603C06BF0AE8688DE6ADFA139B4A8C85B9A1D4B8399DFDD770B2334ACA4227
0373997BA7FA7AF8D7AE5FB8B4E35BB29962A59D478073A0E6FAEB5001E608DA
0C2321F44AD824C29F3D320CE51EAA4ABCD736E7A827CC7267DA919B6F05E35D
238FE0A141900C9DA80BA116CEF33FD0DF8AE5E510BA55C1B909FCA46AD8DBE6
3485DA7C4B62798F17C2C7AF7D7B56F5D596CD7141F1082F38312079D8F817DF
66B8B915A554306415060370B7B20921C3E830F8B14DF9BD592D802F52B84652
207814272FC3CDC9CF869AC6BB7177A602D06B1EC58E87867262F499E3FAC66B
660CF1BA0112BC417B8011664F4EF5EE77F313B0024070CADA52EB500E3F25C0
B7BB9C23C37201530F6E95BEF4C25AAF114BB027EBB8262C3D96322F59FF2218
7514DEF825DADADCA2C3C3D97C2BF6F4B91F5F2161D03B91DC4850AEA061695C
0EC26DC36660C4E9BBC3CB817FD08475ECA9EB5A0395FE3486E9ED75789F56E6
760BF2C3E574617D95F7B8B82203D870057FD56DF63FFD27BDF6CAB103691E79
C0C287477DAA1851739ED53F1AE59C9AB7A437F4D9963573B4695F5D37B19AE8
D680465B6C716D715BCDC05F2066D0E78D5C76AB75BA2F72386589613D87AC42
A71D118D76CC86B0501CD3AE9855FEF4579B5BAE84442F10F9349B41A0441F20
39EA2A48A01307FF5C8A391493112AB6D3A0A3786878CCB99770D89F463B564E
DD205229F7DBDD9D31C27658A3A3FBC3865B01470F65BC8FC3C59E29F1718B2B
983BCE6946C3872E55516203EF9E3A6186CD14328832947D0DE25493BCE64569
9458CBC8F10376B304055B042E50BF2B2B80DD77C34CDF46AAA9189EBFA3CA80
D3E53FA6B7C335FF0A7E6DA248EFB3FBAD33533E02B0286803EEE21E77C36190
F5FDC6BECD0E8BEAF96EFD5082CFB26366023BD0F9B65A58930090345C6C9C14
B564BA80E06B127A8710AF597E32B2FBCB223E714EF81E39A5C24AB041ABAC41
93588C4204C60323BBCE1CE8D507535F98B2D8592F36B8D54139EBD1C0C330FA
FA91D92031437194038E64406C7A4C9BCCA0D9DCDA09AAB7EEE1844A6692A06C
32682A29B3AED51CFC461C531C09BBFCAF2D899635EA0EF54CFD0D8F6FB1DDCB
F4BBA616128A62F6E5571898B8C4A4E039F667668804E60CDF455E1A079A22EA
CDE95F659B5AD8D0D58A16B3635043FBFD4281CD5E187FED18739B8D3B510FF8
90A4125F44E6D519368F7BF15557629FE665BD831CDC9687DC732890A10299DD
E2B1F9AC6CCED46D866CEAC631860FFC03BA4E90BB094AB6AF1DA4D58C73A414
DBDA6B9F6BC3240FAF46A42B820B9751859589F9A621B50D14A08D1D16DEABCE
56369E4E5271F6A3C128AEDB00131CCB95DCB7006C279B982C793B0B04A426BF
75CE8FD2673D1E34F8154EA94BD138C60BFDE2356F81CC1E46F021B644DC349C
54BEEF03F65003A03524B8DA693ED5DB1E850E62685FEBDEB82FF2DC7F822D94
6F89896E8687899EB739F11EDB12FCD5E8FC130923EAFCD9A10D99F63997A4C6
E0EEC02F176D18C99328B6652D7397894D1F4375CC0F04A1D48D5FED3C985486
559FD3F6EA1126CB661A07816BA7D9971628C5DD9682A0EB0CBABFC42347E006
19FAB4A04F8A3B1FCA2E7AE92993947450A0F6A89314A279CDB2C5ADB9B74F7A
2FC60D88C019BB9FAD871F50C9F8F589BD9C75A174BBE4AE178257FC67EAD45B
96B0E228257A74596570C62A79BEFCB48D02A7E2F3FB3CE84D59B9102344565D
CB060CD49947A9382B30C201722F127C61D19FBAE94296A8619A80964839C31C
FF70AFD405877FE9AEF2E29914BADFDE43F67CAE6CE2E911ED46B8C0F09281F5
40D2676642B69F70CF61D74884898DB85A7E34886F0A3FDA882F3E2407647B74
FE6EB243B37AFE7850F30F532C4219239C9FB0B34368593BA22BE1329347B68C
023AB915DAE8094329320692E9D301D6A316712879EA65AAFE4BE6BFA59C44E4
AF2012B1E0FBAFC1759693C3D73BA73A79EA425B863A67E5A31B1DA09D9B7357
828E6D1BA46E6077AD2A70D564885B0FE7D18F2DAA17A95DE9053459277298D1
032D72A51CE4FA59A8E7AE3DCD70F135E343AC9963B5DE4F30380092E66C26BC
4E1694D3DB551D70D4249BE4EE54FCC24868C95BC91FC1B99149021EB03C53A0
94136915FA22BCC62067E941D24B1CE29A5325E862471B1EF24497A8299DED41
4469486E94989772E2C0238C57F1F6224E2F1D8B27F3B36FD9D2B9241E9730C1
F8F7E1DDB9D72714A51C28F035117354B5639AB2601D11057E665CF3806E2FDA
88956221FB44A42E3392B7A126F0BA2E63B95C0D41FE0267CC626ABCED08F5B2
C5685CC6ECBC982EA306AF45A80CDE047463379CA3D76EF6A7A37036BDA365E9
38FC6F84B973B71FA46B662011C72B9639605977D96A2C6EA30D64BF0554FEFD
ED8C155726910907CADC5F5B7DEAB065B44E6DE1C21C63F8A2DFEE20B31D6EC8
511815C5D6F0ADF14A4C828D7F98678B912046F080B8514DBE3C8B5FB35E4A80
0A1F5CC9ED113FD0063EDCA82C61D5E1D9472358DE22D459FC43F3E135BD1628
EEB03FD253AF8A95F98822B467B320EF8E1A153B624733535B43D5F15727BDE6
C765D53528785B71E9AD1E95966389792FBF81A6535945F5FDED6589848CFB3D
B93C7338293E89A82B302C733BC4FDBF95D6519B28CC0B0D873675768CC5A68F
5AC1C811FEED63926E735CE046B10E07539D6F09473D7612A8DECA8E29EB737D
C14E7BAE1C0222B6BA7B1C7F9434ADE192BEC5A3A39C2D4733D6EBF07981FF1C
04D13013B31207D0CECFA8477A3878E4CC4332CF932EE5D979AF724F2A4201DC
BC52FD8418B664BF15B2AE3B1A327F1AA7EE5300F82C10309652C7E8244F64C7
37E213661DB3AEA1B2A98D37AF01881AA0B621767468B6BCB28E210B30386583
3A2F04371E3949CAED9772304840398ABB7AED5B1E43DA226F39E9D168817E9E
2957D3FE6B19C46265CF5B6F3A3B8FA3A4267EA96CC43E68083A11DC59A630E1
A5C8B951607029A292BBC6F31622373511BEF1FC5CC5997E96CF10AE1024D7C6
E6D00CF43AA639E0BAA06277191F94E2E89B80D06B046774257DD8E4519FF4C3
0CD9B8A8BD2D8065FAE0AB180CA7F44D877002A2935903455AC9805C16832C95
DA9E6E0E46307AFBD1B44566EB3434CD8CA3C4D235D1382D16561882A6C4507F
24A52ADA3F0E18834966A7DB02947FD5BD76C3B09999B82D7B260B551616BF29
36C306B09D10E1544882DB6D07CE15BE7B3A786D097FAA7FC8E3227AD81B3921
A24BE1530596D6D68232D1207C5D0AEFD168176B3052D2D4DFEB934C440E0F70
48EC2AAC13107DBAEEE49F1B68DC328B7E60E3D911E2EFDD5D9E01749F20F911
E9978EDDEA79525A99894AD7EAD52584B316C4E3F2F02CE35A376BABF37CF2AC
4AEE9E628813AF00B44EEAD042CDA864B2EDA214D9AC1DCA13AED9BE43A985DC
DBDD7B05779880040FDEB903ED7C728A9BA724CD4AAC68A159A48928FFD5EDFE
AD2B95DDF8E97D26CD31D8019FEB31105D5FF4EAACB83E1E1F3574D7937D0226
AC9D3DBE9FF9469F17F19A158D43019777F087D72A1CE2E7BDA12C56B5846F98
049380001C1EF3469BC88A86EB74E8814634F0379D77833D553D96EE58EE3E84
3EB4E3D755DE528FCE49468F759797C6EBE71522D337591B38BC965F3FD5E098
1B96C1FE61F5C924A67283495A2EAC1F2095C3D15F1D3175CDEEBBF65824B31D
D145EC8F38FA31FAB198C01EDB86157CB500AAED2327F369DAE015304889B024
6F48A846A6CE9E41CDB1843BE0D70BF45280E5099F418437B9041AFFF56E1969
E67E00293BB96B5D05FCCDB847D9C9DE635CA564FAA53F7258CF67C3FFE55380
7FE21D3AFCE8AECED67D37A121334920C40AF87A937246A094A46750EBC24CCC
C738E3A28D825320CFD40590CEC954DCBE0ACD1980784E5B1B00640A2AC8F277
3478B30C725B92445F40C251858AA425FF8A226DB8A98F4FB095098CA14C122A
52BACB31F2F285E5DF6A0B5C5A57D7FDAC372111F9A967CB186C75CDEDC27E17
B78A37F131D2CD7A70035A5683BD04390870EF1AC8B7B458B30A26997B4785D5
53E5F592DAE733EFF282A5909F13938B8D3B9C8743978D3C7CDC796FEE284E03
5C15F6D5BEDD71E14086E6A4B8C5BC31909AF3D5F4DADF17F900E60CEC2FD135
EB9007ED22FF71D6467821CF2A8574FF1FD929B0645690E3611B66C64673781D
6FEC75F6BAC5242DC604B6A9B2E08B7AC714ECD96A082010C54A321037109F5D
4A238990F1D803070A905A8B0DC400594AB28CA51D8A8FFEB18806D6ED7143BD
CD7C0153BAA2CE10531BC2E930186DEEA57C821EDF65D2461D602ED9B2C9CB54
878B1F02869F2BA3AB00BAD8D4833709E36164E94D578BF6B99DF1E8785C0200
AE6660EB8C9AB163C068FC72C6576980E9261240BC0E6AD346DEFB20DB5C4B06
7093D201508147A5BA04C340440DEFC40B08CB96E0AFA9CCB47158D7CF87F2E5
3E92CBE816AC01D7838CF30A04E0798C0709A99D727FFAC39E8F93FD24D4F33E
56C626B39B0092F8E4782D401753772EDB3C7ADFFB9D98EEDECE3E623AC7F22C
8EAD5B4B1CDE08F1A89EA4F60517C16A1AF41F87CB28E05DDBFF78767C360D68
6E693653EBA2294B54C816AF8B19767B51356557B9B59FF8727BA5A493C36AF7
63EDF235AA98862C98058DAEFE5AAB9377E93F97A2377C562B57843C47401B68
09355C1D5BF36A78F5B88CE36B2129F7D6BFD487552430C689EF57ED2E5B6132
74CC8DB51F2F52B1A09C600099C10C69324FFB71780339D40F0D3A47BDFC9AF5
1C7E681360426298AA75661A96B14A8D5597F9BF910E9937AC46F67ACAFD3C36
B5352EEA407AA05FF8F5AD64131C151E17BFCBFE3EF3F3A0326B7E995955416B
9B03F4369AFAF809B34687531DB4D2251D3A4F624953B84C78C1BB0F3E3EC21A
3EB7A8582B6E55AB4EEA76DAD1E7B15739E66836D7FCCEA55A3E4C018781E443
F324B40537B75B3A0B366B0195543CCD996057178C364A7D2B17EFAE0A71BD89
1836D4096B50E6312B1B787B0DC09F06E3C95EB69D5CDAC06334D0AC6CF66244
E6524A0E268226890EDA8975C6E0834BB226BDA19B16623F6B9BE4072D68B62B
7571A1FEEFB3A6D99058CDA000AA917970B5ED76547DEAB1E11DC08FFBCE437D
549757D122D4C6A7980FF3CF6044705282DB948209FFDEE9BC5A594249C5A8EC
79FC34DC18D3D79BAE1EB9C9097DF7C8821B80AB7F872CFA313884CCA707076B
5F735EFBBDF256A891CE80167464C75C99E799FFCB681A94748B1FED04B85917
26E33584C996D823E865B4E162EBD5CB05F5708B84736DE6508A786345A566F9
DD008797254186B88A6EC544EEF986B0EBDF18AAE0524191397C479650554F43
9ED60BFD95EEDB8760B829D2E786F937EF5ECE608520DA132627BD1253078794
D42BC4F118891B923D13B1C25D5C3FEE0BBFBD11D3FFA70AB1181CA27B730231
2E1CD97F7A2A47BD3A7A5426B416DF0B470DD826A84014FC75F89D9CD5F2BBB1
0F24981E984F793A02FB7A2799531DD729C748DA2EAFE3F30E3692AF7C4B93CA
44E1B4FB765F7E7C8AAB6387F7DD1900F75C56D1CC380214B6F33C80A6DB94D8
C0284479539FB7805408D81F5CFABC572CA0ECF538C11D4AED51A200EA3B56D4
C5FF4EBB39F23FDF5A114DDC1D1633F9D27D315A3BB409D2BAFE7533997E180E
CD97566380AA289A3A0BEC788CA69C790224925D9D82591F0996F7D3D40868C6
E48D2D6465D30343510EFA3B6F23443C5D8C36765A3B6B92E45900505696381A
49CECDF53CD2D6F2C7DAE4219FB09626797177AF0F4E613523457FA3A3BAC833
4A2F51290AD54A7281D7495A8038E06539F3848B2C627E209982501FA8067E55
B3B1A38E32D471937C39D642D03E863417CFB3E8F24688642731C06400CA4F37
A42ECA86399DE61EA0E7C9B2B7A5464ECB88C1A00A9E1F90F4B5D8B0AB90205F
30C6F86F1C9343597B31140E3DD035857CAC777E9F7D509DBF7315313A171247
CCB9EF07D4FFD20C197E36FBDA0B2CCA39DE96AD46A9FDB755916A5E33E9CD14
A01653BF3A533AD91DAB763F0CCBFAFEB6D69836544131FA4B65ECE58640D747
43936DCC77C94C71613EDFAFCDC0B8750CD3A7013EA719B4D3E9794CC1FD2C91
63F2D8E4AAE9C52FCB087762E710FD37709F7255BAFB0FAD2721F549AA3EDCF6
44A1C2492AC915EFEE6CE5DD85DF265ECCDD4473126055C332E8F007F8589174
CD1B2CB1DE4EDDDC4DFC728DCFA676B3EFE986C0C135560ABA06C64F0E6AD2E9
83C0D400FAC348505B316C656040B2EBC9C4B0E33F66C72BB1509DD63B864882
0EEB1B7B887C06F37A5A2B1979D4BF01B24EC9ED746D1D904C58C59F8B783DE3
630B44905C93780CD0CE3005D77E2DFA403B8DF0E0CDDA7AEDB5E495AF1B9ED2
B928BA26A47076AEDC234F3D659CCB053402BE5739BC3B73A58C600714CC593D
66508A9716EC6338EBD103E0799A168E1598C3311F473F8FBDF5630F726AEC51
265AFEBB6C2412082BAA93504247199BC18FF8E99410D87D06F90ABEE08C4E4C
B26EB6F9CEEBF42DA2C6778E0A6A7FACCDCC8CE175CCDE5AA28061DA2B2BB666
4C9DEB4423F6EF3B2A23F00B9B4F19702229E4DA035A3BFD78AF62F864CE839E
BA53754A3A1589C8E781EC0785E1196AF10060D953C6DDED44CFE8ED5340D198
941ED0F8D8259FEC912B73670C936E31138546D2B414A67E0DB8CC87016170B8
690C18A22F8EA1287D7CB60AC00631C44A0857E796AE8718C23F726368124703
B76351EDA9C0A741437CBE016FE2F62DFF1198DF99799D721D36402FC428E809
13742345B5D7F645E78360865CA23E64DF90661BAB059715EC4349E084AEC562
0FA4847A450391387E2144878565EFBB6225DF31FD9CEFDB6DD80BC93C4E2C5D
C3884855E48DD0C6AF066AC892AFFB8C2B93E620A488E3184E15B724006D662F
92B7C32177688FEB84755F6670E6281D2A1D6C4CED27834D1DA6D82831796447
0204D3F5D513C513F526B799D74978B1DE472499749EE704D61C8A88DE857696
77486536388E253DB9854B031CF1523DFE0200A8DB552DCC4EB3332A3A7F3637
F79B2EDEFD7F312B7FB7343E19B1802EFCA15F0CEADED36EC0E372E622034AC3
B871437D8FC55D5886A1CCCFF573E5541176D0E6749A607E98B25FE639D2072F
21DDD19BF1479855D86A6F2C55373388F06C0A79281F9E4999CC49760F05AFB0
332B2697CCF253D8A5B11ABFFA56798E819F5B1EC574BAF814E80998D89E04D2
D2F4B34254023BFA1D50D85DBB90C217F107F61628106FF3048BC62A609F22A8
34FAC2D97414A9F2030899BA1D0ABF79B099F086DD520FADACC36882331A0226
6A987B9191FD0B91E5E3770BD86A31544EA6FBD078B95B946D7D9CF9BC8D38B0
211E8CB1C62A37B6CF39A03AE5B1C88516845780F5760D8CD96A2B523E01E509
7D8B5CFB3C87EFE8D4D826BC911FEF0A0E08C242E86E9BC92B3386D8A9178B18
636838BFFB11A32A93625AD73E239B9676863067395B81EC258DEFD3953AE6F0
207BD45945CB2A427044675D5AFA1A577F7FE987CD91B1D62D59B7DAE3A900D9
7D4148C1B64EF3A45E3EEF5EAC6B5916B28D1773BACE5A151FBF9A6202AE52D1
FF25B0CEFFC39B8EA050040CD131DB6D58122F156C44E425406678FEE6A1CDF9
D64A0A648E43DCDA1FE9E65D8EA249A875C27F010ECE9652D3FA8405560F7485
F981B536C667217821EE98BCD277C2F0C942172518915ABFC4421FFF27D16F41
7F2F0C631D6DB2720A42FB7DB6396EEB9AFA4BFB3EC48CE9BFD4086E4FB1DBCE
8990EAA2DE31A6CD3008D2638BADAE33F4B78065DC0B25D15020B3EE84D3EDF3
B4A1558611041CA00E468E776D0B850240302BF591E44F35684C4608778211B2
803843DF4D0B3766FE2308F6533DB5A25F9AD354F17E76EE2D550FE46A6CBED0
DFC72DC240FA43232E40309135613B16C5B0A81444036BCE8B5CF0EC8B8889A1
04F37D6930982CC84BB51E0C3555C0D63AB26C8BDC07D67EE45AD76C9D443C8C
3C2F204F092E9550CBE5A37AC819214564F0437BC2AA6DE4F887F9BF1B903FE5
D7B7142E09BEC0A03E49CF44D56E0044D60680CBD22554C647A1CF900E12945E
4C9F671A0A4476347A4B8A5C1D6002F5C5EFD15DDBEC716EE83EEB45B1D1D27A
17AF7B6098CC6128D9D0CB40F9266ED3FD42F9A0EA1002F86EAAFBF3DC7766B2
CF8D8EFF448F0B060E311D0525B6B7B523A840BE6BB6C1A724D3A544DD6DCCA5
FD38E2D0380DC41A364B5625875ED42C8B38693DCBC50BE26598F268792ED5E6
250C1B0D89CAC203B74A09D224C8D9A75FCF753182E18BB6FBBE3FABDE391EB6
D11519919B029CD665FA008A378FE51DE5FEB0F7C5D70565CAC1073AAD11CC63
04E31F34BE5541CC89DA4552D244F1F3B4956AE383E5A1D73884046D7D7136A7
30CEB995ECEBE1DA22CA3AEEC5E60D28BB5CE4225FA1BF07A77183B374F4FAA7
08F64F16EC2EC7BDC238D7DCE1E53CD3EDC771DB30F8526D45FD66D8765A4090
53A4D59A24B61698C8843E175F357128D93D59610AAD81E2B10DC893EECBEB83
DFFDE6D47090F33073568B9F5A483AEE6B87264B9FB5570394D11AAC2DA89014
1D09F72FF85DFA6EB84DA760411D3B39A752D9D5CE873646FB6107E354B00C6E
5529CAC1AF522026338A1745889DC7C4347B59F338D122C69A7F30D989046663
4769C52FBD4E7197312D6D5573F2F15CF7BBAEF3EF5869F7CEFCD4169CC81450
2299330A09712F4A2977DDB8840BDD9E77EDA65BB2E55A64E9FB3E46D8D43B60
0020CCFF6CF5633D4535269729DDF8E5518090C5060AD81F716A856686378F8F
DE8649BB8185772A940FDCBF118B6B741CDBEA24E09B685971CDE907640C77EA
5DF2B712FA8B54D00ED47589871799C2CAC99E75B5FBEFBC96FE36158CAA372D
5840D80674FDF456133C6633E3EF5DFD33E1CE1741F4D5DFFD094070820F0794
6AE4455BF545BF1DAAA7A79519CCD64D0114980ACFBEB12EFB3043466689D201
0D69E7745D5AF6C8555C02799CE7042202242CEF62383EF79E66E9B34854AB96
4FA068F92CC41ACE4944362DF9EC10289BAB15D1FCE78403F6C1BBB00DA01DEB
D9FB9C2883D3328AD852C7149B31C9247C2A415239EE22D1E5FDA3E6629638D9
5FADC36CA38E70BD52EB9D1F8D5C78BA6F66369F2C41FDE583CAC63C7DD07FFD
0303B9DBF2CD6F13F9D48ABF0769E3FC3567C68D892D354D3D06249D8A1C5184
DD2FC1D0FFE388D4A7C4459AF22867E6AB936779EE7BFE77BBA6FCAF8AD51B90
B3EFFCE1E29EC20293D039A6096E36434A52D2F7C0D47A18A70C1B97CB07C311
7FD27FED4FBA65EA4C12949926404932C2EB8892A1B87AD907C478EC8A0B4368
BCA53B6D93B648C74D8B2EA46E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 89 /Y put
dup 90 /Z put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E813344B92052E6E38491989F62E8E70B47BDC93CEF2B3D2E717461095F81BF
2D6D3E655FC45881453942A597202718401C375D2011F28B563692F8DB888DE0
4B97CE1B3BE8707A06C44413DA1A9ED2D081D6B04CFE34C74A3252E7D525DFE3
F1BF421640E1CD2349AE3506FE8F575B6255F454E63D7254E26B82BBCBE61468
DDA3EC889C2ADD2EDA0D4226797109DC9D277C554F0A3D72CB29F1B5F326D4ED
2AEC68584F8563BA6E24E577CD43905C17AEF2CCE0BCBE83BFD173E6B1DE9C72
316CBA2A447A003458BB81CA23FFDBA5193BBDFA83B09727AF6141D37C7B268D
98A4ED85C400B66B5F9845F3EA960A4EC103F4BD72D6D69F0BFA46BA080AC8D4
4E0DC01A8289485446BA3374B32F16D144A41BA83B91BDC396E8076B531AFAA3
A94D48C3B739033D05F67487450B64F7C1FDBE0EC545ECDA6E29E57EEB009EF2
320201E1C29B4032C289177887755803630430A2B134FA32F3E07AD3C768CAD1
87E6D7131E219545F0CF0313AD9DA00B4F04982B4BB6E4AE75FE87E8C1E871FC
3381F840F69BAAE88D4B5294A0BC2F0E21662B562FDE7896E06E0A46F5BE559F
DF7C370551E86BCF3263376A290FDD26D8C8A7FE38F112F48F952C1ACB5769E3
F8D82B3F28769D15F437DB13159E337C9235D67226998BEFD1AE481A6CA93602
F3595D2979BF9B29E664D0602CC236BD7A847D7F82B0B6871DD3E1CE612788AE
D2DA6295F3DC2CBEE143E55F153D465D019B33570FEE27503FBDBC853F7C8165
3F81A51E3E6B38DBB11CB8C6213575E34EBB214006FB80CD20A37B394B5A3A54
8E5DC5025BB01672F8A5D1EF395649077176D2880F5FE835154F5BE864896885
FC3D52FF7EC1F8D1CC5F54896C5BBB8181921B70468D4FBD17EF51BD20202219
02CF51DAD8212156D05F9B7E2EB89915E8E382EE1FB450001FAE31458A862298
3FF0D068BFC539B09A0206D62E0A610EDBBEBA14ADE67077DD53C1925E803B6C
05D851FFF34799958FEF378414D29BBE5A71A9A902C51DA68409190E56D74E70
426A5961CFF9F08169356EE09D32CAB7BFED6472420BB6B186E9E5D1CBAD3FBB
920C34782098E729F91DD375F539DC7098A8232E5CE5C5FF27EF8C95E830E34D
FD6FD84DB536F96DBD7DCA3708BC8D3F4B92438446FFA30D0C4F57A2DB330149
8C9879C5C350D32BF2EC0BF85E5887171C970A7F7CF572EB54EAFEE8DEE479D6
22159F43CEC593EB104A0C5A928A07E26F7F9F11A1F05F9ED109C75F240D55AC
A6C5B4BF05BA783832FD224D953C706B7AC3DC694D8DD52B0E9003CCFFA461D6
108FA16E1DAF0F537F3D9FE82511156AC97CF54FAD413913257745FAAE996C81
B110FFB560C6D5C762415D3745F6881AC0EF5D96029702C057DD111FFCFC3C18
769FA1E8FCE2BC64C1B50C97B6A46864E23ECFA015BD8B0CA10A04BC2D2FDF5B
7917F8A64E2B05588036767A40270205BEECE20B22A719EDD39827ED9AA9E084
092CF72049F163D8725CB3F2EB41C754DDE1D0507D81A635EEADE144D90DF198
290ACB145BE9290F5A6CCA2E5AD9A49F8BD405B104258833416E2316C80C7B65
C39F998FBD6B3BE73943CA23DA4C507935673B274A9B27E08B6FCE1007BEBACE
236BF9744756BF6F4BBA22DB8CFA524337293A93F57E846DE623CC6FA4585BD3
4915D261E9C51EE020B440CB8F923FCE5DFE6BE50D993367C7FDF1893936C44F
E3D5C032203CEA2FB5FAC553F0740026628C79702B4706407F7DA7DB7ADB3F25
3855E06213C9435CBFF1641EB3A511622DC5899EF40A475523508CC721BFCD48
E54F7734753AD8C0C7F70673F7D158AD19E3533B6BB6D6E8CE4999D48D7A3560
F3198B1894A486E4A4D462F5175078FD6B474BCF85A9F3B9400CED542FBAF9C6
522D72948D103EF945005C8F5D94438CCB4B2A46D0D2621F452BE2A57846F60F
3AC5FBDAD148FEB3C046DA6EEF31760002D04B61C70A11C2BEA2C21D15D6B15B
7CCA25C70DB49182A27CF8EE3FE7A1F52688D4C88C4D7BB05DD039DE110A3135
BEE4D2363FB981A4A48F9CB86A4527D8236B0CF971642C53EAC0E5A03057B362
19E6F44B575681EDF35D4BE526A3BF897FA6FA083DFB8097FE1654DB692C7D57
DA5DD32DFDA8FB021E8F11DD626E1460EF7D13CCA56435F81F87A609D9403677
6C12CB7D76FE465CF877D9D438BDA81ED44B1FFF8C46E66175C1B2D36BB8DA9C
CDAFC642CDA9DFD01FD0477933350251158A662AEB62076DFCCDA1330F2586BE
DF3857BDEEC17AE25AE5B764A2AD2D79BBBB343F738522FC8861EAB01215798B
0B1910C9A740945D642F63B8ED164F54DC136C16C252C010B395663ED0609D17
401545BA729CD9FDA0D92248A82B0790A59981E9EF7F6FFF181A8BD6BB88672E
A622BD544320F41DC63A96870F4C58928411CDD4EF5C7E8BB7EF20B0A1708EDD
5742C78C793C0224C90974B7D0919E93C1D046182A9CF070889148D99A0299EE
52FA9E2D99A21AC6A0AE43E5399F99D7223757488A59D60D20B4979D78B9E829
D263916AFBD6141BD13C1F44E69CEA8EA004E40B0B4FBA5AE79AFA7C2DFA7AA1
A9C9BF07205F432855525FEA7FF37CAF3EE742FCE0994EC8D9D3907D9EA16478
A3164A247B76E51C27B38AFCA5590461D70F17A661990348D6B52783240046F7
B90FD5A43B682E6626E9FC216474E942B8915D73B82CED54AC45433A545620F9
8C138E1BC9C2EE4447874D4828DF92B261022593E5BC5312888E6F0E0ED79975
B08825282A20F13D7CCB713A03C9085CB91FD37664EE464516ED6F4E6263262D
5C83005304C7D5A7B4038A8B5A5785918FFCD3B21C3AF67E9ACD304D59820B16
317280F780D19E586C2949C69919C8145D0C126AE29E7A7B52EF081551372E12
6A4A6F0CF12E998577582687F378B6D23ED896887C32850B861C79C4CFEE1E28
317B242A8E56EAEDE70AC1B64A52B7169BB881C0E313EF49E268FA20116DA78B
A2672C00D6E871478AC125701E2B0F639747BDA56EF9A8EB15730350075FCE69
36B0E4BBA5BE24869CCB66B7ECC747F0AA29FC9E2738EB393B3B6BF90DEF3FEA
629E7C95DF14FF55BA084560AFA574739F3B2518B0437910AE1047025FB386C5
5B3FCBED78D40A19F4AAF529673C16856A96E57B81CA792E6C16271FDDA848B6
B849D10F813095E30D7E559C57141C15390C6092F0FC37F2151B69A2E6F89F42
063DFACFC9342ED41904E36E4151D196B7757B86E60BDE5CE1B385A66757F67A
D3D767794AF4CA4A0B27F7B942ACEADD9D05145FB09F7A36E0014DF56F84EF90
F7DF0FA4379556AF7051977D642B38E3293E1C73161EAC6A411EC70122A4CFF7
4387C7314948289C266B012C14759830DD48049DB0DC278A8CEB096B6CF5D1BE
7885DD7C5A85D3C59181FC46C76DE7E11278F939E7B9092008375495D07615A5
9305A5C8A9B2260354149EB328449426DEF8969328D2E62017513C42A2D77298
21AC1D59AC9628A5465B78CB3615883D3FBB91FF123D695695F8A0A2F85F0F3E
D13A5233AE16394365F2B5D70BD83EC17986839BFB7D2B8098EB87C5BCF86970
91EAF4229F41A2C2C7C2BB7B320E9082B50F9074C673D44CC0BAADF31DEF85D7
07505CCAFEAC2C6D4560FA8D962E518AC03FFCE880FDC597B25388647F4107AF
2DDD09AA1500E17889FCF0BE1DAAF98CC3DDD602057B5D1C224D9C3C18A1ADFF
78E8538A218C95ACCFBB6A826B8CD636436DE7E07D902D8985314B4D5CE78C04
9BAB86C43C9B5F2D764A376A1B6F1CDE748A165A0780AED6379C6ECBB49DD695
DAA2E8B20EF4AF3D9A5C6B231873C49803E8E8468C13A7050C961474521DF0DD
C8EB0D716414BBD3459BEE6065293F311DF3C06EB578AFE44C0A396D783CE7B8
8A5028357C01F055F1F639DC3F615E54CA0BC2326509B372E21318870B31A1EC
40C5F23AD2DF3D638EAE5EF7133C9D16B897AB205ACF3480A3693A6F55D4D2D2
15D62D43CFA6E7FB90222D86B0677F8F04A6DEDA2D40C1B2AE4E0DE0DEACE540
D1383EA3B97CC8EFCA2BA0F626820AA0E809FF0782B434C80CF5DE8E18080F74
4014C1886EC34CAE10758C6E92A5EFE2BAADA948A07FA430E521D4C2A87AC74A
85D617F6A9BA9D08BC0BF879075BF189EE3205D6A88893F99B165533DE62ED79
792647AF27F1218CB76BAD97C9197177E772279FE299D4ACF0CC88E411FA848E
84087F04653F40B3CE13A08C1EA2039978A79142DCB8E9B2321F0A5963F75139
B72467255AB53AA40266E7F3A7FEB73DE3CC9DD1BA27FF7EC1F4A6B504319CEE
43536E3433748096F247B222BC09392CCB8B2BAD4531A0B1416FB3C6EA1BB9F4
265F1FE74B7B380EF1113C52AA7737E91A0FFE17906327DAA6A7F6642EBF2575
1CE941F5F5A3C3C11F0EA46B11876ACDC9BE90A190F49367BE9A9840507A27E4
9402ACB7C5125B931994E4581FEBA1956D786261D5061864A7FC5DE04FA6304D
6B1AE18E48D7A9C2F01ACB5DD399634CDB7668B2B7179BC9C40FF2DECA0F9C28
C4B3C1761B28B1651C27A0FB45DA535031053DE6B0CD1156F73EC8F6D2B3A4C9
8926BF6BD62A24B0060DE96B9F360ECDA72C2F5B01EB8560409AD0EBA22ED86A
8325F8C6E6DE44957F3E939C76103ABEB7C1113845041B8E5B9362B3AC6C2C9A
D8BFDA9938552E25CBF1E5AC911D2549A3D0ACCEEDCAC43873BF6DC72A457A1F
D27C493B4BF68AA16D012797A30A1CADBA9698B7F024FE3D3DDA0846B96EB458
AD153349A41029180EAB60B9BA0BD3D608AF7CCDAE264D0B0832441E35C08C1A
3285F1D66C28FD9DBFEA81FFAA6FFCA8F7431D8485BAA325736648DB343B1A74
982DBA99423CF09F852A55F983C9A4E7F9B3500CB69C5B9E71E962E26D465E4F
6A56A014F0E8E93CB78262CD44A5B42791D06B6E08CAA0E3DD98D44244E33E3D
4889220625DB39D706FF180AB2AE8C50F1CEF4CA53A66F3C6569CB81FA612992
A1E1E87BF58C21084D85017BC55F6C4A36C61B0F4B66C77F7AA7C5F21D5AD0C3
D05E447D4B5B102E34C85BF0BE12FE8DC082EA0D0231DCF28F68DE7987C9933C
15548C14877FB96AB91DD65EFAEB9EEBBEB5C59683CF099041C39C432BF46B09
05D5B660261D8ED551A348BE1C7E2B3A34E5A2C95EBDFD82496ABB3C07915F17
6B06344F48D6E14C52F85C5D7F736E65880CCEE7EF79BA2ADEC9090721E0223B
B260714D2BCF25A29B01C91CE657F6F6378DE0AC8C252C4A97FE81C90056D0D7
550D2EF291DC7E9271A9D39CB120D1A46DA33443CDAC9F5254A66188574E6259
EAE532101D3CB4F98DCDC6C581D69F8E5CFA09D7E86EFF241FB3B1A0D5983A01
15ED8272F53E09DD9902C79439A76B9F50591EA5C6F738CFF58B606B042C0FB8
7C3A74EBB6D98FDD557E45F641116BA9D2CDE32E4C452A267DB18F698FD9E386
F469ABAA4689E04C2C7E31ACC41AEB075569013BEE24D4FA7CFA0D12671A8364
BEF98F83FC308D0EB7FB041ACA1CC063D75436FB3E6D6630762C1109ED1B0C7A
3A09529389FDC216F51403D3D700F22BA51416A12020CDE6A8347F813B19BEC0
466B3FC291F230F4BF63BC15F5C2978784A106E9041C813A9254F2FEE7B71A6D
5F130606C020B376C14249A658123A03EC77870FA987948765F926508D3BE654
EEBDC7602AB4E1AA675AC4864541FC390B1BE9D1F4B21B85AD6F69D639CD57B4
E109ACC30D3628858B1DABA723C9BC9BA5922B29D00A6C230012CA1AB84A5269
8391D4B44F8B4009FE288B5DAD4E5E188F620E06906803B0B22EB14790846EFD
6ED1E8A5F0A11702704423AF266036C845AB82BF4DDB20835DB1CC03461A9A66
B76DD0B830A3B8FBB1B362F69DDB510E48F66AEC50B6FE7B9891096A89D81769
E93A8724D9738BBD523FE5246D8D3BD23CE278F5322607814171775A56DCE604
9F5698687A516A5F63FCD23BF820E044C4906C89F0E6B0BB9E2B72D274A7FA76
6BA1F23A508DC64565340C46A13E27D0473EAAE2F6534770252A4BFB459C8B78
AEE9E5F7AAAC5BBC2EE7A2ADB0157D64315BD4A6F8E98C612F9A57E11A39810B
FF6DA00D70E7DDAF54D583143C33B2CD9D1D5AE849D5CEC9BF8E7542B6CC8978
880C8CC88646B5879092E4C5BE759CF3BC0366D3626CF8E834AF708D4A4421D8
4A93C39F605B97FCA8662C4FA51987CDE988CDBF70F90005644EF1814AA06EFC
03989E853C2FE7D534950A2B8B85A8363EBA1182B764D4FED67A22C6FC0FFBD4
D36794A4DDC3A486F91A0010A0BE1D8906C602FD93B1F5345381D1BF201006CA
5D5FE0BC16E5086F632844199A9478D6D6BB72900C62A24009B26C716B02F154
32F7AB3C97FCC0EF13F9308978DDFA05C8D0C2F91FD261AECBFE27A95CB66850
5D0DC3FA68737FA8934EBBE2C1212F5A02B7742BFDE850EC53BF818A90684B90
52C661B4B2D94A49A99674B90D4BE8DEF7F494009E1C400FCDA9AB5B341B5F22
DF226A825374D3278C4CEF7F1140A52AE092B54CB834F2E9D25F2B5D6FD52AD8
CB71709F055BFBF9FAFF2ADB70730FDCA2CD6A95F26C2899ED048875E1A259F4
8EAE9AD8CB159D3E4EB21D5A8141C87DD7EB31D43EC4BE4695EC384B42D744A5
8ACE53996F28AE19CB879E556C37461282397BC86685E297136F663860763570
D6D3D3D27160D98D7AF325FEBB2DF0E4ECABA9C2486D9E6C87D224155DDD6264
15F20A945EB77E810C48389923815B944E113DA3A5B515C5AFD73A2CDC6B1E8F
81C92D7BF0647DDFAEC8A187C917457486F7E8DBD017B207648FBBAE2D529B8F
47635B26BF6DA9F362560D6F7FC412FB93C807564851315B074946ADA268DF40
8853315C9660F2225C97AEB7DA75D93932AE4D3224E1DB9BD4AE867AFFF44CD5
71C30263AA7DCAA76F23E57FA05EF9EEF1986E691B91D0BB67863D27E82097C5
EE7DE9EB643A9FDD54C6B8740C63E24D2C55D5A668D1C0AADDCA2D75217E4785
F2E902079061C1DC7BDDF47A7AD6E623653DDE4F139528D41B8C0540698912F9
8A87E3A995707390C751C68FA486D6D1FE853AD5067438E288DCDC87ED215171
033AD4A3AF230D1F357DE93C13A41E6E19950C43B9CCE2B2398E2356F06CBD47
5D60C1625E8FF7B5684C82D40F355536D5D999900F69ADB96A4B987008ED1EEF
777350B0C38753C9DEAE40C9CE4CB6A82048C164DA58B3ED741B7898C84AA498
55BCFEE22D2D32A782E96DF17CD942F20E3ABD74E80204BF631A50B07249888B
4B5A63EE33B05BC90A49AE1256282282DAE9DF3744C80C451489313884C94D4B
2A97328D5DFAF85798E548634426EAABE2BFF828CD264B0D18F5D27191FCFB5A
BCAC8229E3CCF50094DF787C500E9B4BD0DD31E805567931E0EC309C97580BDC
44AA54670A3C494FC96B329DC22B1E1F1FB87FE91C7E43413C2DA7430C891ABF
B09FC2D6C1BFA23C3731528059AF6AB4CFF7FC4BDB5F001854E023C452D497FA
9FDF250AA93628EEB77BAD8CC517769B0990A58FD7A30909DF1E5C3038CFFA79
35941B864E28358206CB82983BC634ED5A4A312700403949DAD96A0B237D48E0
08E67C34E5586340D0DA6040DEC778E783FF4AB1EA2ED97908A60C661AE252A2
85DE49AAED5D863F9673AA358ED684C4D767F84A6F29D2A2E77D21CF4E35E981
8E184E90BA6B16D29A23E498A64C3B6D8191E7ADDC87238AF72BEFB806A07F29
0E2C442F478AC9A67C6B7190DAA9AA03A7EB7537E62DB0A0F8ACD6C83D762717
CFAFBB12A78C88CF7947A458597A19BBE5EEAC181D2E8403D66BEF748D7471DE
A8A2010A5B3E07AEC64AF9F00CDC5AE35FE4DE9C0C761E137FFDD9AD0270A577
E67C1A8D126A3CE81DCF30122278CE07472D695651009209EDD1C7F481D60067
0055A445EE4BDFBE544FDAC8E32070CAA78872E0261588A5DFB7B2973F98E6A9
B5BC0016C941EC4DDE23797AAEEFB84E1302FC31A07D8207EA31F2D9955940FC
62008F1ECB121A8EB409DB9A5658579F65A3A169976300A0452563A4F828BB5D
C8E1D52995D66926DD00C1559FF22A656DF60C387B28918FE63385AE48A57162
F192EB2CFA4D330ED9196197D01BAE330C52788285D0F37CBF6085545A1D0975
8B73A1DFB6F5DBFD3E33E3FA160B2976DD2269C4874F4C8F1487E56996165849
E4FD91BE371BFE60E5B25E6FD3885968655A20F5AB0FC7CC9559F8586C339137
24882DBAA20BFEE377B2851A3804FD90A5FFCA7CCABA0FC3AE6BD9AE1FAF93FB
E906C9FBD1EF5ECCC8EB29885A4594D7C9E18797D25E318173ABD0BF9CD1BBCD
7CA38DD324078B197B211EA237ECA5D465D7940580E8159429F4B4F547BD92EC
48C8D244DDA37269CE385A2D74434CDCCC233F90A5649D2B22DB073835ACF713
4C7810F81D6956E1AD2970BB412526D53BA430A6B89FCAC7EA8530BB954B1596
751900B3AB853FFC669740977ED6E31BAE86E460292A0CC15B1C635C5034D991
A8A076116C1C2704E2761CC9836857FAC7234ABD3E8BA1E8186DD4EBB7F73E2D
B6A3F48807C6327315DFCA95218DC043BCCBDF5474458E171CB20CED4E945A70
BF1C241D0A45D7188EAF5181D2F067482EB39A010D8DDBDAC38584073AEA8ACE
353FA16469682AF75A9892E6862A73AC93C5AC58A95BD62DEBF1BF4640E615CB
B4771239FE7A7DAD5DDA82481D469E69538870D621799CE3E7A8718D0BF75FA1
50BF3E7058BBA7E50085856EE7BE96B43227455CBF68C0F09C5FE7919ED15237
824B670A27AA29B21D748AF51FBFAB20ADA774A92993B190A8717D607A037F57
C0801D147934843B0D60F9954B7D714F0AFE33A5E3B5A66A4DEAF5CC30705AC2
0251AD6DA975D961DE0490B0DB9066AEFE31848283FDADBF85F61177A5A3F62F
0124958CD434C4DC0388C90CC6716A6BE9D0E836B8C871F7DEF252C0B7CA3E64
1C18A706BBBFD45D183A7618C89E948F930A594F128D4E3E93CCAEFF604B9C1A
F66E8E01DE0D7B5D685C1FC9868F16A4EBC349B8857278C0065D5585C3DCAEE4
ABBB4C9756626D2D114C070DEF50E185540F8754D41A41D101B06494724AAF79
C032BBEDB0DBBCF226C7078D4FD35ABF4BF130EE00ADDF40660BF7C0FA049CE0
3DE220A88014E241C80ACE490A88979A409198F2AD02FEEFDA0B1AE252698B43
8A7F669C7DB68411E918B6C908B11612E68797FBE6877E5022DC270A621359D2
04D65264D5A64935055F8223D26177F4EA172594C335CB691EBD758D7CD873BF
FAC24C9F65F03EF9C5443AF83BF461E9DB881785499C38802FD81E30AEAF1A2C
16BD9190263694F3338545AE4D91FB562C26FBF2B9E5FE8DACFBBE8C44A7F36F
52AC57C840D880F54EE12371CAA027FE0965BE85DAD43467F67B4E3AC7565C6E
9A0266F22D3462C53F7BC748C10C11F5C3930036589D2C2E2CC529D28FCDAEFF
3D138FBC88A01A43EC38006C559CDD862DEF55212CE109E7CB6B66E21BA1D1A0
9D6A5953712EF8B41A0AA1A04F25B610665DF98075FACD3EFB664FF1B0E6AE53
48CED7BCBCA4367839197E7326232E9D956C7828CA330917C058C5C21018A3C7
F033A9DAE8F2B7D5EBDBFECF75631B8F58A2DCCCA70C0F2B1647E1A6B1002472
E5D69A706E7A7B50F4F2A5023021F5FB6F1152AF379919477E4F31DA3889B770
9243E4A3383DFE9A209D2A3D897CD56DC926B13AA08E8598E8BDD9F145BFAC0A
5B8ECCCD21925A922B4732C3A148213585305121AD45E34DB64707A38F6C5B12
21FEFF9637F5F192C011B12F4FB80483B63BB1C059309B0D5FF5002BB657C960
208C2906AFCABE04BB288A1B57714007C133F0488932A68529A1533FCD1A19F2
4CE8FD34ED66F178D5F8E6A8930527A911C87F45AFFDDC945A687A732C057269
CB5505FDF2F525B79A79F76B11A02AE9895B11257E6F896BC6C017DCD2C34288
F0DDFCE6478F182BB4A117CB2E74FD5FA51C0F89294A41C81F58D53F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 () @start
/Fa 138[44 44 44 44 2[44 44 44 44 44 1[44 2[44 44 44
44 44 47[44 3[44 46[{}17 83.022 /CMTT10 rf /Fb 137[51
51 49 38 50 2[53 1[62 43 2[25 51 2[46 52 49 1[51 10[68
3[66 4[82 57 2[34 2[59 2[65 64 15[46 4[31 45[{}24 83.022
/CMCSC10 rf /Fc 144[35 5[35 27[35 77[{}3 66.4176 /CMTT8
rf /Fd 154[50 101[{}1 83.022 /LCIRCLE10 rf /Fe 194[55
4[35 35 3[35 35 35 35 4[55 2[27 40[{}9 66.4176 /CMR8
rf /Ff 205[47 71 19 14[71 29[35 3[{}5 66.4176 /CMSY8
rf /Fg 135[40 5[32 2[34 43 62 1[37 29 24 18[41 48 4[45
1[56 68 17[20 59[{}14 66.4176 /CMMI8 rf /Fh 154[51 14[76
4[86 61[67 67 18[{}5 90.9091 /CMEX10 rf /Fi 249[65 6[{}1
83.022 /CMSY10 rf /Fj 138[53 2[39 5[27 2[27 1[48 1[44
2[53 46 12[66 13[60 4[72 9[48 48 48 48 48 48 48 2[27
46[{}19 83.022 /CMBX10 rf /Fk 133[42 45 52 65 1[52 33
43 1[41 1[44 55 80 27 47 37 31 52 2[42 47 39 39 48 9[86
53 62 1[56 69 1[58 1[73 88 62 2[40 4[75 65 1[68 2[71
2[25 25 27[54 1[40 1[47 7[43 18[{}41 90.9091 /CMMI10
rf /Fl 133[37 44 42 60 42 49 30 37 38 42 46 46 51 74
23 42 28 28 46 42 28 42 46 42 42 46 9[91 68 68 65 51
2[62 70 1[82 57 2[35 68 70 59 62 69 65 64 68 5[28 28
46 46 5[46 46 46 1[28 33 28 2[37 37 27[51 56 11[{}58
90.9091 /CMTI10 rf /Fm 133[60 71 2[71 75 52 53 55 1[75
67 75 112 37 2[37 75 67 41 61 75 60 1[65 9[139 102 1[94
75 100 1[92 101 1[128 81 2[50 105 1[85 1[103 97 96 102
1[64 9[67 67 67 67 67 2[37 45 37 44[{}45 119.552 /CMBX12
rf /Fn 135[102 3[75 1[79 1[108 1[108 4[54 108 2[88 108
2[94 29[140 138 146 11[97 97 97 97 97 49[{}18 172.188
/CMBX12 rf /Fo 129[48 48 48 48 1[48 48 48 48 48 48 48
48 48 48 48 48 48 48 48 1[48 48 48 48 48 48 48 48 48
1[48 1[48 48 48 1[48 1[48 48 48 48 48 48 1[48 48 48 48
48 2[48 48 48 48 48 48 48 48 48 48 1[48 48 48 48 48 48
48 48 48 2[48 48 48 48 1[48 48 48 48 1[48 48 48 48 1[48
36[{}76 90.9091 /CMTT10 rf /Fp 144[25 45 2[45 25 35 35
45 45 6[61 61 1[61 61 31[45 61 51 51 0 0 3[61 10[71 5[91
11[71 71 1[71 71 1[45 8[71 3[71 25 71{}30 90.9091 /CMSY10
rf /Fq 137[56 56 54 42 55 2[58 1[68 47 2[27 56 1[49 51
57 54 1[56 10[74 3[73 4[90 62 2[37 2[65 2[71 70 15[50
4[34 45[{}25 90.9091 /CMCSC10 rf /Fr 128[45 3[45 40 48
48 66 48 51 35 36 36 48 51 45 51 76 25 48 28 25 51 45
28 40 51 40 51 45 1[25 1[25 45 25 1[68 1[93 68 68 66
51 67 71 62 71 68 83 57 71 47 33 68 71 59 62 69 66 64
68 1[43 1[71 1[25 25 45 45 45 45 45 45 45 45 45 45 45
25 30 25 71 1[35 35 25 4[45 25 18[76 51 51 53 11[{}84
90.9091 /CMR10 rf /Fs 133[46 55 55 76 55 58 41 41 43
55 58 52 58 87 29 55 1[29 58 52 32 48 58 46 58 51 3[29
1[29 3[108 79 1[73 58 78 2[79 82 99 63 2[40 82 82 66
1[80 76 74 79 1[49 4[29 52 2[52 52 52 52 52 52 52 1[29
35 29 2[41 41 27[58 12[{}60 90.9091 /CMBX10 rf /Ft 134[123
1[168 1[129 90 92 95 1[129 116 129 194 65 123 1[65 129
116 71 106 129 103 129 113 9[240 175 1[162 4[175 182
220 140 2[87 182 183 146 1[178 168 165 20[77 45[{}36
206.559 /CMBX12 rf /Fu 134[44 44 60 44 46 32 33 33 1[46
42 46 69 23 44 1[23 46 42 25 37 46 37 46 42 9[85 62 1[60
46 61 1[57 2[76 52 1[43 30 62 65 54 1[63 60 59 62 6[23
7[42 42 2[23 28 23 44[{}46 83.022 /CMR10 rf /Fv 133[50
59 59 81 59 62 44 44 46 1[62 56 62 93 31 2[31 62 56 34
51 62 50 62 54 7[85 2[85 86 78 62 84 2[84 88 106 67 2[42
88 1[70 74 86 81 80 85 11[56 56 56 56 56 2[31 37 31 44[{}49
99.6264 /CMBX12 rf /Fw 134[51 2[51 54 38 38 38 51 54
49 54 81 27 2[27 54 49 30 43 54 43 54 49 6[60 73 2[73
73 70 54 72 1[66 76 73 89 61 2[35 2[64 66 75 70 69 73
6[27 6[49 49 1[49 48[{}44 99.6264 /CMR12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 1246 -89 a Fw(UNIVERSITY)35 b(OF)d(CALIF)m(ORNIA)
1656 57 y(SANT)-8 b(A)33 b(CR)m(UZ)629 277 y Fv(Chai)q(-)k(A)g(TOOL)h
(F)m(OR)g(SYNCHR)m(ONOUS)e(INTERF)-12 b(A)m(CES)963 447
y Fw(A)33 b(thesis)h(submitted)g(in)f(partial)f(satisfaction)h(of)f
(the)1337 567 y(requiremen)m(ts)j(for)d(the)h(degree)h(of)1443
787 y(MASTER)g(OF)e(SCIENCE)1936 1007 y(in)1450 1227
y(COMPUTER)i(SCIENCE)1925 1447 y(b)m(y)1533 1667 y Fv(V)-9
b(aibha)m(v)39 b(Bhandari)1652 1887 y Fw(Decem)m(b)s(er)34
b(2003)1830 2917 y(The)f(thesis)h(of)f(V)-8 b(aibha)m(v)33
b(Bhandari)1830 3038 y(is)g(appro)m(v)m(ed:)p 1830 3297
1800 5 v 1830 3418 a Fu(Professor)25 b(Luca)i(de)h(Alfaro,)f(Chair)p
1830 3687 V 1830 3808 a(Professor)e(Jim)i(Whitehead)p
1830 4078 V 1830 4198 a(Professor)e(Scott)j(Brandt)p
323 4560 V 323 4673 a(F)-7 b(rank)27 b(T)-7 b(alaman)n(tes)323
4786 y(Vice)28 b(Pro)n(v)n(ost)d(and)i(Dean)h(of)f(Graduate)g(Studies)p
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 323 825 a Ft(Con)-6 b(ten)g(ts)323
1360 y Fs(List)34 b(of)i(Figures)102 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)149 b(4)323 1564 y(List)34
b(of)i(T)-9 b(ables)74 b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)149 b(5)323 1768 y(1)84 b(In)m(tro)s(duction)130
b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)149
b(6)459 1881 y Fr(1.1)94 b(Wh)m(y)31 b(in)m(terface)h(mo)s(dules?)62
b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)173 b(6)459 1994 y(1.2)94
b(Organization)32 b(of)e(this)h(thesis)42 b(.)j(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)173
b(8)323 2198 y Fs(2)84 b(In)m(terfaces)112 b(.)45 b(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)149 b(9)459 2311
y Fr(2.1)94 b(In)m(terface)32 b(Mo)s(dules)27 b(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)173 b(9)459
2424 y(2.2)94 b(Basics)68 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)
g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(10)459 2536 y(2.3)94
b(Sync)m(hronous)29 b(In)m(terfaces,)j(F)-8 b(ormally)54
b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)128 b(14)459 2649 y(2.4)94 b(Comp)s(osition)g(.)45
b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(16)668 2762 y(2.4.1)106 b(Comp)s(osition)30 b(and)g(Compatibilit)m(y)
-8 b(,)33 b(F)-8 b(ormally)60 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)128 b(18)459 2875 y(2.5)94 b(Comp)s(osition)31
b(Algorithm)81 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(19)323
3079 y Fs(3)84 b(Chai)119 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)96 b(22)459 3192 y Fr(3.1)e(The)30
b(Starting)h(P)m(oin)m(t-)h Fq(Mocha)h Fr(.)46 b(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(22)459 3305 y(3.2)94 b(T)-8 b(utorial)32 b(In)m(tro)s(duction)e(to)h
Fq(Chai)h Fr(.)46 b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(24)668 3418 y(3.2.1)106
b(Mo)s(delling)31 b(with)f Fq(Chai)g Fr(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(24)668 3531 y(3.2.2)106 b(Running)29 b Fq(Chai)79 b
Fr(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(25)459 3644
y(3.3)94 b(In)m(terface)32 b(Mo)s(dules)27 b(.)46 b(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)128 b(28)668 3756 y(3.3.1)106 b(V)-8
b(ariables)84 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(28)668 3869 y(3.3.2)106 b(In)m(tialization)33 b(and)d(T)-8
b(ransitions)24 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)f(.)h(.)g(.)128 b(28)668 3982 y(3.3.3)106
b(Syn)m(tax)31 b(.)45 b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
128 b(29)668 4095 y(3.3.4)106 b(Seman)m(tics)51 b(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(30)668
4208 y(3.3.5)106 b(Implemen)m(tation)34 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)128 b(30)459 4321 y(3.4)94 b(Chai)30 b(Op)s(erations)83
b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(31)668
4434 y(3.4.1)136 b(In)m(terfaces)36 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)
g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)f(.)h(.)g(.)128 b(31)668 4547 y(3.4.2)106 b(Reactiv)m(e)33
b(Mo)s(dules)26 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(32)668
4660 y(3.4.3)106 b(BDDs)32 b(and)d(FSMs)55 b(.)46 b(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)
g(.)128 b(32)668 4773 y(3.4.4)106 b(In)m(v)-5 b(arian)m(ts)53
b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(32)668
4886 y(3.4.5)106 b(Summary)29 b(of)i(Imp)s(ortan)m(t)f(Commands)38
b(.)46 b(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(33)1954 5094 y(2)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 323 -89 a Fs(4)84 b(In)m(terfaces)35
b(for)g(Hardw)m(are)f(Design)92 b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)96 b(35)459
24 y Fr(4.1)e(HDL)31 b(to)g(BLIF-MV)79 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g
(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)128 b(35)459 137 y(4.2)94 b Fq(BLIF-MV)23
b Fr(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(36)668 250 y(4.2.1)106 b(MV2RM)30 b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)128 b(37)459 363 y(4.3)94 b(T)-8 b(ranslating)31
b Fq(BLIF-MV)g Fr(to)g Fq(Rea)n(ctive)i(Modules)c Fr(.)46
b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(39)668
476 y(4.3.1)106 b(Multi-v)-5 b(alued)32 b(V)-8 b(ariables)43
b(.)j(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)f(.)h(.)g(.)128 b(39)668 589 y(4.3.2)106 b(T)-8
b(ables)51 b(.)45 b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g
(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(40)668 702 y(4.3.3)106 b(Latc)m(hes)32 b(and)e(Reset)h(T)-8
b(ables)69 b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)128 b(42)668 815 y(4.3.4)106 b(Mo)s(dels)93
b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(43)668 928 y(4.3.5)106 b(Sub)s(circuits)74 b(.)46 b(.)f(.)h(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)
h(.)g(.)f(.)h(.)g(.)128 b(44)459 1040 y(4.4)94 b Fq(Rea)n(ctive)33
b(Modules)c Fr(to)i(In)m(terfaces)g(mo)s(dules)66 b(.)45
b(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(46)323 1244 y Fs(5)84 b(Conclusion)36 b(and)f(F)-9
b(uture)35 b(W)-9 b(ork)125 b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)96 b(49)323
1448 y(A)57 b(Grammar)35 b(Of)g(In)m(terface)f(Mo)s(dules)74
b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)96 b(50)323 1652 y(B)62 b(BLIF-MV)35 b(BNF)67
b(.)46 b(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)96
b(51)323 1856 y(Bibliograph)m(y)108 b(.)45 b(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)96 b(54)1954 5094 y Fr(3)p
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 323 825 a Ft(List)76 b(of)i(Figures)459
1353 y Fr(2.1)94 b(A)31 b(coun)m(ter)g(and)f(a)g Fp(\006)p
Fr(1)h(adder,)f(mo)s(delled)g(as)h(Sync)m(hronous)e(in)m(terface.)83
b(.)46 b(.)g(.)128 b(11)459 1549 y(3.1)94 b(A)31 b(2-bit)g(Do)m(wn)g
(Coun)m(ter)54 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f
(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(25)459 1661 y(3.2)94 b(A)31 b(2-bit)g(Do)m(wn)g(Coun)m(ter)f(Mo)s
(delled)h(As)f(An)g(In)m(terface)i(Mo)s(dule)86 b(.)46
b(.)g(.)f(.)h(.)g(.)128 b(26)459 1774 y(3.3)94 b(A)31
b(Simple)f(Gate)79 b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
128 b(27)459 1887 y(3.4)94 b(Syn)m(tax)31 b(of)f(In)m(terface)i(Mo)s
(dule)78 b(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(30)459 2083
y(4.1)94 b(Con)m(v)m(erting)32 b(Hardw)m(are)e(Description)i(Languages)
f(to)g(In)m(terfaces)59 b(.)46 b(.)g(.)f(.)h(.)g(.)128
b(36)459 2196 y(4.2)94 b(P)m(edestrian)31 b(Crossing)91
b(.)45 b(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(37)459
2309 y(4.3)94 b(P)m(edestrian)31 b(Ligh)m(t)g(Con)m(troller)h(in)e
(BLIF-MV)h(and)f Fq(Rea)n(ctive)j(Modules)g Fr(.)128
b(38)459 2422 y(4.4)94 b(Arc)m(hitecture)32 b(of)f Fq(mv2rm)94
b Fr(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(39)459 2535
y(4.5)94 b(Reactiv)m(e)33 b(Mo)s(dules)d(Represen)m(ting)h(a)g(Do)m(wn)
g(Coun)m(ter)76 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(47)459 2648 y(4.6)94 b(In)m(terface)32 b(Represen)m(tation)g(of)e(Do)
m(wn)h(Coun)m(ter)f(b)m(y)g Fo(rms2intf)68 b Fr(.)45
b(.)h(.)g(.)f(.)h(.)g(.)128 b(48)459 2761 y(4.7)94 b(HDLs)31
b(in)f Fq(Chai)90 b Fr(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)
g(.)128 b(48)459 2957 y(A.1)71 b(Syn)m(tax)31 b(of)f(In)m(terface)i(Mo)
s(dule)78 b(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(50)1954 5094
y(4)p eop end
%%Page: 5 5
TeXDict begin 5 4 bop 323 825 a Ft(List)76 b(of)i(T)-19
b(ables)459 1353 y Fr(4.1)94 b(Mapping)31 b(of)f Fq(BLIF-MV)g
Fr(constructs)h(to)g Fq(Rea)n(ctive)i(Modules)87 b Fr(.)46
b(.)f(.)h(.)g(.)128 b(40)459 1465 y(4.2)94 b(Multiv)-5
b(alued)31 b(V)-8 b(ariables)32 b(T)-8 b(ranslated)52
b(.)46 b(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)
f(.)h(.)g(.)128 b(40)459 1578 y(4.3)94 b(T)-8 b(ables)31
b(translated)53 b(.)46 b(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)
f(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(42)459 1691 y(4.4)94 b(Latc)m(h)32 b(and)d(Reset)j(Statemen)m(ts)f(T)
-8 b(ranslated)80 b(.)46 b(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g
(.)f(.)h(.)g(.)128 b(43)459 1804 y(4.5)94 b Fo(.model)29
b Fr(translated)93 b(.)46 b(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)g(.)f
(.)h(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128
b(45)459 1917 y(4.6)94 b(P)m(artial)32 b Fo(.subckt)d
Fr(T)-8 b(ranslation)43 b(.)j(.)g(.)f(.)h(.)g(.)g(.)f(.)h(.)g(.)f(.)h
(.)g(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)f(.)h(.)g(.)128 b(46)1954
5094 y(5)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 323 742 a Fn(Chapter)65 b(1)323
1406 y Ft(In)-6 b(tro)6 b(duction)323 1964 y Fr(Comp)s(onen)m(t)35
b(based)g(designed)h(is)f(optimistic)i(in)e(nature.)56
b(The)35 b(designers)h(assume)f(a)h(lot)h(of)323 2189
y(things)f(ab)s(out)f(the)i(en)m(vironmen)m(t)f(while)g(designing)g
(the)h(comp)s(onen)m(ts.)57 b(In)m(terface)38 b(mo)s(dules)323
2415 y(try)30 b(to)h(capture)g(this)f(design)g(discipline)h(in)f(a)h
(formal)f(w)m(a)m(y)-8 b(.)686 2641 y Fq(Chai)36 b Fr(is)f(a)g(to)s(ol)
h(that)f(enables)g(the)g(use)g(of)g(in)m(terface)h(formalism)f(for)g
(comp)s(onen)m(t)323 2867 y(based)27 b(design.)40 b(Its)28
b(a)h(v)m(ehicle)g(for)f(exp)s(erimen)m(tation)h(with)f(in)m(terfaces)h
(and)e(related)i(comp)s(osi-)323 3093 y(tional)i(v)m(eri\014cation)h
(algorithms)g(and)d(metho)s(dologies.)323 3529 y Fm(1.1)135
b(Wh)l(y)45 b(in)l(terface)h(mo)t(dules?)686 3844 y Fr(In)m(terfaces)24
b(mo)s(del)e(b)s(oth)g(the)g(b)s(eha)m(vior)h(of)f(a)h(system)f(comp)s
(onen)m(t,)j(and)d(the)g(in)m(terac-)323 4070 y(tion)34
b(b)s(et)m(w)m(een)f(the)h(comp)s(onen)m(t)f(and)g(its)h(en)m(vironmen)
m(t.)50 b(In)m(terface)34 b(mo)s(dules)f(are)g(primarily)323
4296 y(in)m(teresting)44 b(and)e(applicable)i(in)e(comp)s(onen)m(t)i
(based)e(design)h(paradigm)g(as)g(they)g(supp)s(ort)323
4522 y(follo)m(wing)32 b(activities:)1954 5094 y(6)p
eop end
%%Page: 7 7
TeXDict begin 7 6 bop 459 -89 a Fp(\017)46 b Fs(Comp)s(onen)m(t)40
b(Reuse)p Fr(.)55 b(In)34 b(comp)s(onen)m(t-based)h(approac)m(h,)i
(designs)e(are)g(created)h(b)m(y)550 137 y(com)m(bining)k(pre-existing)
h(and)e(application-sp)s(eci\014c)j(comp)s(onen)m(ts.)69
b(The)39 b(mo)s(dels)h(of)550 363 y(the)30 b(comp)s(onen)m(ts)f(and)g
(their)g(in)m(terfaces)i(help)e(in)g(selecting)j(and)c(com)m(bining)i
(the)g(com-)550 589 y(p)s(onen)m(ts,)36 b(and)f(in)g(c)m(hec)m(king)i
(that)f(the)g(comp)s(onen)m(t)f(in)m(terfaces)i(are)f(compatible)g
(with)550 815 y(one)31 b(another.)41 b(This)29 b(promotes)i(comp)s
(onen)m(t)g(re-use.)459 1115 y Fp(\017)46 b Fs(T)-9 b(op-do)m(wn)46
b(design)g(decomp)s(osition.)71 b Fr(A)40 b(design)f(is)h(decomp)s
(osed)g(in)m(to)g(comp)s(o-)550 1341 y(nen)m(ts)22 b(that)g(can)f(b)s
(e)g(designed)g(and)g(implemen)m(ted)h(separately)-8
b(.)39 b(The)21 b(comp)s(onen)m(t)h(mo)s(del)550 1567
y(is)35 b(used)f(to)h(sp)s(ecify)g(the)f(task)i(of)f(eac)m(h)h(comp)s
(onen)m(t;)h(the)e(in)m(terface)h(sp)s(eci\014cation)g(en-)550
1793 y(sures)30 b(that)h(the)f(comp)s(onen)m(ts,)h(once)g(implemen)m
(ted,)g(can)g(w)m(ork)f(together)i(correctly)-8 b(.)459
2093 y Fp(\017)46 b Fs(Comp)s(ositional)51 b(v)m(eri\014cation.)82
b Fr(In)44 b(order)f(to)i(v)m(erify)g(a)f(complete)i(design,)i(eac)m(h)
550 2319 y(comp)s(onen)m(t)43 b(is)f(studied)g(with)g(the)g(help)g(of)h
(assumptions)e(ab)s(out)h(its)h(en)m(vironmen)m(t.)550
2545 y(The)32 b(results)h(for)f(the)h(single)g(comp)s(onen)m(ts)g(are)g
(then)g(com)m(bined)g(in)m(to)g(an)g(analysis)g(for)550
2771 y(the)k(complete)i(system.)61 b(In)m(terface)38
b(mo)s(dels)f(capture)g(b)s(oth)f(the)i(assumptions)e(ab)s(out)550
2996 y(the)31 b(en)m(vironmen)m(t,)g(and)f(the)g(comp)s(onen)m(t)h(b)s
(eha)m(vior.)686 3322 y Fq(Chai)25 b Fr(extends)e Fq(Mocha)g
Fs(??)h Fr(and)f(follo)m(ws)i(a)f(soft)m(w)m(are)h(arc)m(hitecture)h
(similar)e(to)g(VIS)323 3548 y Fs(??)q Fr(.)45 b(It)32
b(is)g(written)g(en)m(tirely)h(in)f(C)f(and)h(its)g(shell)g(user)g(in)m
(terface)h(is)f(pro)m(vided)g(b)m(y)g(Tcl.)45 b Fq(Chai)323
3774 y Fr(pro)m(vides)30 b(t)m(w)m(o)i(lev)m(els)g(of)e(dev)m(elopmen)m
(t:)459 4074 y Fp(\017)46 b Fs(Designers)36 b(and)f(application)g(dev)m
(elop)s(ers)c Fr(can)f(customize)i(their)e(application)i(or)550
4300 y(design)e(their)h(o)m(wn)f(user)g(in)m(terface)i(b)m(y)e(writing)
g(Tcl)h(scripts.)459 4600 y Fp(\017)46 b Fs(Algorithm)i(dev)m(elop)s
(ers)g(and)f(researc)m(hers)42 b Fr(can)f(dev)m(elop)h(new)f
(algorithms)h(b)m(y)550 4826 y(writing)33 b(C)g(co)s(de,)i(or)e(assem)m
(ble)h(an)m(y)g(v)m(eri\014cation)h(pac)m(k)-5 b(ages)35
b(suc)m(h)e(as)g(those)h(pro)m(vided)1954 5094 y(7)p
eop end
%%Page: 8 8
TeXDict begin 8 7 bop 550 -89 a Fr(b)m(y)30 b(VIS)g(through)g(the)g(C)g
(in)m(terfaces.)323 347 y Fm(1.2)135 b(Organization)46
b(of)g(this)f(thesis)686 663 y Fr(Chapter)33 b(2)h(describ)s(es)f(and)g
(de\014nes)f(in)m(terface)j(mo)s(dules,)f(their)f(comp)s(osition)h(and)
323 889 y(compatibilit)m(y)-8 b(.)71 b(Chapter)39 b(3)h(describ)s(es)f
Fq(Chai)i Fr(in)m(tro)s(duces)e(its)h(ro)s(ots,)j(explains)d(mo)s
(delling)323 1115 y(with)26 b(in)m(terfaces)h(and)f(sheds)f(some)h
(ligh)m(t)h(on)f(implemen)m(tation)i(of)e(in)m(terface)i(mo)s(dules.)38
b(Chap-)323 1341 y(ter)27 b(4)g(presen)m(ts)g(con)m(v)m(ersion)h(of)f
(hardw)m(are)f(description)h(languages)h(comp)s(onen)m(ts)f(to)g(in)m
(terface)323 1566 y(mo)s(dules.)84 b(Sp)s(eci\014cally)45
b(it)g(elab)s(orates)i Fq(mv2rm)d Fr(a)i(to)s(ol)f(implemen)m(ted)h(to)
g(con)m(v)m(ert)g(from)323 1792 y Fq(BLIF-MV)28 b Fr(to)h
Fq(Rea)n(ctive)k(Modules)n Fr(.)40 b(Relev)-5 b(an)m(t)30
b(conclusions)e(and)g(future)f(w)m(ork)i(are)f(out-)323
2018 y(lined)i(in)g(Chapter)g(5.)1954 5094 y(8)p eop
end
%%Page: 9 9
TeXDict begin 9 8 bop 323 742 a Fn(Chapter)65 b(2)323
1406 y Ft(In)-6 b(terfaces)323 2037 y Fm(2.1)135 b(In)l(terface)46
b(Mo)t(dules)686 2353 y Fr(In)c(an)h(optimistic)h(approac)m(h)f(to)g
(designing)g(one)g(mak)m(es)g(a)g(lot)h(of)f(assumptions)323
2578 y(ab)s(out)g(the)g(en)m(vironmen)m(t)h(of)f(the)g(design)g(t)m
(ypically)i(as)f(it)g(is)f(done)g(in)g(comp)s(onen)m(t-based)323
2804 y(mo)s(delling.)76 b Fl(Interfac)-5 b(e)44 b(mo)-5
b(dule,)47 b Fr(is)42 b(an)g(optimistic)i(formal)e(mo)s(del)g(of)g(a)h
(discrete)g(system)323 3030 y(comp)s(onen)m(t)30 b(that)h(can)g(comm)m
(unicate)h(with)e(its)h(en)m(vironmen)m(t.)686 3256 y(In)f(traditional)
i(formalisms)f(to)g(mo)s(del)g(comp)s(onen)m(t)g(based)f(designs,)h
(the)g(designer)323 3482 y(has)37 b(to)h(sp)s(ecify)f(the)g(b)s(eha)m
(vior)g(of)h(the)f(system)h(for)f(all)h(p)s(ossible)f(inputs)f(ev)m(en)
i(if)f(he)g(kno)m(ws)323 3707 y(some)22 b(input)f(v)-5
b(alues)23 b(in)f(the)g(giv)m(en)h(en)m(vironmen)m(ts)g(are)f
(infeasible)h([A)m(C97)q(].)39 b(In)m(terfaces)23 b(pro)m(vide)323
3933 y(a)36 b(w)m(a)m(y)i(of)e(describing)g(the)g(input)f(assumptions)h
(of)g(a)h(comp)s(onen)m(t)f(b)m(y)g(expressing)g(them)h(as)323
4159 y(input)29 b(relations.)686 4385 y(Consider)22 b(an)h(en)m
(vironmen)m(t)g(where)g(more)g(than)f(one)h(comp)s(onen)m(t)g(can)g
(generate)i(the)323 4611 y(same)i(output.)39 b(In)26
b(suc)m(h)g(a)h(setting)h(passiv)m(e)f(mo)s(delling)g(is)g
(in-applicable.)40 b(A)27 b(partial)g(solution)323 4837
y(is)f(pro)m(vided)f(b)m(y)h(formalisms)g(lik)m(e)h(pro)s(cess)f
(algebras)h([A)m(C97)q(])f(where)g(a)g(co-op)s(erativ)m(e)i(solution)
1954 5094 y(9)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 323 -89 a Fr(is)29 b(ac)m(hiev)m(ed)i(b)m(y)e
(making)h(comp)s(onen)m(ts)f(agree)i(on)e(the)g(output)g(action.)42
b(Suc)m(h)29 b(a)g(co-op)s(eration)323 137 y(is)37 b(input)f(based.)62
b(Ho)m(w)m(ev)m(er)39 b(there)e(is)h(no-w)m(a)m(y)g(to)g(express)f(the)
h(en)m(vironmen)m(t)g(assumptions)323 363 y(of)33 b(a)h(this)f(design)g
(other)h(than)f(expressing)g(it)h(hard-co)s(ded)e(in)h(the)g(comp)s
(onen)m(ts.)50 b(In)m(terfaces)323 589 y(presen)m(t)30
b(an)g(elegan)m(t)j(solution)e(b)m(y)f(allo)m(wing)i(the)f(designer)f
(to)h(express)f(suc)m(h)g(assumptions.)686 815 y(F)-8
b(or)36 b(the)f(eager)h(reader)e(to)i(giv)m(e)g(a)f(taste)h(of)f(in)m
(terface)i(mo)s(dules)c(Figure)j(2.1)f(illus-)323 1040
y(trates)41 b(a)g(simple)f(sync)m(hronous)f(in)m(terface)j(of)f(a)f
(8-bit)i Fp(\006)p Fr(1)e(adder)g(con)m(trolled)i(b)m(y)e(a)h(binary)
323 1266 y(coun)m(ter.)75 b(The)41 b(in)m(terface)i(formalism)f(is)g
(describ)s(ed)e(as)i(an)g(in)m(terface)h(mo)s(dule)e(with)g(state)323
1492 y(v)-5 b(ariables)33 b(partitioned)g(as)f(inputs)f(and)h(outputs.)
46 b(The)32 b(acceptable)i(state)g(v)-5 b(ariable)33
b(c)m(hanges)323 1718 y(are)e(describ)s(ed)f(b)m(y)h(transition)h
(relations)g(of)g(input)e(atoms)i(and)e(p)s(ossible)h(output)g(state)h
(v)-5 b(ari-)323 1944 y(able)28 b(c)m(hanges)h(are)f(describ)s(ed)f(as)
h(transition)h(relations)f(of)g(output)g(atoms.)41 b(W)-8
b(e)29 b(will)f(consider)323 2170 y(parts)41 b(of)g(this)g(example)h
(as)g(illustrations)g(through)f(coming)h(sections)g(to)g(explain)g(v)-5
b(arious)323 2395 y(asp)s(ects)30 b(of)h(in)m(terfaces.)323
2831 y Fm(2.2)135 b(Basics)686 3147 y Fr(This)22 b(section)i(is)f(mo)s
(delled)f(after)h Fs(??)q Fr(.)38 b(W)-8 b(e)24 b(presen)m(t)f(here)f
(a)h(few)f(relev)-5 b(an)m(t)24 b(de\014nitions)323 3373
y(b)s(efore)30 b(w)m(e)h(formally)f(de\014ne)g(in)m(terface)i(mo)s
(dules.)323 3726 y Fs(V)-9 b(ariables.)91 b Fr(Consider)36
b(an)h(in\014nite)g(global)h(set)g Fk(W)49 b Fr(of)37
b Fl(typ)-5 b(e)g(d)41 b(variables,)e Fr(from)e(whic)m(h)g(the)323
3952 y(v)-5 b(ariables)40 b(of)f(the)h(mo)s(dules)f(will)h(b)s(e)e(dra)
m(wn.)67 b(Eac)m(h)40 b(v)-5 b(ariable)41 b Fk(x)f Fp(2)g
Fk(W)52 b Fr(has)39 b(an)g(asso)s(ciated)323 4178 y Fl(domain,)30
b Fr(or)e(set)g(of)g(p)s(ossible)g(v)-5 b(alues,)29 b(whic)m(h)f(w)m(e)
g(denote)g Fk(D)s Fr(\()p Fk(x)p Fr(\).)41 b(W)-8 b(e)29
b(will)f(assume)g(that)g Fk(D)s Fr(\()p Fk(x)p Fr(\))323
4403 y(is)i(a)h(\014nite)f(set,)h(restricting)h(our)e(atten)m(tion)i
(to)f(\014nite-state)h(systems.)1931 5094 y(10)p eop
end
%%Page: 11 11
TeXDict begin 11 10 bop 534 780 a Fo(interface)45 b(Counter)629
893 y(output)h(q0,)h(q1:)g(bool;)629 1006 y(input)94
b(cl:)238 b(bool;)629 1119 y(input)47 b(atom)725 1232
y(controls)e(cl)725 1345 y(init)820 1458 y([])i(true)g(->)g(cl)g
(:=nondet)725 1571 y(update)820 1684 y([])g(true)g(->)g(cl':=nondet)629
1796 y(endatom)629 1909 y(output)f(atom)725 2022 y(controls)f(q0,q1)725
2135 y(reads)h(cl,)h(q0,)g(q1)725 2248 y(init)820 2361
y([])g(true)g(->)g(q0:=1;)f(q1:=1;)725 2474 y(update)820
2587 y([])95 b(cl)620 b(->)47 b(\\)1298 2700 y(q1':=1;)e(q0':=1)820
2813 y([])i(~cl)g(&)96 b(q1)47 b(&)95 b(q0)47 b(->)g(\\)1298
2926 y(q1':=1;)e(q0':=0)820 3039 y([])i(~cl)g(&)96 b(q1)47
b(&)g(~q0)g(->)g(\\)1298 3151 y(q1':=0;)e(q0':=1)820
3264 y([])i(~cl)g(&)h(~q1)f(&)95 b(q0)47 b(->)g(\\)1298
3377 y(q1':=0;)e(q0':=0)820 3490 y([])i(~cl)g(&)h(~q1)f(&)g(~q0)g(->)g
(\\)1298 3603 y(q1':=1;)e(q0':=1)629 3716 y(endatom)534
3829 y(end)i(interface)2188 780 y(interface)f(Adder)2284
893 y(input)94 b(q0,)47 b(q1:)g(bool;)f(di:)h([0..7];)2284
1006 y(output)f(do:)h([0..7];)2284 1232 y(input)f(atom)2379
1345 y(controls)g(q0,)h(q1)2379 1458 y(init)2475 1571
y([])g(true)g(->)g(q0:=1)2475 1684 y([])g(true)g(->)g(q1:=1)2379
1796 y(update)2475 1909 y([])g(true)g(->)g(q0':=1)2475
2022 y([])g(true)g(->)g(q1':=1)2284 2135 y(endatom)2284
2248 y(output)f(atom)2379 2361 y(controls)g(d0)2379 2474
y(reads)h(q0,)g(q1)2379 2587 y(init)2475 2700 y([])g(true)g(->)g
(do:=nondet)2379 2813 y(update)2475 2926 y([])95 b(q0)47
b(&)95 b(q1)47 b(->)g(do':=di')2475 3039 y([])g(~q0)g(&)95
b(q1)47 b(->)g(do':=di'+1)2475 3151 y([])95 b(q0)47 b(&)g(~q1)g(->)g
(do':=di'-1)2284 3264 y(endatom)2188 3377 y(end)g(interface)595
3978 y Fj(Figure)31 b(2.1)p Fu(:)36 b(A)28 b(coun)n(ter)f(and)h(a)f
Fi(\006)p Fu(1)f(adder,)h(mo)r(delled)h(as)f(Sync)n(hronous)f(in)n
(terface.)1931 5094 y Fr(11)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 323 -89 a Fs(States.)90 b Fr(Giv)m(en)32
b(a)f(\014nite)f(set)i Fk(V)46 b Fp(\022)25 b Fk(W)43
b Fr(of)31 b(v)-5 b(ariables,)32 b(a)f Fl(state)38 b
Fk(s)30 b Fr(o)m(v)m(er)i Fk(V)51 b Fr(is)31 b(a)g(function)f(that)323
137 y(asso)s(ciates)h(with)f(eac)m(h)g(v)-5 b(ariable)31
b Fk(x)25 b Fp(2)g Fk(V)50 b Fr(a)30 b(v)-5 b(alue)30
b Fk(s)p Fr(\()p Fk(x)p Fr(\))25 b Fp(2)g Fk(D)s Fr(\()p
Fk(x)p Fr(\);)30 b(w)m(e)h(denote)f(b)m(y)f Fk(S)5 b
Fr([)p Fk(V)21 b Fr(])29 b(the)h(set)323 363 y(of)f(all)i(p)s(ossible)e
(states)h(o)m(v)m(er)h(the)f(v)-5 b(ariables)30 b Fk(V)20
b Fr(.)41 b(Note)30 b(that,)h(formally)-8 b(,)31 b(the)e(t)m(yp)s(e)h
(of)f Fk(s)c Fp(2)g Fk(S)5 b Fr([)p Fk(V)21 b Fr(])323
589 y(is)418 521 y Fh(Q)504 616 y Fg(x)p Ff(2)p Fg(V)651
589 y Fr(\()p Fk(x)32 b Fp(7!)f Fk(D)s Fr(\()p Fk(x)p
Fr(\)\).)51 b(Giv)m(en)35 b(a)f(state)i Fk(s)30 b Fp(2)h
Fk(S)5 b Fr([)p Fk(V)20 b Fr(])34 b(and)g(a)g(subset)f
Fk(U)41 b Fp(\022)31 b Fk(V)54 b Fr(of)34 b(v)-5 b(ariables,)35
b(w)m(e)323 815 y(denote)h(b)m(y)f Fk(s)p Fr([)p Fk(U)10
b Fr(])34 b Fp(2)f Fk(S)5 b Fr([)p Fk(U)10 b Fr(])36
b(the)g(restriction)g(of)g Fk(s)f Fr(to)h(the)g(v)-5
b(ariables)36 b(in)f Fk(U)10 b Fr(:)51 b(precisely)-8
b(,)38 b Fk(s)p Fr([)p Fk(U)10 b Fr(])36 b(is)323 1040
y(de\014ned)i(b)m(y)h Fk(s)p Fr([)p Fk(U)10 b Fr(]\()p
Fk(x)p Fr(\))41 b(=)f Fk(s)p Fr(\()p Fk(x)p Fr(\))f(for)g(all)h
Fk(x)h Fp(2)e Fk(U)10 b Fr(.)68 b(F)-8 b(or)40 b(an)m(y)f(t)m(w)m(o)i
(set)f Fk(V)5 b(;)15 b(U)50 b Fr(of)39 b(v)-5 b(ariables,)42
b(and)323 1266 y(states)34 b Fk(s)c Fp(2)f Fk(S)5 b Fr([)p
Fk(V)20 b Fr(])34 b(and)e Fk(t)e Fp(2)f Fk(S)5 b Fr([)p
Fk(U)10 b Fr(],)35 b(w)m(e)e(write)h Fk(s)29 b Fp(')h
Fk(t)j Fr(if)g Fk(s)p Fr(\()p Fk(x)p Fr(\))d(=)f Fk(t)p
Fr(\()p Fk(x)p Fr(\))34 b(for)f(all)h(shared)e(v)-5 b(ariables)323
1492 y Fk(x)25 b Fp(2)g Fk(V)40 b Fp(\\)20 b Fk(U)10
b Fr(.)323 1845 y Fs(State)35 b(predicates.)91 b Fr(W)-8
b(e)33 b(assume)e(a)g(logical)j(language)f Fo(Lang)d
Fr(in)h(whic)m(h)g(assertions)h(ab)s(out)323 2071 y(the)37
b(v)-5 b(alues)37 b(of)g(the)g(v)-5 b(ariables)37 b(in)g
Fk(W)49 b Fr(can)37 b(b)s(e)f(written.)61 b(F)-8 b(or)37
b(example,)i(if)e(all)h(v)-5 b(ariables)37 b(are)323
2297 y(b)s(o)s(olean,)47 b(then)c Fo(Lang)f Fr(can)h(b)s(e)g(tak)m(en)h
(to)g(b)s(e)f(predicate)h(logic)h(with)e(the)h(addition)f(of)h(the)323
2523 y(quan)m(ti\014ers)35 b Fp(8)h Fr(and)f Fp(9)g Fr(o)m(v)m(er)i
(the)f(b)s(o)s(oleans.)57 b(W)-8 b(e)37 b(sa)m(y)g(that)f(a)g(form)m
(ula)g Fk(\036)f Fp(2)f Fo(Lang)h Fr(is)g Fl(over)46
b Fr(a)323 2748 y(set)39 b Fk(V)59 b Fr(of)39 b(v)-5
b(ariables)40 b(if)f(it)g(only)g(in)m(v)m(olv)m(es)i(v)-5
b(ariables)40 b(of)f Fk(V)20 b Fr(;)44 b(suc)m(h)38 b(a)i(form)m(ula)f
(is)g(also)h(called)323 2974 y(a)c Fl(pr)-5 b(e)g(dic)g(ate)46
b Fr(o)m(v)m(er)37 b Fk(V)21 b Fr(.)58 b(W)-8 b(e)37
b(denote)g(b)m(y)f Fo(Preds)o Fr([)p Fo(V)p Fr(])h(the)f(set)h(of)f
(all)h(form)m(ulas)g(o)m(v)m(er)g(the)g(set)g(of)323
3200 y(v)-5 b(ariable)39 b Fk(V)20 b Fr(.)66 b(Giv)m(en)39
b(a)g(form)m(ula)g Fk(\036)g Fr(o)m(v)m(er)h Fk(V)58
b Fr(and)38 b(a)h(state)h Fk(s)f Fp(2)g Fk(S)5 b Fr([)p
Fk(V)20 b Fr(],)41 b(w)m(e)e(write)g Fk(s)g Fp(j)-15
b Fr(=)38 b Fk(\036)h Fr(to)323 3426 y(denote)28 b(the)f(fact)h(that)g
Fk(\036)f Fr(is)h(true)f(under)f(the)h(in)m(terpretation)i(that)f
(assigns)f(to)h(ev)m(ery)g(v)-5 b(ariable)323 3652 y
Fk(x)36 b Fp(2)g Fk(V)58 b Fr(the)37 b(v)-5 b(alue)37
b Fk(s)p Fr(\()p Fk(x)p Fr(\).)62 b(In)36 b(particular,)j(a)f(form)m
(ula)f Fk(\036)g Fr(o)m(v)m(er)i Fk(V)57 b Fr(de\014nes)36
b(the)i(set)f(of)h(states)323 3877 y([)-15 b([)p Fk(\036)p
Fr(])g(])447 3891 y Fg(V)534 3877 y Fr(=)25 b Fp(f)p
Fk(s)g Fp(2)g Fk(S)5 b Fr([)p Fk(V)20 b Fr(])26 b Fp(j)f
Fk(s)g Fp(j)-15 b Fr(=)25 b Fk(\036)p Fp(g)p Fr(.)323
4203 y Fs(Illustration)34 b(1)108 b Fl(Consider)36 b(the)f(set)f(of)h
(b)-5 b(o)g(ole)g(an)37 b(variables)e Fk(V)49 b Fr(=)28
b Fp(f)p Fk(x;)15 b(y)s(;)g(z)t Fp(g)p Fl(.)49 b(The)35
b(set)f Fk(S)5 b Fr([)p Fk(V)21 b Fr(])323 4429 y Fl(c)-5
b(onsists)45 b(of)e Fr(2)833 4396 y Fe(3)918 4429 y Fr(=)i(8)f
Fl(elements.)75 b(If)43 b(we)h(take)f Fo(Lang)g Fl(to)h(b)-5
b(e)43 b(pr)-5 b(op)g(ositional)48 b(lo)-5 b(gic,)46
b(then)e(the)323 4655 y(formula)32 b Fk(x)17 b Fp(^)g(:)p
Fk(y)33 b Fl(is)e(satis\014e)-5 b(d)33 b(by)e(the)g(two)h(states)g
Fr(\()p Fk(x)26 b Fr(=)f Fq(t)o Fk(;)15 b(y)29 b Fr(=)c
Fq(f)p Fk(;)15 b(z)29 b Fr(=)c Fq(f)p Fr(\))p Fk(;)15
b Fr(\()p Fk(x)26 b Fr(=)f Fq(t)p Fk(;)15 b(y)29 b Fr(=)c
Fq(f)o Fk(;)15 b(z)30 b Fr(=)323 4880 y Fq(t)p Fr(\))45
b Fp(2)f Fk(S)5 b Fr([)p Fk(V)21 b Fr(])p Fl(.)74 b(If)44
b(we)f(take)h Fo(Lang)e Fl(to)i(b)-5 b(e)44 b(quanti\014e)-5
b(d)44 b(b)-5 b(o)g(ole)g(an)46 b(formulas,)i(then)c(the)f(formula)1931
5094 y Fr(12)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 323 -89 a Fp(9)p Fk(w)27 b(:)e
Fr(\()p Fk(w)40 b Fp(\021)d Fk(x)25 b Fp(^)f Fk(w)40
b Fp(\021)c(:)p Fk(y)28 b Fp(^)c Fk(w)40 b Fp(\021)d
Fk(z)t Fr(\))i Fl(is)g(satis\014e)-5 b(d)41 b(by)e(the)h(two)g(states)g
Fr(\()p Fk(x)d Fr(=)g Fq(t)p Fk(;)15 b(y)40 b Fr(=)d
Fq(f)o Fk(;)15 b(z)42 b Fr(=)323 137 y Fq(t)p Fr(\))p
Fk(;)15 b Fr(\()p Fk(x)26 b Fr(=)f Fq(f)o Fk(;)15 b(y)29
b Fr(=)c Fq(t)p Fk(;)15 b(z)30 b Fr(=)25 b Fq(f)o Fr(\))h
Fp(2)f Fk(S)5 b Fr([)p Fk(V)20 b Fr(])p Fl(.)p 1630 137
38 55 v 323 490 a Fs(T)-9 b(ransition)48 b(predicates.)91
b Fr(In)41 b(order)g(to)i(b)s(e)e(able)h(to)g(de\014ne)f
Fl(r)-5 b(elations,)47 b Fr(in)41 b(addition)h(to)323
716 y(sets)c(of)h(states,)i(w)m(e)e(in)m(tro)s(duce)f(the)h(follo)m
(wing)g(notation.)66 b(F)-8 b(or)39 b(eac)m(h)g(state)h(v)-5
b(ariable)39 b Fk(x)p Fr(,)h(w)m(e)323 942 y(in)m(tro)s(duce)c(a)h(new)
e(v)-5 b(ariable)1387 917 y Fd(e)1421 942 y Fk(x)36 b
Fr(\(read:)52 b(\\next)37 b Fk(x)p Fr("\),)i(with)d Fk(D)s
Fr(\()p Fk(x)p Fr(\))f(=)g Fk(D)s Fr(\()2945 917 y Fd(e)2978
942 y Fk(x)p Fr(\),)k(that)d(denotes)323 1168 y(the)41
b(v)-5 b(alue)42 b(of)f(the)h(state)g(v)-5 b(ariable)42
b Fk(x)f Fr(in)g(the)h(successor)f(state.)75 b(Giv)m(en)42
b(a)g(set)f Fk(V)64 b Fp(\022)43 b Fk(W)54 b Fr(of)323
1393 y(v)-5 b(ariables,)29 b(w)m(e)f(let)1016 1369 y
Fd(e)1049 1393 y Fk(V)46 b Fr(=)25 b Fp(f)1323 1369 y
Fd(e)1356 1393 y Fk(x)g Fp(j)g Fk(x)h Fp(2)f Fk(V)20
b Fp(g)28 b Fr(b)s(e)f(the)h(corresp)s(onding)f(set)h(of)g(next)g(v)-5
b(ariables.)41 b(W)-8 b(e)323 1619 y(denote)37 b(the)h(con)m(v)m(erse)g
(of)1298 1594 y Fd(e)1368 1619 y Fr(b)m(y)1534 1594 y
Fd(e)p 1509 1596 50 4 v 1604 1619 a Fr(\(read:)54 b(\\previous"\):)h
(precisely)-8 b(,)40 b(w)m(e)e(let)3137 1594 y Fd(e)p
3112 1596 V 16 w(e)3237 1619 y Fk(x)e Fr(=)g Fk(x)h Fr(for)323
1845 y(all)c(v)-5 b(ariables)32 b Fk(x)p Fr(.)46 b(Giv)m(en)32
b(a)h(predicate)f Fk(\036)p Fr(,)h(w)m(e)f(denote)h(b)m(y)2392
1820 y Fd(e)2425 1845 y Fk(\036)f Fr(the)g(result)g(of)g(replacing)h
(ev)m(ery)323 2071 y(v)-5 b(ariable)36 b Fk(x)f Fr(in)g
Fk(\036)h Fr(with)1202 2046 y Fd(e)1235 2071 y Fk(x)p
Fr(,)h(and)e(b)m(y)1696 2046 y Fd(e)p 1671 2048 V 1729
2071 a Fk(\036)g Fr(the)h(result)f(of)h(replacing)g(ev)m(ery)3019
2046 y Fd(e)3053 2071 y Fk(x)f Fr(in)g Fk(\036)h Fr(with)f
Fk(x)p Fr(;)323 2297 y(th)m(us,)581 2272 y Fd(e)p 556
2273 V 17 w(e)681 2297 y Fk(\036)25 b Fr(=)g Fk(\036)p
Fr(.)686 2523 y(In)32 b(a)h(transition)f(predicate)h(the)g(standard)e
(v)-5 b(ariables)33 b(refer)f(to)h(the)f(curren)m(t)g(state,)323
2748 y(and)25 b(the)h(next)g(v)-5 b(ariables)27 b(refer)e(to)i(the)f
(successor)g(state.)41 b(Giv)m(en)27 b(a)f(predicate)h
Fk(\032)f Fr(o)m(v)m(er)h Fk(V)k Fp([)3499 2723 y Fd(e)3533
2748 y Fk(U)10 b Fr(,)323 2974 y(and)24 b(states)i Fk(s)e
Fp(2)h Fk(S)5 b Fr([)p Fk(V)21 b Fr(])k(and)e Fk(t)j
Fp(2)e Fk(S)5 b Fr([)p Fk(U)10 b Fr(],)27 b(w)m(e)e(write)g(\()p
Fk(s;)15 b(t)p Fr(\))25 b Fp(j)-15 b Fr(=)25 b Fk(\032)g
Fr(to)g(denote)g(the)g(fact)h(that)f Fk(\032)f Fr(is)h(true)323
3200 y(when)31 b(ev)m(ery)i Fk(x)28 b Fp(2)f Fk(V)53
b Fr(has)31 b(v)-5 b(alue)33 b Fk(s)p Fr(\()p Fk(x)p
Fr(\),)g(and)e(ev)m(ery)2154 3175 y Fd(e)2188 3200 y
Fk(y)g Fp(2)2385 3175 y Fd(e)2419 3200 y Fk(U)42 b Fr(has)31
b(v)-5 b(alue)33 b Fk(t)p Fr(\()p Fk(y)s Fr(\).)46 b(A)32
b(transition)323 3426 y(predicate)f Fk(\032)25 b Fp(2)g
Fo(Preds)o Fr([)p Fo(V)p Fk(;)1260 3401 y Fd(e)1294 3426
y Fo(U)p Fr(])30 b(de\014nes)f(a)i(relation)1095 3743
y([)-15 b([)p Fk(\032)p Fr(])g(])1212 3761 y Fg(V)t(;)1311
3737 y Fd(e)1344 3761 y Fg(U)1428 3743 y Fr(=)25 b Fp(f)p
Fr(\()p Fk(s;)15 b(t)p Fr(\))26 b Fp(2)f Fk(S)5 b Fr([)p
Fk(V)21 b Fr(])f Fp(\002)g Fk(S)5 b Fr([)p Fk(U)10 b
Fr(])26 b Fp(j)f Fr(\()p Fk(s;)15 b(t)p Fr(\))26 b Fp(j)-15
b Fr(=)25 b Fk(\032)p Fp(g)p Fk(:)323 4068 y Fs(Illustration)34
b(2)110 b Fl(Consider)38 b(the)f(set)g(of)g(b)-5 b(o)g(ole)g(an)39
b(variables)f Fk(V)53 b Fr(=)32 b Fp(f)p Fk(x;)15 b(y)s
Fp(g)p Fl(.)55 b(The)37 b(tr)-5 b(ansition)323 4294 y(pr)g(e)g(dic)g
(ate)40 b Fr(\()777 4269 y Fd(e)810 4294 y Fk(x)c Fp(\021)f
Fk(y)s Fr(\))24 b Fp(^)g(:)1290 4269 y Fd(e)1323 4294
y Fk(y)41 b Fl(de\014nes)e(the)g(tr)-5 b(ansition)40
b(that)f(c)-5 b(opies)40 b(the)e(value)h(of)f Fk(y)j
Fl(into)e Fk(x)p Fl(,)323 4520 y(and)33 b(sets)g Fk(y)j
Fl(to)d Fq(f)o Fl(.)p 986 4520 38 55 v 1931 5094 a Fr(13)p
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 323 -89 a Fm(2.3)135 b(Sync)l(hronous)44
b(In)l(terfaces,)j(F)-11 b(ormally)686 227 y Fr(In)m(terfaces)32
b(are)f(de\014ned)e(as)h(follo)m(ws.)323 553 y Fs(De\014nition)35
b(1)27 b(\(In)m(terface)c(Mo)s(dules\))70 b Fl(A)23 b
Fr(In)m(terface)e(Mo)s(dule)i Fk(M)36 b Fr(=)24 b Fp(h)p
Fk(V)2963 520 y Fg(i)2942 580 y(M)3022 553 y Fk(;)15
b(V)3136 520 y Fg(o)3115 580 y(M)3194 553 y Fk(;)g(V)3308
520 y Fg(r)3287 580 y(M)3367 553 y Fk(;)g(\022)3453 520
y Fg(i)3450 580 y(M)3529 553 y Fk(;)g(\022)3615 520 y
Fg(o)3612 580 y(M)3691 553 y Fk(;)g(\034)3781 520 y Fg(i)3771
580 y(M)3850 553 y Fk(;)g(\034)3940 520 y Fg(o)3930 580
y(M)4009 553 y Fp(i)323 778 y Fl(c)-5 b(onsists)34 b(of)f(the)g(fol)5
b(lowing)33 b(elements:)459 1104 y Fp(\017)46 b Fl(A)34
b(set)h Fk(V)869 1071 y Fg(i)849 1131 y(M)963 1104 y
Fl(of)g Fr(input)d(v)-5 b(ariables,)36 b Fl(and)g(a)f(set)g
Fk(V)2201 1071 y Fg(o)2181 1131 y(M)2294 1104 y Fl(of)g
Fr(output)e(v)-5 b(ariables.)49 b Fl(The)35 b(two)h(sets)550
1330 y(must)d(b)-5 b(e)33 b(disjoint:)43 b Fk(V)1324
1297 y Fg(i)1303 1357 y(M)1403 1330 y Fp(\\)20 b Fk(V)1557
1297 y Fg(o)1537 1357 y(M)1641 1330 y Fr(=)26 b Fp(;)p
Fl(.)43 b(We)32 b(indic)-5 b(ate)34 b(by)f Fk(V)2533
1344 y Fg(M)2637 1330 y Fr(=)26 b Fk(V)2807 1297 y Fg(i)2787
1357 y(M)2886 1330 y Fp([)20 b Fk(V)3040 1297 y Fg(o)3020
1357 y(M)3132 1330 y Fl(the)33 b(set)g(of)g(al)5 b(l)550
1556 y(state)33 b(variables)h(of)f Fk(M)10 b Fl(.)459
1856 y Fp(\017)46 b Fl(A)26 b(set)h Fk(V)853 1823 y Fg(r)833
1883 y(M)939 1856 y Fl(of)f Fr(reserv)m(ed)f(v)-5 b(ariables,)28
b Fl(such)f(that)h Fk(V)2241 1823 y Fg(i)2221 1883 y(M)2307
1856 y Fp([)7 b Fk(V)2448 1823 y Fg(o)2428 1883 y(M)2532
1856 y Fp(\022)25 b Fk(V)2702 1823 y Fg(r)2681 1883 y(M)2760
1856 y Fl(.)40 b(The)27 b(set)g Fk(V)3217 1823 y Fg(r)3197
1883 y(M)3302 1856 y Fl(c)-5 b(ontains)550 2082 y(variables)40
b(that)h(ar)-5 b(e)40 b(r)-5 b(eserve)g(d)40 b(for)g(use)f(by)g(the)h
(mo)-5 b(dule,)42 b(and)f(c)-5 b(onstitute)40 b(the)f(mo)-5
b(dule)550 2308 y Fr(name)30 b(space.)459 2608 y Fp(\017)46
b Fl(A)32 b(pr)-5 b(e)g(dic)g(ate)35 b Fk(\022)1076 2575
y Fg(i)1073 2635 y(M)1177 2608 y Fp(2)25 b Fo(Preds)n
Fr([)p Fo(V)1574 2575 y Fc(i)1574 2631 y(M)1614 2608
y Fr(])33 b Fl(de\014ning)f(the)h(le)-5 b(gal)34 b(initial)f(values)g
(for)g(the)g(input)g(vari-)550 2834 y(ables.)459 3135
y Fp(\017)46 b Fl(A)32 b(pr)-5 b(e)g(dic)g(ate)35 b Fk(\022)1076
3102 y Fg(o)1073 3162 y(M)1177 3135 y Fp(2)25 b Fo(Preds)n
Fr([)p Fo(V)1574 3102 y Fc(o)1574 3157 y(M)1614 3135
y Fr(])33 b Fl(de\014ning)f(the)h(initial)h(values)e(of)h(the)g(output)
h(variables.)459 3435 y Fp(\017)46 b Fl(A)n(n)c Fr(input)e(transition)h
(predicate)j Fk(\034)1844 3402 y Fg(i)1834 3462 y(M)1955
3435 y Fp(2)f Fo(Preds)o Fr([)p Fo(V)2371 3449 y Fc(M)2437
3435 y Fp([)2558 3410 y Fd(e)2592 3435 y Fo(V)2640 3402
y Fc(i)2640 3458 y(M)2679 3435 y Fr(])p Fl(,)i(such)d(that)i(for)f(al)5
b(l)43 b Fk(s)f Fp(2)550 3661 y Fk(S)5 b Fr([)p Fk(V)689
3675 y Fg(M)768 3661 y Fr(])p Fl(,)47 b(ther)-5 b(e)44
b(is)g(some)h Fk(t)g Fp(2)g Fk(S)5 b Fr([)p Fk(V)1801
3628 y Fg(i)1781 3688 y(M)1860 3661 y Fr(])44 b Fl(such)g(that)h
Fr(\()p Fk(s;)15 b(t)p Fr(\))45 b Fp(j)-15 b Fr(=)46
b Fk(\034)2752 3628 y Fg(i)2742 3688 y(M)2820 3661 y
Fl(.)75 b(The)44 b(pr)-5 b(e)g(dic)g(ate)46 b Fk(\034)3561
3628 y Fg(i)3551 3688 y(M)550 3887 y Fl(sp)-5 b(e)g(ci\014es)34
b(what)g(ar)-5 b(e)33 b(the)g(le)-5 b(gal)34 b(value)e(changes)h(for)h
(the)f(input)g(variables.)459 4187 y Fp(\017)46 b Fl(A)n(n)38
b Fr(output)f(transition)h(predicate)i Fk(\034)1885 4154
y Fg(o)1875 4214 y(M)1990 4187 y Fp(2)d Fo(Preds)o Fr([)p
Fo(V)2400 4201 y Fc(M)2464 4187 y Fp([)2582 4162 y Fd(e)2616
4187 y Fo(V)2664 4154 y Fc(o)2664 4210 y(M)2703 4187
y Fr(])p Fl(,)j(such)g(that)g(for)f(al)5 b(l)40 b Fk(s)c
Fp(2)550 4413 y Fk(S)5 b Fr([)p Fk(V)689 4427 y Fg(M)768
4413 y Fr(])p Fl(,)47 b(ther)-5 b(e)44 b(is)g(some)h
Fk(t)g Fp(2)g Fk(S)5 b Fr([)p Fk(V)1801 4380 y Fg(o)1781
4440 y(M)1860 4413 y Fr(])44 b Fl(such)g(that)h Fr(\()p
Fk(s;)15 b(t)p Fr(\))45 b Fp(j)-15 b Fr(=)46 b Fk(\034)2752
4380 y Fg(o)2742 4440 y(M)2820 4413 y Fl(.)75 b(The)44
b(pr)-5 b(e)g(dic)g(ate)46 b Fk(\034)3561 4380 y Fg(o)3551
4440 y(M)550 4639 y Fl(sp)-5 b(e)g(ci\014es)34 b(how)f(the)g(mo)-5
b(dule)34 b(c)-5 b(an)34 b(up)-5 b(date)34 b(the)f(values)g(of)f(the)h
(output)h(variables.)p 3379 4639 38 55 v 1931 5094 a
Fr(14)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 323 -89 a Fr(Th)m(us,)34 b(asso)s(ciated)i
(with)e(a)h(mo)s(dule)f(is)h(a)f(set)h(of)g(initial)h(states,)h(a)e
(transition)f(relation,)j(and)323 137 y(a)d(language.)52
b(The)34 b(set)g(of)g(initial)h(states)g(consists)f(of)g(the)g(states)h
(that)f(corresp)s(ond)f(to)i(b)s(oth)323 363 y(p)s(ossible)30
b(initial)i(v)-5 b(alues)31 b(for)g(the)g(output)f(v)-5
b(ariables,)32 b(and)e(legal)j(initial)f(v)-5 b(alues)31
b(for)g(the)g(input)323 589 y(v)-5 b(ariables.)78 b(The)42
b(transition)h(relation)g(consists)g(of)g(the)g(state)h(transitions)f
(that)g(are)g(b)s(oth)323 815 y(p)s(ossible)36 b(for)h(the)g(output)g
(v)-5 b(ariables,)39 b(and)e(legal)i(for)d(the)i(input)e(v)-5
b(ariables.)61 b(The)36 b(language)323 1040 y(of)e(a)h(mo)s(dule)e
(consists)i(of)f(all)i(the)e(p)s(ossible)g(in\014nite)g(sequences)g(of)
h(states)g(that)g(satisfy)g(the)323 1266 y(initial)c(conditions)g(and)f
(the)h(transition)g(relations.)323 1592 y Fs(De\014nition)k(2)27
b(\(set)54 b(of)g([initial])h(states,)j(transition)d(relation,)k
(trace,)g(and)54 b(lan-)323 1818 y(guage\))79 b Fl(Consider)34
b(a)f(mo)-5 b(dule)34 b Fk(M)h Fr(=)25 b Fp(h)p Fk(V)1807
1785 y Fg(i)1786 1844 y(M)1865 1818 y Fk(;)15 b(V)1979
1785 y Fg(o)1958 1844 y(M)2038 1818 y Fk(;)g(V)2151 1785
y Fg(r)2131 1844 y(M)2210 1818 y Fk(;)g(\022)2296 1785
y Fg(i)2293 1844 y(M)2372 1818 y Fk(;)g(\022)2458 1785
y Fg(o)2455 1844 y(M)2534 1818 y Fk(;)g(\034)2624 1785
y Fg(i)2614 1844 y(M)2693 1818 y Fk(;)g(\034)2783 1785
y Fg(o)2773 1844 y(M)2853 1818 y Fp(i)p Fl(.)459 2118
y Fp(\017)46 b Fl(The)33 b(set)g(of)g Fr(states)g Fl(of)g
Fk(M)43 b Fl(is)32 b Fk(S)1636 2132 y Fg(M)1740 2118
y Fr(=)25 b Fk(S)5 b Fr([)p Fk(V)1975 2132 y Fg(M)2055
2118 y Fr(])p Fl(.)459 2419 y Fp(\017)46 b Fl(The)33
b(set)g(of)g Fr(initial)e(states)j Fl(of)f Fk(M)42 b
Fl(is)33 b Fk(I)1883 2433 y Fg(M)1987 2419 y Fr(=)25
b Fp(f)p Fk(s)h Fp(2)e Fk(S)2338 2433 y Fg(M)2442 2419
y Fp(j)i Fk(s)f Fp(j)-15 b Fr(=)25 b Fk(\022)2713 2386
y Fg(i)2710 2446 y(M)2809 2419 y Fp(^)19 b Fk(\022)2935
2386 y Fg(o)2932 2446 y(M)3011 2419 y Fp(g)p Fl(.)459
2719 y Fp(\017)46 b Fl(The)33 b Fr(transition)e(relation)j
Fl(of)f Fk(M)42 b Fl(is)33 b Fk(R)1891 2733 y Fg(M)1995
2719 y Fr(=)25 b Fp(f)p Fr(\()p Fk(s;)15 b(t)p Fr(\))26
b Fp(2)f Fk(S)2490 2733 y Fg(M)2589 2719 y Fp(\002)20
b Fk(S)2736 2733 y Fg(M)2840 2719 y Fp(j)25 b Fr(\()p
Fk(s;)15 b(t)p Fr(\))26 b Fp(j)-15 b Fr(=)25 b Fk(\034)3258
2686 y Fg(i)3248 2746 y(M)3347 2719 y Fp(^)20 b Fk(\034)3478
2686 y Fg(o)3468 2746 y(M)3547 2719 y Fp(g)p Fl(.)459
3020 y Fp(\017)46 b Fl(A)29 b Fr(path)h Fl(of)g Fk(M)40
b Fl(fr)-5 b(om)31 b Fk(s)25 b Fp(2)f Fk(S)1512 3034
y Fg(M)1621 3020 y Fl(is)30 b(an)g(in\014nite)g(se)-5
b(quenc)g(e)29 b Fk(s)c Fr(=)g Fk(s)2727 3034 y Fe(0)2766
3020 y Fk(;)15 b(s)2849 3034 y Fe(1)2889 3020 y Fk(;)g(s)2972
3034 y Fe(2)3011 3020 y Fk(;)g(:)g(:)g(:)31 b Fl(of)f
Fk(S)3347 3034 y Fg(M)3456 3020 y Fl(such)550 3245 y(that)k
Fr(\()p Fk(s)814 3260 y Fg(k)857 3245 y Fk(;)15 b(s)940
3260 y Fg(k)r Fe(+1)1072 3245 y Fr(\))26 b Fp(2)f Fk(R)1288
3259 y Fg(M)1399 3245 y Fl(for)34 b(al)5 b(l)33 b Fk(k)28
b(>)d Fr(0)p Fl(.)459 3546 y Fp(\017)46 b Fl(A)32 b Fr(trace)i
Fl(of)f Fk(M)42 b Fl(is)33 b(a)g(p)-5 b(ath)34 b Fk(s)1534
3560 y Fe(0)1574 3546 y Fk(;)15 b(s)1657 3560 y Fe(1)1696
3546 y Fk(;)g(s)1779 3560 y Fe(2)1818 3546 y Fk(;)g(:)g(:)g(:)34
b Fl(such)f(that)h Fk(s)2433 3560 y Fe(0)2497 3546 y
Fp(2)25 b Fk(I)2623 3560 y Fg(M)2702 3546 y Fl(.)459
3847 y Fp(\017)46 b Fl(The)33 b Fr(language)h Fl(of)f
Fk(M)42 b Fl(is)33 b(the)g(set)g Fk(L)1807 3865 y Fe(\()1838
3847 y Fk(M)10 b Fr(\))33 b Fl(c)-5 b(onsisting)34 b(of)f(al)5
b(l)33 b(tr)-5 b(ac)g(es)34 b(of)f Fk(M)10 b Fl(.)p 3195
3847 38 55 v 686 4172 a Fr(The)45 b(requiremen)m(t)g(on)g
Fk(\034)1599 4139 y Fg(i)1589 4199 y(M)1713 4172 y Fr(and)g
Fk(\034)1955 4139 y Fg(o)1945 4199 y(M)2069 4172 y Fr(ensures)f(that)i
(ev)m(ery)f(state)i(in)e Fk(S)3284 4186 y Fg(M)3408 4172
y Fr(has)f(a)323 4398 y(successor)26 b(that)h(satis\014es)g(b)s(oth)e
(the)i(input)e(and)h(output)g(transition)h(relations,)h(ensuring)d
(that)323 4624 y(from)h(ev)m(ery)h(state,)i(there)e(is)f(a)h
(transition)g(that)h(is)e(b)s(oth)g(p)s(ossible)g(for)g(the)h(mo)s
(dule,)g(and)f(legal)323 4849 y(for)k(the)h(en)m(vironmen)m(t.)41
b(Note)32 b(that)f(if)f Fk(\022)1723 4816 y Fg(i)1720
4876 y(M)1819 4849 y Fp(^)20 b Fk(\022)1946 4816 y Fg(o)1943
4876 y(M)2052 4849 y Fr(is)30 b(unsatis\014able,)g(then)g
Fk(L)2958 4868 y Fe(\()2990 4849 y Fk(M)10 b Fr(\))26
b(=)f Fp(;)p Fr(.)1931 5094 y(15)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 686 -89 a Fr(Sync)m(hronous)32
b(in)m(terface)i(mo)s(dules)d(as)i(de\014ned)f(ab)s(o)m(v)m(e)h(are)g
(an)g(example)g(of)g Fl(Mo)-5 b(or)g(e)323 137 y Fr(mo)s(dules,)26
b(in)f(whic)m(h)h(the)g(next)g(v)-5 b(alue)26 b(of)g(the)g(output)g
(and)f(in)m(ternal)h(v)-5 b(ariables)27 b(can)f(dep)s(end)e(on)323
363 y(the)32 b(curren)m(t)f(state,)j(but)d(not)h(on)g(the)g(next)g(v)-5
b(alue)32 b(of)g(the)h(input)d(v)-5 b(ariables.)46 b(F)-8
b(or)33 b(instance,)g(if)323 589 y(the)27 b(state)i(v)-5
b(ariables)28 b(of)g(a)f(mo)s(dule)g Fk(M)38 b Fr(are)27
b Fk(x)h Fr(\(input\))f(and)g Fk(y)j Fr(\(output\),)e(then)f(in)h(a)f
(transition)323 815 y(from)32 b Fk(s)27 b Fp(2)h Fk(S)755
829 y Fg(M)866 815 y Fr(to)33 b Fk(t)28 b Fp(2)g Fk(S)1185
829 y Fg(M)1296 815 y Fr(the)k(next)h(v)-5 b(alue)32
b Fk(t)p Fr(\()p Fk(y)s Fr(\))h(of)f Fk(y)j Fr(can)e(dep)s(end)d(on)i
(the)h(old)f(v)-5 b(alues)33 b Fk(s)p Fr(\()p Fk(x)p
Fr(\))323 1040 y(and)d Fk(s)p Fr(\()p Fk(y)s Fr(\),)g(but)g(not)h(on)f
(the)g(new)g(v)-5 b(alue)31 b Fk(t)p Fr(\()p Fk(x)p Fr(\))g(of)f(the)h
(input)e(v)-5 b(ariable.)323 1476 y Fm(2.4)135 b(Comp)t(osition)686
1792 y Fr(Tw)m(o)31 b(in)m(terface)i(mo)s(dules)d(are)h(compatible)h
(if)f(there)g(is)g(an)f(en)m(vironmen)m(t)i(in)e(whic)m(h)323
2018 y(they)21 b(can)h(w)m(ork)f(together.)39 b(Compatible)22
b(in)m(terfaces)g(on)f(comp)s(osing)g(lead)h(to)g(a)f(new)g
(satis\014able)323 2244 y(input)29 b(assumption)h(that)h(ensures)e
(that)i(no)g(lo)s(cal)g(error)f(state)i(is)e(reac)m(hable.)686
2470 y(Consider)22 b(the)h(example)h(in)e(\014gure)h(2.1.)39
b(The)22 b(adder)h Fo(Adder)e Fr(has)h(t)m(w)m(o)j(con)m(trol)f(inputs)
323 2695 y Fk(q)364 2709 y Fe(0)433 2695 y Fr(and)30
b Fk(q)651 2709 y Fe(1)690 2695 y Fr(,)g(data)i(inputs)d
Fk(i)1262 2709 y Fe(7)1317 2695 y Fp(\001)15 b(\001)g(\001)h
Fk(i)1469 2709 y Fe(0)1509 2695 y Fr(,)30 b(and)g(data)h(outputs)f
Fk(o)2326 2709 y Fe(7)2381 2695 y Fp(\001)15 b(\001)g(\001)h
Fk(o)2546 2709 y Fe(0)2585 2695 y Fr(.)459 2996 y Fp(\017)46
b Fr(When)35 b Fk(q)861 3010 y Fe(0)933 2996 y Fr(=)d
Fk(q)1077 3010 y Fe(1)1149 2996 y Fr(=)g(1,)37 b(the)e(adder)f(lea)m(v)
m(es)k(the)d(input)f(unc)m(hanged:)49 b(the)35 b(next)g(v)-5
b(alue)36 b(of)550 3222 y Fk(o)594 3236 y Fe(7)649 3222
y Fp(\001)15 b(\001)g(\001)h Fk(o)814 3236 y Fe(0)884
3222 y Fr(is)30 b(equal)h(to)g Fk(i)1357 3236 y Fe(7)1412
3222 y Fp(\001)15 b(\001)g(\001)h Fk(i)1564 3236 y Fe(0)1604
3222 y Fr(.)459 3522 y Fp(\017)46 b Fr(When)26 b Fk(q)852
3536 y Fe(0)917 3522 y Fr(=)f(0)h(and)g Fk(q)1298 3536
y Fe(1)1363 3522 y Fr(=)e(1,)k(the)f(next)g(outputs)f(are)g(giv)m(en)i
(b)m(y)e([)p Fk(o)2812 3489 y Ff(0)2812 3547 y Fe(7)2867
3522 y Fp(\001)15 b(\001)g(\001)h Fk(o)3032 3489 y Ff(0)3032
3547 y Fe(0)3072 3522 y Fr(])25 b(=)g([)p Fk(i)3274 3536
y Fe(7)3330 3522 y Fp(\001)15 b(\001)g(\001)h Fk(i)3482
3536 y Fe(0)3522 3522 y Fr(])c(+)550 3748 y(1)p Fo(mod)p
Fr(2)784 3715 y Fe(8)824 3748 y Fr(,)29 b(where)g(primed)e(v)-5
b(ariables)30 b(denote)g(the)f(v)-5 b(alues)29 b(at)h(the)f(next)g(clo)
s(c)m(k)i(cycle,)f(and)550 3974 y([)p Fk(o)619 3941 y
Ff(0)619 3998 y Fe(7)674 3974 y Fp(\001)15 b(\001)g(\001)h
Fk(o)839 3941 y Ff(0)839 3998 y Fe(0)879 3974 y Fr(])30
b(is)h(the)f(in)m(teger)i(enco)s(ded)e(in)g(binary)g(b)m(y)g
Fk(o)2396 3941 y Ff(0)2396 3998 y Fe(7)2451 3974 y Fp(\001)15
b(\001)g(\001)h Fk(o)2616 3941 y Ff(0)2616 3998 y Fe(0)2655
3974 y Fr(.)459 4274 y Fp(\017)46 b Fr(When)30 b Fk(q)856
4288 y Fe(1)920 4274 y Fr(=)25 b(0)31 b(and)f Fk(q)1310
4288 y Fe(0)1374 4274 y Fr(=)25 b(1,)31 b(w)m(e)g(ha)m(v)m(e)h([)p
Fk(o)1984 4242 y Ff(0)1984 4299 y Fe(7)2039 4274 y Fp(\001)15
b(\001)g(\001)h Fk(o)2204 4242 y Ff(0)2204 4299 y Fe(0)2243
4274 y Fr(])26 b(=)f([)p Fk(i)2446 4288 y Fe(7)2501 4274
y Fp(\001)15 b(\001)g(\001)h Fk(i)2653 4288 y Fe(0)2693
4274 y Fr(])k Fp(\000)g Fr(1)p Fo(mod)p Fr(2)3063 4242
y Fe(8)3103 4274 y Fr(.)459 4575 y Fp(\017)46 b Fr(The)40
b(adder)g(is)h(designed)f(with)g(the)h(assumption)f(that)h
Fk(q)2614 4589 y Fe(1)2693 4575 y Fr(and)f Fk(q)2921
4589 y Fe(0)3001 4575 y Fr(are)h(not)f(b)s(oth)g(0:)550
4801 y(hence,)31 b(the)f(input)g(transition)h(relation)g(of)g
Fo(Adder)e Fr(states)i(that)g Fk(q)2847 4768 y Ff(0)2844
4825 y Fe(0)2883 4801 y Fk(q)2927 4768 y Ff(0)2924 4825
y Fe(1)2989 4801 y Fp(6)p Fr(=)25 b(00.)1931 5094 y(16)p
eop end
%%Page: 17 17
TeXDict begin 17 16 bop 686 -89 a Fr(In)37 b(order)g(to)h(cycle)h(b)s
(et)m(w)m(een)f(adding)f(0)p Fk(;)15 b Fr(+1)p Fk(;)g
Fp(\000)p Fr(1,)40 b(the)e(con)m(trol)h(inputs)d Fk(q)3290
-75 y Fe(0)3366 -89 y Fr(and)h Fk(q)3591 -75 y Fe(1)323
137 y Fr(are)31 b(connected)g(to)g(the)g(outputs)f Fk(q)1542
151 y Fe(1)1611 137 y Fr(and)g Fk(q)1829 151 y Fe(0)1898
137 y Fr(of)h(a)g(t)m(w)m(o-bit)h(coun)m(t-to-zero)h(coun)m(ter)f
Fo(Counter)n Fr(.)323 363 y(The)42 b(coun)m(ter)i(has)f(only)g(one)g
(input,)i Fo(cl)p Fr(:)66 b(when)42 b Fo(cl)j Fr(=)h(0,)h(then)c
Fk(q)2786 330 y Ff(0)2783 387 y Fe(1)2822 363 y Fk(q)2866
330 y Ff(0)2863 387 y Fe(0)2948 363 y Fr(=)j(11;)k(otherwise,)323
589 y([)p Fk(q)392 556 y Ff(0)389 613 y Fe(1)428 589
y Fk(q)472 556 y Ff(0)469 613 y Fe(0)508 589 y Fr(])26
b(=)f([)p Fk(q)721 603 y Fe(1)760 589 y Fk(q)801 603
y Fe(0)840 589 y Fr(])20 b Fp(\000)g Fr(1)p Fo(mod)p
Fr(4.)686 815 y(When)35 b(the)f(coun)m(ter)i(is)e(connected)i(to)f(the)
g(adder,)g(the)g(join)m(t)g(system)f(can)h(tak)m(e)h(a)323
1040 y(transition)f(to)g(a)g(state)h(where)e Fk(q)1472
1054 y Fe(1)1511 1040 y Fk(q)1552 1054 y Fe(0)1623 1040
y Fr(=)d(00,)37 b(violating)f(the)f(adder's)f(input)f(assumptions.)53
b(In)323 1266 y(spite)32 b(of)g(this,)h(the)f(coun)m(ter)h(and)f(the)g
(adder)f(are)i(compatible,)h(since)e(there)h(is)f(a)g(w)m(a)m(y)h(to)g
(use)323 1492 y(them)24 b(together:)40 b(to)25 b(a)m(v)m(oid)h(the)f
(incompatible)h(transition,)g(it)g(su\016ces)e(to)h(assert)g
Fo(cl)g Fr(=)g(0)g(early)323 1718 y(enough)31 b(in)g(the)g(coun)m
(t-to-zero)k(cycle)d(of)g(the)g(coun)m(ter.)44 b(T)-8
b(o)32 b(re\015ect)g(this,)f(when)g(w)m(e)h(comp)s(ose)323
1944 y Fo(Counter)21 b Fr(and)h Fo(Adder)o Fr(,)i(w)m(e)g(syn)m
(thesize)g(for)e(their)h(comp)s(osition)h Fo(Counter)n
Fp(k)p Fo(Adder)e Fr(a)h(new)g(input)323 2170 y(assumption,)38
b(that)g(ensures)e(that)h(the)g(input)f(assumptions)h(of)g(b)s(oth)f
Fo(Counter)f Fr(and)h Fo(Adder)323 2395 y Fr(are)31 b(satis\014ed.)686
2621 y(T)-8 b(o)27 b(determine)f(the)g(new)g(input)f(assumption,)h(w)m
(e)h Fs(solv)m(e)k(a)e(game)d Fr(b)s(et)m(w)m(een)h(Input,)323
2847 y(whic)m(h)38 b(c)m(ho)s(oses)i(the)f(next)g(v)-5
b(alues)40 b(of)f Fo(cl)f Fr(and)h Fk(i)2045 2861 y Fe(7)2099
2847 y Fp(\001)15 b(\001)g(\001)i Fk(i)2252 2861 y Fe(0)2291
2847 y Fr(,)42 b(and)c(Output,)i(whic)m(h)f(c)m(ho)s(oses)h(the)323
3073 y(next)h(v)-5 b(alues)41 b(of)g Fk(q)974 3087 y
Fe(0)1013 3073 y Fk(;)15 b(q)1094 3087 y Fe(1)1133 3073
y Fr(,)44 b(and)c Fk(o)1433 3087 y Fe(7)1488 3073 y Fp(\001)15
b(\001)g(\001)h Fk(o)1653 3087 y Fe(0)1693 3073 y Fr(.)72
b(The)40 b(goal)i(of)f(Input)f(is)h(to)g(a)m(v)m(oid)i(a)e(transition)g
(to)323 3299 y Fk(q)364 3313 y Fe(1)403 3299 y Fk(q)444
3313 y Fe(0)508 3299 y Fr(=)25 b(00.)40 b(A)m(t)26 b(the)g(states)g
(where)f Fk(q)1589 3313 y Fe(1)1628 3299 y Fk(q)1669
3313 y Fe(0)1734 3299 y Fr(=)g(01,)i(Input)d(can)i(win)e(if)i
Fo(cl)e Fr(=)h(0,)i(since)f(w)m(e)g(will)g(ha)m(v)m(e)323
3524 y Fk(q)367 3491 y Ff(0)364 3549 y Fe(1)403 3524
y Fk(q)447 3491 y Ff(0)444 3549 y Fe(0)508 3524 y Fr(=)f(11;)31
b(but)e(Input)f(cannot)i(win)e(if)i Fo(cl)24 b Fr(=)h(1.)41
b(By)30 b(c)m(ho)s(osing)g Fo(cl)2648 3491 y Ff(0)2696
3524 y Fr(=)25 b(0,)30 b(Input)e(can)i(also)g(win)323
3750 y(from)h(the)g(states)h(where)f Fk(q)1260 3764 y
Fe(1)1299 3750 y Fk(q)1340 3764 y Fe(0)1406 3750 y Fr(=)26
b(10.)45 b(Finally)-8 b(,)33 b(Input)d(can)h(alw)m(a)m(ys)i(win)e(from)
f Fk(q)3130 3764 y Fe(1)3169 3750 y Fk(q)3210 3764 y
Fe(0)3276 3750 y Fr(=)c(11,)33 b(for)323 3976 y(all)j
Fo(cl)549 3943 y Ff(0)573 3976 y Fr(.)54 b(Th)m(us,)36
b(w)m(e)f(asso)s(ciate)i(with)e Fo(Counter)n Fp(k)p Fo(Adder)f
Fr(a)i(new)e(input)h(assumption)f(enco)s(ded)323 4202
y(b)m(y)k(the)h(transition)f(relation)i(requiring)e(that)h(whenev)m(er)
f Fk(q)2434 4216 y Fe(1)2473 4202 y Fk(q)2514 4216 y
Fe(0)2591 4202 y Fr(=)h(10,)i(then)d Fo(cl)3167 4169
y Ff(0)3229 4202 y Fr(=)g(0.)65 b(The)323 4428 y(input)37
b(requiremen)m(t)i Fk(q)1128 4442 y Fe(1)1167 4428 y
Fk(q)1208 4442 y Fe(0)1286 4428 y Fp(6)p Fr(=)g(00)h(of)e(the)h(adder)f
(giv)m(es)i(rise,)h(in)e(the)f(comp)s(osite)i(system,)h(to)323
4654 y(the)f(requiremen)m(t)f(that)h(the)g(reset-to-1)i(o)s(ccurs)d
(early)i(in)e(the)h(coun)m(t-to-zero)i(cycle)f(of)f(the)323
4879 y(coun)m(ter.)p 684 4879 37 55 v 1931 5094 a(17)p
eop end
%%Page: 18 18
TeXDict begin 18 17 bop 323 -89 a Fv(2.4.1)112 b(Comp)s(osition)39
b(and)f(Compatibilit)m(y)-9 b(,)38 b(F)-9 b(ormally)686
196 y Fr(Tw)m(o)33 b(Sync)m(hronous)e(in)m(terfaces)i
Fk(M)42 b Fr(and)32 b Fk(N)42 b Fr(are)32 b Fl(c)-5 b(omp)g(osable)42
b Fr(if)32 b Fk(V)3043 163 y Fg(o)3023 223 y(M)3124 196
y Fp(\\)21 b Fk(V)3279 163 y Fg(o)3259 223 y(N)3354 196
y Fr(=)28 b Fp(;)p Fr(.)46 b(If)323 422 y Fk(M)c Fr(and)32
b Fk(N)42 b Fr(are)33 b(comp)s(osable,)h(w)m(e)e(merge)h(them)g(in)m
(to)g(a)g(single)g(in)m(terface)h Fk(P)45 b Fr(as)33
b(follo)m(ws.)48 b(W)-8 b(e)323 647 y(let)33 b Fk(V)530
615 y Fg(o)509 674 y(P)597 647 y Fr(=)28 b Fk(V)770 615
y Fg(o)749 674 y(M)850 647 y Fp([)21 b Fk(V)1006 615
y Fg(o)985 674 y(N)1085 647 y Fr(and)32 b Fk(V)1337 615
y Fg(i)1317 674 y(P)1405 647 y Fr(=)c(\()p Fk(V)1613
615 y Fg(i)1592 674 y(M)1693 647 y Fp([)21 b Fk(V)1849
615 y Fg(i)1828 674 y(N)1896 647 y Fr(\))h Fp(n)g Fk(V)2093
615 y Fg(o)2073 674 y(P)2132 647 y Fr(.)47 b(The)32 b(output)g(b)s(eha)
m(vior)h(of)f Fk(P)46 b Fr(is)32 b(simply)323 873 y(the)e(join)m(t)g
(output)g(b)s(eha)m(vior)f(of)h Fk(M)40 b Fr(and)29 b
Fk(N)10 b Fr(,)30 b(since)g(eac)m(h)h(in)m(terface)g(is)f(free)g(to)h
(c)m(ho)s(ose)f(ho)m(w)g(to)323 1099 y(up)s(date)f(its)i(output)f(v)-5
b(ariables:)41 b(hence,)30 b Fk(\022)1788 1066 y Fg(o)1785
1126 y(P)1869 1099 y Fr(=)25 b Fk(\022)2011 1066 y Fg(o)2008
1126 y(M)2107 1099 y Fp(^)19 b Fk(\022)2233 1066 y Fg(o)2230
1126 y(N)2327 1099 y Fr(and)30 b Fk(\034)2554 1066 y
Fg(o)2544 1126 y(P)2627 1099 y Fr(=)25 b Fk(\034)2773
1066 y Fg(o)2763 1126 y(M)2862 1099 y Fp(^)19 b Fk(\034)2992
1066 y Fg(o)2982 1126 y(N)3049 1099 y Fr(.)41 b(On)29
b(the)i(other)323 1325 y(hand,)26 b(w)m(e)g(cannot)g(simply)g(adopt)g
(the)g(symmetrical)g(de\014nition)g(for)f(the)h(input)f(assumptions.)
323 1551 y(A)39 b(syn)m(tactic)i(reason)e(is)f(that)i
Fk(\022)1466 1518 y Fg(i)1463 1578 y(M)1567 1551 y Fp(^)26
b Fk(\022)1700 1518 y Fg(i)1697 1578 y(N)1802 1551 y
Fr(and)39 b Fk(\034)2038 1518 y Fg(i)2028 1578 y(M)2132
1551 y Fp(^)26 b Fk(\034)2269 1518 y Fg(i)2259 1578 y(N)2364
1551 y Fr(ma)m(y)40 b(con)m(tain)g(v)-5 b(ariables)39
b(in)g(\()p Fk(V)3507 1518 y Fg(o)3487 1578 y(P)3546
1551 y Fr(\))3581 1518 y Ff(0)3605 1551 y Fr(.)323 1777
y(But)30 b(a)g(deep)s(er)g(reason)g(is)g(that)g(w)m(e)h(ma)m(y)f(need)g
(to)h(strengthen)e(the)i(input)e(assumptions)g(of)h Fk(P)323
2002 y Fr(further,)f(in)i(order)f(to)h(ensure)f(that)h(the)g(input)f
(assumptions)f(of)i Fk(M)41 b Fr(and)30 b Fk(N)40 b Fr(hold.)h(If)30
b(w)m(e)i(can)323 2228 y(\014nd)23 b(suc)m(h)i(a)g(further)f
(strengthening)h Fk(\022)1682 2195 y Fg(i)1734 2228 y
Fr(and)f Fk(\034)1955 2195 y Fg(i)1984 2228 y Fr(,)i(then)e
Fk(M)35 b Fr(and)25 b Fk(N)35 b Fr(are)25 b(said)g(to)g(b)s(e)g
Fl(c)-5 b(omp)g(atible,)323 2454 y Fr(and)34 b Fk(P)45
b Fr(=)32 b Fk(M)10 b Fp(k)p Fk(N)45 b Fr(with)34 b Fk(\022)1228
2421 y Fg(i)1225 2481 y(P)1318 2454 y Fr(and)g Fk(\034)1549
2421 y Fg(i)1539 2481 y(P)1632 2454 y Fr(b)s(eing)g(the)h(w)m(eak)m
(est)h(suc)m(h)e(strengthenings;)j(otherwise,)323 2680
y(w)m(e)30 b(sa)m(y)g(that)h Fk(M)39 b Fr(and)29 b Fk(N)40
b Fr(are)30 b(incompatible,)h(and)e Fk(M)10 b Fp(k)p
Fk(N)40 b Fr(is)30 b(unde\014ned.)38 b(Hence,)31 b(informally)-8
b(,)323 2906 y Fk(M)40 b Fr(and)30 b Fk(N)40 b Fr(are)31
b(compatible)h(if)e(they)h(can)f(b)s(e)g(used)g(together)h(under)e
(some)i(assumptions.)323 3231 y Fs(De\014nition)k(3)27
b(\(Compatibilit)m(y)46 b(and)g(comp)s(osition)h(of)g(sync)m(hronous)h
(in)m(terfaces\))323 3457 y Fl(F)-7 b(or)27 b(any)f(two)h(synchr)-5
b(onous)28 b(interfac)-5 b(es)26 b Fk(M)36 b Fl(and)27
b Fk(N)10 b Fl(,)26 b(we)g(say)h(that)g Fk(M)35 b Fl(and)27
b Fk(N)36 b Fl(ar)-5 b(e)26 b Fr(comp)s(osable)323 3683
y Fl(if)f Fk(V)477 3650 y Fg(o)457 3710 y(M)539 3683
y Fp(\\)t Fk(V)677 3650 y Fg(o)657 3710 y(N)750 3683
y Fr(=)f Fp(;)p Fl(.)40 b(If)25 b Fk(M)35 b Fl(and)26
b Fk(N)35 b Fl(ar)-5 b(e)26 b(c)-5 b(omp)g(osable,)29
b(let)d Fk(V)2278 3650 y Fg(o)2258 3710 y(P)2342 3683
y Fr(=)f Fk(V)2511 3650 y Fg(o)2491 3710 y(M)2574 3683
y Fp([)t Fk(V)2711 3650 y Fg(o)2692 3710 y(N)2758 3683
y Fl(,)i Fk(V)2886 3650 y Fg(i)2866 3710 y(P)2950 3683
y Fr(=)e(\()p Fk(V)3154 3650 y Fg(i)3134 3710 y(M)3217
3683 y Fp([)t Fk(V)3355 3650 y Fg(i)3335 3710 y(N)3402
3683 y Fr(\))t Fp(n)t Fk(V)3564 3650 y Fg(o)3543 3710
y(P)3602 3683 y Fl(,)323 3909 y Fk(V)376 3923 y Fg(P)460
3909 y Fr(=)g Fk(V)629 3876 y Fg(o)609 3936 y(P)688 3909
y Fp([)19 b Fk(V)842 3876 y Fg(i)821 3936 y(P)880 3909
y Fl(,)33 b Fk(\022)987 3876 y Fg(o)984 3936 y(P)1067
3909 y Fr(=)25 b Fk(\022)1209 3876 y Fg(o)1206 3936 y(M)1305
3909 y Fp(^)20 b Fk(\022)1432 3876 y Fg(o)1429 3936 y(N)1496
3909 y Fl(,)32 b(and)i Fk(\034)1783 3876 y Fg(o)1773
3936 y(P)1856 3909 y Fr(=)25 b Fk(\034)2002 3876 y Fg(o)1992
3936 y(M)2091 3909 y Fp(^)20 b Fk(\034)2222 3876 y Fg(o)2212
3936 y(N)2279 3909 y Fl(.)686 4134 y(The)25 b(interfac)-5
b(es)24 b Fk(M)34 b Fl(and)25 b Fk(N)34 b Fl(ar)-5 b(e)25
b Fr(compatible)g Fl(\(written)g Fk(M)10 b Fp(o)q(o)p
Fk(N)g Fl(\))24 b(if)g(they)g(ar)-5 b(e)25 b(c)-5 b(omp)g(os-)323
4360 y(able,)27 b(and)f(if)f(ther)-5 b(e)26 b(ar)-5 b(e)27
b(pr)-5 b(e)g(dic)g(ates)27 b Fk(\022)1603 4327 y Fg(i)1656
4360 y Fl(on)f Fk(V)1852 4327 y Fg(i)1832 4387 y(P)1916
4360 y Fl(and)g Fk(\034)2135 4327 y Fg(i)2189 4360 y
Fl(on)g Fk(V)2365 4374 y Fg(P)2428 4360 y Fp([)t Fr(\()p
Fk(V)2601 4327 y Fg(i)2581 4387 y(P)2640 4360 y Fr(\))2675
4327 y Ff(0)2724 4360 y Fl(such)f(that)i(\(i\))e Fk(\022)3275
4327 y Fg(i)3328 4360 y Fl(is)g(satis-)323 4586 y(\014able;)h(\(ii\))e
Fp(8)p Fk(V)839 4600 y Fg(P)897 4586 y Fk(:)p Fp(9)p
Fr(\()p Fk(V)1081 4553 y Fg(i)1061 4613 y(P)1120 4586
y Fr(\))1155 4553 y Ff(0)1178 4586 y Fk(:\034)1253 4553
y Fg(i)1305 4586 y Fl(holds;)k(\(iii\))47 b(for)24 b(al)5
b(l)23 b Fk(s)2063 4600 y Fe(0)2102 4586 y Fk(;)15 b(s)2185
4600 y Fe(1)2225 4586 y Fk(;)g(s)2308 4600 y Fe(2)2347
4586 y Fk(;)g(:)g(:)g(:)27 b Fp(2)e Fo(Traces)n Fr(\()p
Fk(V)3000 4553 y Fg(i)2979 4613 y(P)3038 4586 y Fk(;)15
b(V)3152 4553 y Fg(o)3131 4613 y(P)3190 4586 y Fk(;)g(\022)3276
4553 y Fg(i)3304 4586 y Fk(;)g(\022)3390 4553 y Fg(o)3387
4613 y(P)3446 4586 y Fk(;)g(\034)3536 4553 y Fg(i)3565
4586 y Fk(;)g(\034)3655 4553 y Fg(o)3645 4613 y(P)3703
4586 y Fr(\))323 4812 y Fl(we)33 b(have)g Fk(s)710 4826
y Fe(0)774 4812 y Fp(j)-15 b Fr(=)25 b Fk(\022)926 4779
y Fg(i)923 4839 y(M)1022 4812 y Fp(^)20 b Fk(\022)1149
4779 y Fg(i)1146 4839 y(N)1245 4812 y Fl(and,)34 b(for)f(al)5
b(l)33 b Fk(k)28 b Fp(\025)d Fr(0)p Fl(,)33 b Fr(\()p
Fk(s)2080 4827 y Fg(k)2123 4812 y Fk(;)15 b(s)2206 4827
y Fg(k)r Fe(+1)2339 4812 y Fr(\))25 b Fp(j)-15 b Fr(=)25
b Fk(\034)2555 4779 y Fg(i)2545 4839 y(M)2644 4812 y
Fp(^)20 b Fk(\034)2775 4779 y Fg(i)2765 4839 y(N)2832
4812 y Fl(.)1931 5094 y Fr(18)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop 686 -89 a Fl(The)27 b Fr(comp)s(osition)f
Fk(P)39 b Fr(=)25 b Fk(M)10 b Fp(k)p Fk(N)36 b Fl(is)26
b(de\014ne)-5 b(d)27 b(if)f(and)h(only)g(if)f Fk(M)10
b Fp(oo)p Fk(N)g Fl(,)27 b(in)f(which)h(c)-5 b(ase)27
b Fk(P)323 137 y Fl(is)k(obtaine)-5 b(d)34 b(by)d(taking)h(for)g(the)g
(input)g(pr)-5 b(e)g(dic)g(ate)34 b Fk(\022)2122 104
y Fg(i)2119 164 y(P)2209 137 y Fl(and)f(for)f(the)g(input)g(tr)-5
b(ansition)34 b(r)-5 b(elation)323 363 y Fk(\034)373
330 y Fg(i)363 390 y(P)454 363 y Fl(the)33 b(we)-5 b(akest)33
b(pr)-5 b(e)g(dic)g(ates)35 b(such)e(that)h(the)f(ab)-5
b(ove)33 b(c)-5 b(ondition)35 b(holds.)p 2806 363 38
55 v 323 798 a Fm(2.5)135 b(Comp)t(osition)46 b(Algorithm)686
1114 y Fr(T)-8 b(o)30 b(compute)g Fk(M)10 b Fp(k)p Fk(N)g
Fr(,)31 b(w)m(e)f(consider)f(a)h(game)h(b)s(et)m(w)m(een)f(Input)e(and)
h(Output)g Fs(??)p Fr(.)41 b(A)m(t)323 1340 y(eac)m(h)g(round)e(of)h
(the)g(game,)k(Output)39 b(c)m(ho)s(oses)i(new)f(v)-5
b(alues)40 b(for)g(the)h(output)e(v)-5 b(ariables)41
b Fk(V)3591 1307 y Fg(o)3571 1367 y(P)323 1565 y Fr(according)35
b(to)f Fk(\034)900 1532 y Fg(o)890 1592 y(P)949 1565
y Fr(;)i(sim)m(ultaneously)f(and)e(indep)s(enden)m(tly)-8
b(,)34 b(Input)f(c)m(ho)s(oses)i(\(unconstrained\))323
1791 y(new)42 b(v)-5 b(alues)44 b(for)f(the)g(input)f(v)-5
b(ariables)44 b Fk(V)1845 1758 y Fg(i)1825 1818 y(P)1883
1791 y Fr(.)79 b(The)42 b(goal)j(of)e(Input)f(is)h(to)h(ensure)e(that)i
(the)323 2017 y(resulting)39 b(b)s(eha)m(vior)g(satis\014es)h
Fk(\022)1476 1984 y Fg(i)1473 2044 y(M)1577 2017 y Fp(^)26
b Fk(\022)1710 1984 y Fg(i)1707 2044 y(P)1804 2017 y
Fr(at)40 b(the)g(initial)g(state,)j(and)38 b Fk(\034)2855
1984 y Fg(i)2845 2044 y(M)2950 2017 y Fp(^)26 b Fk(\034)3087
1984 y Fg(i)3077 2044 y(N)3183 2017 y Fr(at)39 b(all)h(state)323
2243 y(transitions.)69 b(If)39 b(Input)f(can)i(win)f(the)h(game,)j
(then)c Fk(M)50 b Fr(and)39 b Fk(N)49 b Fr(are)40 b(compatible,)k(and)
39 b(the)323 2469 y(most)f(general)g(strategy)h(for)e(Input)f(will)i
(giv)m(e)h(rise)f(to)g Fk(\022)2347 2436 y Fg(i)2344
2496 y(P)2440 2469 y Fr(and)f Fk(\034)2674 2436 y Fg(i)2664
2496 y(P)2722 2469 y Fr(;)42 b(otherwise,)d Fk(M)48 b
Fr(and)37 b Fk(N)323 2695 y Fr(are)c(incompatible.)50
b(The)33 b(algorithm)h(for)f(computing)g Fk(\022)2308
2662 y Fg(i)2305 2722 y(P)2396 2695 y Fr(and)g Fk(\034)2626
2662 y Fg(i)2616 2722 y(P)2707 2695 y Fr(pro)s(ceeds)g(b)m(y)g
(computing)323 2920 y(iterativ)m(e)d(appro)m(ximations)e(to)g
Fk(\034)1476 2887 y Fg(i)1466 2947 y(P)1525 2920 y Fr(,)g(and)f(to)h
(the)g(set)g Fk(C)34 b Fr(of)28 b(states)g(from)f(whic)m(h)h(Input)e
(can)h(win)323 3146 y(the)j(game.)42 b(W)-8 b(e)32 b(let)f
Fk(C)1105 3160 y Fe(0)1170 3146 y Fr(=)25 b Fq(t)30 b
Fr(and,)g(for)g Fk(k)e Fp(\025)d Fr(0:)513 3458 y Fh(e)-53
b Fk(\034)551 3473 y Fg(k)r Fe(+1)709 3458 y Fr(=)25
b Fp(8)p Fr(\()p Fk(V)964 3420 y Fg(o)944 3480 y(P)1002
3458 y Fr(\))1037 3420 y Ff(0)1061 3458 y Fk(:)1086 3330
y Fh(\022)1153 3458 y Fk(\034)1203 3420 y Fg(o)1193 3480
y(P)1277 3458 y Fp(!)g Fr(\()p Fk(\034)1478 3420 y Fg(i)1468
3480 y(M)1567 3458 y Fp(^)20 b Fk(\034)1698 3420 y Fg(i)1688
3480 y(N)1775 3458 y Fp(^)g Fk(C)1928 3420 y Ff(0)1921
3481 y Fg(k)1964 3458 y Fr(\))1999 3330 y Fh(\023)2248
3458 y Fk(C)2313 3473 y Fg(k)r Fe(+1)2471 3458 y Fr(=)25
b Fk(C)2632 3473 y Fg(k)2695 3458 y Fp(^)20 b(9)p Fr(\()p
Fk(V)2935 3420 y Fg(i)2915 3480 y(P)2973 3458 y Fr(\))3008
3420 y Ff(0)3032 3458 y Fk(:)r Fh(e)-53 b Fk(\034)3097
3473 y Fg(k)r Fe(+1)3230 3458 y Fk(:)188 b Fr(\(2.1\))323
3770 y(Note)25 b(that)h Fh(e)-53 b Fk(\034)766 3785 y
Fg(k)r Fe(+1)922 3770 y Fr(is)24 b(a)g(predicate)g(on)g
Fk(V)1656 3737 y Fg(o)1636 3797 y(P)1701 3770 y Fp([)7
b Fk(V)1842 3737 y Fg(i)1822 3797 y(P)1887 3770 y Fp([)g
Fr(\()p Fk(V)2063 3737 y Fg(i)2043 3797 y(P)2102 3770
y Fr(\))2137 3737 y Ff(0)2160 3770 y Fr(.)39 b(Hence,)28
b Fh(e)-53 b Fk(\034)2554 3785 y Fg(k)r Fe(+1)2710 3770
y Fr(ensures)23 b(that,)i(regardless)323 3995 y(of)41
b(ho)m(w)g Fk(V)710 3962 y Fg(o)690 4022 y(P)790 3995
y Fr(are)g(c)m(hosen,)k(from)40 b Fk(C)1572 4010 y Fg(k)r
Fe(+1)1746 3995 y Fr(w)m(e)h(ha)m(v)m(e)i(that)e(\(i\))h(for)f(one)g
(step,)j Fk(\034)3063 3962 y Fg(i)3053 4022 y(M)3173
3995 y Fr(and)c Fk(\034)3410 3962 y Fg(i)3400 4022 y(N)3508
3995 y Fr(are)323 4221 y(satis\014ed;)f(and)c(\(ii\))i(the)g(step)f
(leads)g(to)h Fk(C)1821 4236 y Fg(k)1863 4221 y Fr(.)58
b(Th)m(us,)37 b(indicating)f(b)m(y)g Fk(C)2835 4235 y
Ff(\003)2909 4221 y Fr(=)f(lim)3141 4236 y Fg(k)r Ff(!1)3340
4221 y Fk(C)3405 4236 y Fg(k)3483 4221 y Fr(and)325 4447
y Fh(e)-53 b Fk(\034)363 4461 y Ff(\003)436 4447 y Fr(=)34
b(lim)667 4462 y Fg(k)r Ff(!1)868 4447 y Fh(e)-53 b Fk(\034)906
4462 y Fg(k)984 4447 y Fr(the)36 b(\014xp)s(oin)m(ts)f(of)h(\(2.1\))h
(w)m(e)f(ha)m(v)m(e)h(that)f Fk(C)2475 4461 y Ff(\003)2550
4447 y Fr(represen)m(ts)g(the)g(set)g(of)g(states)323
4673 y(from)21 b(whic)m(h)g(Input)f(can)i(win)f(the)h(game,)j(and)e
Fh(e)-53 b Fk(\034)1954 4687 y Ff(\003)2014 4673 y Fr(represen)m(ts)22
b(the)g(most)f(lib)s(eral)h(Input)e(strategy)323 4899
y(for)27 b(winning)f(the)i(game.)40 b(This)27 b(suggests)h(us)e(to)i
(tak)m(e)h Fk(\034)2246 4866 y Fg(i)2236 4926 y(P)2320
4899 y Fr(=)e Fh(e)-54 b Fk(\034)2455 4913 y Ff(\003)2495
4899 y Fr(.)39 b(Ho)m(w)m(ev)m(er,)30 b(this)e(is)f(not)g(alw)m(a)m(ys)
1931 5094 y(19)p eop end
%%Page: 20 20
TeXDict begin 20 19 bop 323 -89 a Fr(the)34 b(w)m(eak)m(est)i(c)m
(hoice,)g(as)e(required)g(b)m(y)f(De\014nition)i(3:)48
b(a)34 b(w)m(eak)m(er)h(c)m(hoice)h(is)e Fk(\034)3074
-122 y Fg(i)3064 -62 y(P)3153 -89 y Fr(=)d Fp(:)p Fk(C)3381
-75 y Ff(\003)3442 -89 y Fp(_)25 b Fh(e)-54 b Fk(\034)3565
-75 y Ff(\003)3605 -89 y Fr(,)323 137 y(or)39 b(equiv)-5
b(alen)m(tly)41 b Fk(\034)1007 104 y Fg(i)997 164 y(P)1095
137 y Fr(=)f Fk(C)1271 151 y Ff(\003)1350 137 y Fp(!)j
Fh(e)-54 b Fk(\034)1521 151 y Ff(\003)1561 137 y Fr(.)67
b(Con)m(trary)39 b(to)h Fk(\034)2221 104 y Fg(i)2211
164 y(P)2309 137 y Fr(=)i Fh(e)-53 b Fk(\034)2460 151
y Ff(\003)2499 137 y Fr(,)42 b(this)d(w)m(eak)m(er)i(c)m(hoice)g
(ensures)323 363 y(that)i(the)g(in)m(terface)i Fk(P)55
b Fr(is)43 b(non-blo)s(c)m(king.)79 b(W)-8 b(e)44 b(remark)e(that)i
(the)f(c)m(hoices)h Fk(\034)3150 330 y Fg(i)3140 390
y(P)3245 363 y Fr(=)k Fh(e)-54 b Fk(\034)3401 377 y Ff(\003)3483
363 y Fr(and)323 589 y Fk(\034)373 556 y Fg(i)363 616
y(P)471 589 y Fr(=)50 b Fk(C)657 603 y Ff(\003)747 589
y Fp(!)i Fh(e)-53 b Fk(\034)928 603 y Ff(\003)1013 589
y Fr(di\013er)45 b(only)g(at)h(non-reac)m(hable)h(states.)87
b(Since)45 b(the)h(state-space)h(of)f Fk(P)323 815 y
Fr(is)f(\014nite,)k(b)m(y)c(monotonicit)m(y)j(of)d(\(2.1\))i(w)m(e)f
(can)f(compute)h(the)f(\014xp)s(oin)m(t)g Fk(C)3063 829
y Ff(\003)3148 815 y Fr(and)h Fh(e)-53 b Fk(\034)3379
829 y Ff(\003)3464 815 y Fr(in)44 b(a)323 1040 y(\014nite)38
b(n)m(um)m(b)s(er)e(of)i(iterations.)65 b(Finally)-8
b(,)42 b(w)m(e)c(de\014ne)f(the)h(input)f(initial)i(condition)g(of)f
Fk(P)51 b Fr(b)m(y)323 1266 y Fk(\022)369 1233 y Fg(i)366
1293 y(P)449 1266 y Fr(=)25 b Fp(8)p Fk(V)669 1233 y
Fg(o)707 1266 y Fk(:)p Fr(\()p Fk(\022)813 1233 y Fg(o)810
1293 y(P)895 1266 y Fp(!)g Fr(\()p Fk(\022)1092 1233
y Fg(i)1089 1293 y(M)1175 1266 y Fp(^)8 b Fk(\022)1290
1233 y Fg(i)1287 1293 y(N)1361 1266 y Fp(^)g Fk(C)1495
1280 y Ff(\003)1534 1266 y Fr(\)\).)39 b(The)24 b(follo)m(wing)h
(algorithm)g(summarizes)f(these)h(results.)323 1575 y
Fs(Algorithm)35 b(1)97 b Fl(Given)24 b(two)g(c)-5 b(omp)g(osable)26
b(Synchr)-5 b(onous)26 b(interfac)-5 b(es)24 b Fk(M)34
b Fl(and)24 b Fk(N)10 b Fl(,)25 b(let)f Fk(C)3388 1589
y Fe(0)3452 1575 y Fr(=)h Fq(t)p Fl(,)323 1801 y(and)h(for)g
Fk(k)j(>)c Fr(0)p Fl(,)i(let)e(the)h(pr)-5 b(e)g(dic)g(ates)28
b Fk(C)1641 1816 y Fg(k)1709 1801 y Fl(and)g Fh(e)-53
b Fk(\034)1918 1816 y Fg(k)1986 1801 y Fl(b)-5 b(e)25
b(as)h(de\014ne)-5 b(d)26 b(by)g(\(2.1\).)40 b(L)-5 b(et)28
b Fh(e)-53 b Fk(\034)3062 1815 y Ff(\003)3126 1801 y
Fr(=)25 b(lim)3349 1816 y Fg(k)r Ff(!1)3550 1801 y Fh(e)-54
b Fk(\034)3587 1816 y Fg(k)323 2027 y Fl(and)32 b Fk(C)563
2041 y Ff(\003)628 2027 y Fr(=)25 b(lim)850 2042 y Fg(k)r
Ff(!1)1049 2027 y Fk(C)1114 2042 y Fg(k)1157 2027 y Fl(;)31
b(the)h(limits)g(c)-5 b(an)32 b(b)-5 b(e)32 b(c)-5 b(ompute)g(d)33
b(with)f(a)g(\014nite)g(numb)-5 b(er)31 b(of)h(iter)-5
b(ations,)323 2253 y(and)43 b(let)g Fk(\022)693 2220
y Fg(i)690 2275 y Ff(\003)773 2253 y Fr(=)g Fp(8)p Fk(V)1011
2220 y Fg(o)1049 2253 y Fk(:)1074 2125 y Fh(\022)1141
2253 y Fk(\022)1187 2220 y Fg(o)1184 2280 y(P)1286 2253
y Fp(!)g Fr(\()p Fk(\022)1501 2220 y Fg(i)1498 2280 y(M)1605
2253 y Fp(^)27 b Fk(\022)1739 2220 y Fg(i)1736 2280 y(N)1830
2253 y Fp(^)g Fk(C)1983 2267 y Ff(\003)2023 2253 y Fr(\))2058
2125 y Fh(\023)2125 2253 y Fl(.)72 b(Then)43 b(the)g(interfac)-5
b(es)43 b Fk(M)53 b Fl(and)43 b Fk(N)53 b Fl(ar)-5 b(e)323
2479 y Fr(compatible)34 b Fl(i\013)e Fk(\022)952 2446
y Fg(i)949 2501 y Ff(\003)1020 2479 y Fl(is)h(satis\014able;)g(in)g
(this)g(c)-5 b(ase)33 b(their)g(c)-5 b(omp)g(osition)35
b Fk(P)k Fr(=)25 b Fk(M)10 b Fp(k)p Fk(N)43 b Fl(is)32
b(given)g(by)468 2745 y Fk(V)541 2712 y Fg(o)521 2772
y(P)663 2745 y Fr(=)25 b Fk(V)832 2712 y Fg(o)812 2772
y(M)911 2745 y Fp([)20 b Fk(V)1065 2712 y Fg(o)1045 2772
y(N)1732 2745 y Fk(\034)1782 2712 y Fg(o)1772 2772 y(P)1913
2745 y Fr(=)25 b Fk(\034)2059 2712 y Fg(o)2049 2772 y(M)2148
2745 y Fp(^)20 b Fk(\034)2279 2712 y Fg(o)2269 2772 y(N)2688
2745 y Fk(\022)2734 2712 y Fg(o)2731 2772 y(P)2872 2745
y Fr(=)25 b Fk(\022)3014 2712 y Fg(o)3011 2772 y(M)3110
2745 y Fp(^)20 b Fk(\022)3237 2712 y Fg(o)3234 2772 y(N)468
2971 y Fk(V)541 2938 y Fg(i)521 2998 y(P)663 2971 y Fr(=)25
b(\()p Fk(V)867 2938 y Fg(i)847 2998 y(M)946 2971 y Fp([)20
b Fk(V)1100 2938 y Fg(i)1080 2998 y(N)1147 2971 y Fr(\))h
Fp(n)g Fk(V)1342 2938 y Fg(o)1732 2971 y Fk(\034)1782
2938 y Fg(i)1772 2998 y(P)1913 2971 y Fr(=)k Fk(C)2074
2985 y Ff(\003)2139 2971 y Fp(!)j Fh(e)-54 b Fk(\034)2295
2985 y Ff(\003)2688 2971 y Fk(\022)2734 2938 y Fg(i)2731
2998 y(P)2872 2971 y Fr(=)25 b Fk(\022)3014 2938 y Fg(i)3011
2993 y Ff(\003)3051 2971 y Fk(:)p 3447 2971 38 55 v 323
3318 a Fs(Implemen)m(tation)46 b(T)-9 b(ec)m(hnique.)91
b Fr(T)-8 b(o)41 b(obtain)g(an)f(e\016cien)m(t)i(implemen)m(tation,)i
(b)s(oth)c(the)323 3544 y(input)21 b(and)h(the)h(output)g(transition)g
(relations)g(should)f(b)s(e)g(represen)m(ted)h(using)f(a)h(conjunctiv)m
(ely)323 3770 y(decomp)s(osed)43 b(represen)m(tation,)k(where)c(a)g
(relation)h Fk(\034)53 b Fr(is)43 b(represen)m(ted)g(b)m(y)g(a)h(list)g
(of)f(BDDs)323 3995 y Fk(\034)363 4009 y Fe(1)402 3995
y Fk(;)15 b(\034)482 4009 y Fe(2)522 3995 y Fk(;)g(:)g(:)g(:)h(;)f
(\034)763 4009 y Fg(n)841 3995 y Fr(suc)m(h)30 b(that)h
Fk(\034)k Fr(=)25 b Fp(^)1475 3962 y Fg(n)1475 4021 y(i)p
Fe(=1)1593 3995 y Fk(\034)1633 4009 y Fg(i)1661 3995
y Fr(.)41 b(When)30 b(computing)h Fk(P)38 b Fr(=)26 b
Fk(M)10 b Fp(k)p Fk(N)g Fr(,)31 b(the)f(list)h(for)g
Fk(\034)3415 3962 y Fg(o)3405 4022 y(P)3494 3995 y Fr(can)323
4221 y(b)s(e)37 b(readily)i(obtained)f(b)m(y)g(concatenating)j(the)d
(lists)h(for)f Fk(\034)2424 4188 y Fg(o)2414 4248 y(M)2531
4221 y Fr(and)g Fk(\034)2766 4188 y Fg(o)2756 4248 y(N)2822
4221 y Fr(.)65 b(Moreo)m(v)m(er,)42 b(assume)323 4447
y(that)26 b Fk(\034)565 4414 y Fg(o)555 4474 y(P)639
4447 y Fr(is)f(represen)m(ted)g(as)1310 4379 y Fh(V)1386
4405 y Fg(n)1386 4474 y(i)p Fe(=1)1519 4447 y Fk(\034)1569
4414 y Fg(o)1559 4473 y(i)1608 4447 y Fr(,)h(and)f(that)h
Fk(\034)2073 4414 y Fg(i)2063 4474 y(M)2152 4447 y Fp(^)10
b Fk(\034)2273 4414 y Fg(i)2263 4474 y(N)2355 4447 y
Fr(is)26 b(represen)m(ted)f(as)3027 4379 y Fh(V)3103
4405 y Fg(m)3103 4474 y(j)t Fe(=1)3245 4447 y Fk(\034)3295
4414 y Fg(o)3285 4473 y(j)3333 4447 y Fr(.)39 b(Giv)m(en)323
4673 y Fk(C)388 4688 y Fg(k)430 4673 y Fr(,)49 b(from)44
b(\(2.1\))j(the)e(conjunctiv)m(e)g(decomp)s(osition)h(is)2352
4605 y Fh(V)2427 4631 y Fg(m)p Fe(+1)2427 4700 y Fg(j)t
Fe(=1)2602 4673 y Fh(e)-54 b Fk(\034)2639 4688 y Fg(k)r
Fe(+1)p Fg(;j)2868 4673 y Fr(for)47 b Fh(e)-53 b Fk(\034)3062
4688 y Fg(k)r Fe(+1)3239 4673 y Fr(b)m(y)45 b(taking)325
4899 y Fh(e)-53 b Fk(\034)363 4914 y Fg(k)r Fe(+1)p Fg(;m)p
Fe(+1)693 4899 y Fr(=)25 b Fp(:9)p Fr(\()p Fk(V)1008
4866 y Fg(o)989 4926 y(P)1047 4899 y Fr(\))1082 4866
y Ff(0)1106 4899 y Fk(:)p Fr(\()p Fk(\034)1216 4866 y
Fg(o)1206 4926 y(P)1270 4899 y Fp(^)5 b(:)p Fk(C)1469
4866 y Ff(0)1462 4926 y Fg(k)1504 4899 y Fr(\))24 b(and,)g(for)e(1)k
Fp(\024)f Fk(j)31 b Fp(\024)25 b Fk(m)p Fr(,)f(b)m(y)f(taking)k
Fh(e)-54 b Fk(\034)2782 4914 y Fg(k)r Fe(+1)p Fg(;j)2992
4899 y Fr(=)25 b Fp(:9)p Fr(\()p Fk(V)3308 4866 y Fg(o)3288
4926 y(P)3346 4899 y Fr(\))3381 4866 y Ff(0)3405 4899
y Fk(:)p Fr(\()p Fk(\034)3515 4866 y Fg(o)3505 4926 y(P)3569
4899 y Fp(^)1931 5094 y Fr(20)p eop end
%%Page: 21 21
TeXDict begin 21 20 bop 323 -89 a Fp(:)p Fk(\034)434
-122 y Fg(i)424 -63 y(j)462 -89 y Fr(\).)39 b(Also)24
b Fk(C)824 -74 y Fg(k)r Fe(+1)982 -89 y Fr(=)h Fp(9)p
Fr(\()p Fk(V)1237 -122 y Fg(i)1217 -62 y(P)1276 -89 y
Fr(\))1311 -122 y Ff(0)1334 -89 y Fk(:)1374 -157 y Fh(V)1451
-131 y Fg(m)p Fe(+1)1451 -62 y Fg(j)t Fe(=1)1625 -89
y Fh(e)-53 b Fk(\034)1663 -74 y Fg(k)r Fe(+1)p Fg(;j)1847
-89 y Fr(.)39 b(All)24 b(these)h(op)s(erations)f(can)g(b)s(e)g(p)s
(erformed)e(using)323 137 y(image)42 b(computation)f(tec)m(hniques.)73
b(On)39 b(reac)m(hing)j Fk(k)i Fr(suc)m(h)c(that)h Fk(C)2759
152 y Fg(k)2845 137 y Fp(\021)h Fk(C)3023 152 y Fg(k)r
Fe(+1)3155 137 y Fr(,)i(the)d(BDDs)325 363 y Fh(e)-53
b Fk(\034)363 378 y Fg(k)r(;)p Fe(1)460 363 y Fk(;)15
b(:)g(:)g(:)i(;)g Fh(e)-53 b Fk(\034)702 378 y Fg(k)r(;m)p
Fe(+1)953 363 y Fr(form)37 b(a)g(conjunctiv)m(e)h(decomp)s(osition)f
(for)i Fh(e)-54 b Fk(\034)2536 377 y Ff(\003)2576 363
y Fr(.)59 b(Since)37 b(the)g(t)m(w)m(o)h(transition)323
589 y(relations)30 b Fh(e)-54 b Fk(\034)728 603 y Ff(\003)794
589 y Fr(and)26 b Fk(C)1032 603 y Ff(\003)1097 589 y
Fp(!)h Fh(e)-53 b Fk(\034)1253 603 y Ff(\003)1318 589
y Fr(di\013er)27 b(only)f(for)h(the)f(b)s(eha)m(vior)h(at)g(non-reac)m
(hable)h(states,)h(w)m(e)e(can)323 815 y(tak)m(e)32 b(directly)f
Fk(\034)901 782 y Fg(i)891 842 y(P)975 815 y Fr(=)c Fh(e)-54
b Fk(\034)1110 829 y Ff(\003)1150 815 y Fr(,)30 b(obtaining)h(again)h
(a)e(conjunctiv)m(e)i(decomp)s(osition.)1931 5094 y(21)p
eop end
%%Page: 22 22
TeXDict begin 22 21 bop 323 742 a Fn(Chapter)65 b(3)323
1406 y Ft(Chai)323 1964 y Fr(This)29 b(c)m(hapter)i(starts)f(with)g(a)h
(tutorial)g(in)m(tro)s(duction)f(to)h Fq(Chai)46 b Fr(then)30
b(rev)m(eals)h(the)g(details)g(of)323 2189 y(in)m(terface)f(mo)s(dule)d
(implemen)m(tation)j(and)d(usage)i(.)40 b(Finally)29
b(it)g(presen)m(ts)f(the)g(algorithm)i(used)323 2415
y(for)g(in)m(terface)i(comp)s(osition.)323 2851 y Fm(3.1)135
b(The)45 b(Starting)g(P)l(oin)l(t-)h(Mo)t(c)l(ha)686
3167 y Fq(Chai)28 b Fr(is)e(based)h(on)f Fq(Mocha)41
b Fr(it)27 b(extends)g(the)g(functionalit)m(y)h(of)f
Fq(Mocha)e Fr(and)i(adds)323 3393 y(an)j(input)f(language)j(to)f(suit)g
(in)m(terfaces.)686 3619 y Fq(Mocha)c Fr(is)g(an)h(in)m(teractiv)m(e)i
(en)m(vironmen)m(t)e(for)g(mo)s(dular)e(v)m(eri\014cation)j(of)f
(heteroge-)323 3844 y(neous)22 b(systems.)38 b Fq(Mocha)22
b Fr(relies)i(on)e(the)h(mo)s(delling)h(framew)m(ork)e(of)h(reactiv)m
(e)i(mo)s(dules)e(unlik)m(e)323 4070 y(traditional)39
b(use)e(of)h(state)h(transition)f(graphs.)61 b(Its)38
b(input)e(language)j(is)f(mac)m(hine)g(readable)323 4296
y(v)-5 b(arian)m(t)35 b(of)g(reactiv)m(e)i(mo)s(dules.)52
b(In)33 b Fq(Chai)i Fr(w)m(e)g(extend)g Fq(Rea)n(ctive)e(Modules)f
Fr(to)j(in)m(terface)323 4522 y(mo)s(dules)29 b(as)i(explained)g(in)f
(next)g(c)m(hapter.)686 4748 y Fq(Mocha)g Fr(supp)s(orts)e(the)j(follo)
m(wing)h(functionalities:)1931 5094 y(22)p eop end
%%Page: 23 23
TeXDict begin 23 22 bop 459 -89 a Fp(\017)46 b Fr(Sim)m(ulation,)31
b(including)f(games)i(b)s(et)m(w)m(een)f(the)f(user)g(and)g(the)g(sim)m
(ulator)459 212 y Fp(\017)46 b Fr(En)m(umerativ)m(e)31
b(and)f(sym)m(b)s(olic)h(in)m(v)-5 b(arian)m(t)32 b(c)m(hec)m(king)g
(and)d(error-trace)j(generation)459 512 y Fp(\017)46
b Fr(Comp)s(ositional)31 b(re\014nemen)m(t)f(c)m(hec)m(king)459
813 y Fp(\017)46 b Fr(A)-8 b(TL)30 b(mo)s(del)h(c)m(hec)m(king)459
1113 y Fp(\017)46 b Fr(reac)m(habilit)m(y)33 b(analysis)e(of)f
(real-time)i(systems)686 1414 y(The)45 b(basic)g(structuring)g(units,)j
(or)d(the)h(molecules)g(of)f(a)g(system,)50 b(are)45
b Fl(r)-5 b(e)g(active)323 1640 y(mo)g(dules)p Fr(.)58
b(The)35 b(mo)s(dules)g(ha)m(v)m(e)i(a)f(w)m(ell-de\014ned)f(in)m
(terface)i(giv)m(en)g(b)m(y)f(a)g(set)g(of)f Fl(external)k(\(or)323
1866 y(input\))28 b Fr(v)-5 b(ariables)25 b(and)e(a)i(set)g(of)f
Fl(interfac)-5 b(e)28 b(\(or)f(output\))f Fr(v)-5 b(ariables.)39
b(A)24 b(mo)s(dule)g(ma)m(y)g(also)i(ha)m(v)m(e)323 2091
y(a)32 b(set)h(of)f Fl(private)h Fr(v)-5 b(ariables.)47
b(All)33 b(v)-5 b(ariables)32 b(are)h(t)m(yp)s(ed,)f(and)g
Fq(Mocha)o Fr(supp)s(orts)e(a)j(standard)323 2317 y(set)39
b(of)h(\014nite)f(and)f(in\014nite)h(t)m(yp)s(es,)j(suc)m(h)c(as)i(b)s
(o)s(oleans)f(and)f(in)m(tegers.)68 b(A)39 b(mo)s(dule)g(is)g(built)323
2543 y(from)23 b Fl(atoms)p Fr(,)j(eac)m(h)e(grouping)f(together)i(a)e
(set)h(of)g Fl(c)-5 b(ontr)g(ol)5 b(le)-5 b(d)35 b Fr(\(in)m(terface)25
b(or)e(priv)-5 b(ate\))24 b(v)-5 b(ariables)323 2769
y(with)23 b(exclusiv)m(e)i(up)s(dating)d(righ)m(ts.)39
b Fl(Up)-5 b(dating)33 b Fr(is)23 b(de\014ned)g(b)m(y)g(t)m(w)m(o)i
(nondeterministic)e(guarded)323 2995 y(commands:)36 b(an)23
b Fl(initialization)31 b Fr(command)22 b(and)g(an)h Fl(up)-5
b(date)30 b Fr(command.)38 b(In)22 b(these)h(commands)323
3221 y(unprimed)30 b(v)-5 b(ariables,)34 b(suc)m(h)e(as)g
Fk(x)p Fr(,)h(refer)f(to)i(the)e(old)h(v)-5 b(alue)32
b(of)h(the)f(corresp)s(onding)g(v)-5 b(ariable,)323 3446
y(and)22 b(primed)f(v)-5 b(ariables,)25 b(suc)m(h)d(as)h
Fk(x)1541 3413 y Ff(0)1564 3446 y Fr(,)h(refer)e(to)i(the)e(new)g(v)-5
b(alue)23 b(of)g(the)f(corresp)s(onding)g(v)-5 b(ariable.)323
3672 y(An)25 b(atom)h(is)g(said)g(to)g Fl(await)35 b
Fr(another)26 b(atom)h(if)e(its)h(initialization)j(or)c(up)s(date)g
(commands)g(refer)323 3898 y(to)e(primed)e(v)-5 b(ariables)23
b(that)g(are)g(con)m(trolled)g(b)m(y)g(the)f(other)h(atom.)39
b(The)21 b(v)-5 b(ariables)23 b(c)m(hange)h(their)323
4124 y(v)-5 b(alues)33 b(o)m(v)m(er)h(time)f(in)f(a)h(sequence)g(of)g
Fl(r)-5 b(ounds)p Fr(.)48 b(The)32 b(\014rst)g(round)f(consists)i(of)g
(the)g(execution)323 4350 y(of)j(the)g(initialization)j(command)c(of)h
(eac)m(h)h(atom,)i(and)c(the)h(subsequen)m(t)f(rounds)f(consist)j(of)
323 4576 y(the)28 b(execution)i(of)e(the)h(up)s(date)f(command)g(of)g
(eac)m(h)i(atom,)g(in)e(an)g(order)g(consisten)m(t)i(with)e(the)323
4801 y(a)m(w)m(ait)34 b(dep)s(endencies.)46 b(A)33 b(round)e(of)i(an)f
(atom)h(is)g(therefore)g(a)g Fl(subr)-5 b(ound)43 b Fr(of)32
b(the)h(mo)s(dule.)46 b(If)1931 5094 y(23)p eop end
%%Page: 24 24
TeXDict begin 24 23 bop 323 -89 a Fr(no)30 b(guard)f(of)h(the)g(up)s
(date)f(command)g(is)h(enabled,)g(then)g(the)g(atom)h(idles,)f(i.e.,)h
(the)f(v)-5 b(alues)31 b(of)323 137 y(the)f(v)-5 b(ariables)31
b(do)g(not)f(c)m(hange.)686 320 y(Mo)s(dules)k(can)g(b)s(e)g
Fl(c)-5 b(omp)g(ose)g(d)46 b Fr(if)34 b(they)g(ha)m(v)m(e)h(disjoin)m
(t)f(sets)g(of)g(in)m(terface)i(v)-5 b(ariables,)323
502 y(and)33 b(their)i(union)e(of)h(atom)h(sets)g(do)s(es)f(not)g(con)m
(tain)i(a)e(circular)h(a)m(w)m(ait)h(dep)s(endency)-8
b(.)51 b(Giv)m(en)323 685 y(a)38 b(sp)s(eci\014cation)h
Fo(SystemSpec)c Fr(of)j(a)h(system)f(and)f(mo)s(del)h(of)g(user)f(b)s
(eha)m(vior)i(as)f Fo(UserSpec)p Fr(,)323 868 y(sp)s(eci\014cation)31
b(mo)s(dule)f Fo(Spec)f Fr(is)h(de\014ned)f(as:)323 977
y Fo(module)46 b(Spec)h(is)g(UserSpec)e(||)i(SystemSpec)323
1199 y Fr(F)-8 b(or)31 b(encapsulation)h Fq(Rea)n(ctiveModules)c
Fr(allo)m(ws)k(the)f Fl(hiding)g Fr(of)g(in)m(terface)i(v)-5
b(ariables,)31 b(and)323 1425 y(for)i(instan)m(tiation)i(it)f(allo)m
(ws)h(the)f Fl(r)-5 b(enaming)34 b Fr(of)g(in)m(terface)h(and)e
(external)h(v)-5 b(ariables.)51 b(Hiding)323 1651 y(and)30
b(parallel)h(comp)s(osition)g(p)s(ermit)f(hierarc)m(hical)i
(descriptions)e(of)h(complex)g(systems.)323 2087 y Fm(3.2)135
b(T)-11 b(utorial)46 b(In)l(tro)t(duction)f(to)g(Chai)686
2403 y Fr(Chai)39 b(is)g(a)m(v)-5 b(ailable)41 b(for)d(free)h(public)f
(do)m(wnload)h(from)f([DL03a)r(].)66 b(It)38 b(requires)h(the)323
2629 y(GLU)30 b(pac)m(k)-5 b(age)33 b(and)d(Tcl7.4.)323
2988 y Fv(3.2.1)112 b(Mo)s(delling)39 b(with)e(Chai)686
3273 y Fr(Consider)28 b(mo)s(delling)g(of)h(a)f(2-bit)h(do)m(wn)f(coun)
m(ter)h(\014gure)f(3.1)h(as)f(an)h(in)m(terface)g(mo)s(d-)323
3499 y(ule.)44 b(The)31 b(coun)m(ter)h(coun)m(ts)g(from)f(3)g(to)h(0)g
(on)g(its)f(normal)h(run.)42 b(Whenev)m(er)32 b(the)g(reset)g(is)f
(high)323 3724 y(the)d(coun)m(ter)h(resets)g(itself)g(to)g(start)f(do)m
(wn)g(coun)m(ting)h(from)f(3.)40 b(Th)m(us)27 b(w)m(e)i(ha)m(v)m(e)h
(input)d(as)h(reset)323 3950 y(and)i(output)g(as)g(the)h(coun)m(ting)g
(bits)f Fk(b)p Fr(0)h(and)f Fk(b)p Fr(1.)686 4176 y(T)-8
b(o)31 b(mo)s(del)f(as)g(an)h(in)m(terface)g(w)m(e)g(should)e(\014rst)g
(understand)g(the)h(input)f(assumption)323 4402 y(and)i(output)h
(guaran)m(tee)i(of)e(the)g(system.)46 b(In)31 b(case)i(of)g(do)m
(wncoun)m(ter)f(the)g(input)f(assumption)323 4628 y(is)38
b(fairly)h(trivial,)j(the)c(input)g Fl(r)-5 b(eset)47
b Fr(can)39 b(b)s(e)f(either)h(1)f(or)h(0.)65 b(So)38
b(w)m(e)h(c)m(ho)s(ose)g(it)g(to)g(b)s(e)f(non-)323 4853
y(deterministic.)j(The)28 b(output)g(guaran)m(tee)j(is)d(that)i(coun)m
(ter)f(coun)m(ts)g(from)g(3)c Fp(!)h Fr(2)f Fp(!)g Fr(1)h
Fp(!)f Fr(0)h Fp(!)1931 5094 y Fr(24)p eop end
%%Page: 25 25
TeXDict begin 25 24 bop 323 -89 a Fr(3)35 b(when)f(its)h(not)g(reset)g
(and)f(on)h(b)s(eing)f(reset)i(starts)f(coun)m(ting)h(from)e(3.)54
b(W)-8 b(e)36 b(represen)m(t)f(this)323 137 y(as)j(guarded)f(commands.)
63 b(If)37 b(the)h(state)h(of)f(coun)m(ter)h(\(reset,b1,b0\))g(is)f
(\(0,1,0\))j(then)c(in)h(the)323 363 y(next)32 b(state)i(it)f(should)f
(mo)m(v)m(e)i(to)f(zero)g(if)g(the)g(reset)g(sta)m(ys)g(lo)m(w)g(i.e)h
(\(0,0,0\))h(lo)m(w)e(so)g(w)m(e)g(ha)m(v)m(e)g(a)323
589 y(guarded)d(command)g(as)g(sho)m(wn)g(b)s(elo)m(w.)657
736 y Fo([])47 b(~reset)f(&)95 b(b1)48 b(&)f(~b0)g(->)g(b1')g(:=)g
(false;)f(b0')h(:=)g(true)686 996 y Fr(Figure)23 b(3.2)h(sho)m(ws)e
(the)g(in)m(terface)i(mo)s(dule)e(for)g(the)h(do)m(wn)e(coun)m(ter)i
(describ)s(ed)f(ab)s(o)m(v)m(e)323 1221 y(3.1.)776 2314
y @beginspecial 0 @llx 0 @lly 264 @urx 111 @ury 2880
@rwi @setspecial
%%BeginDocument: figs/downcounter.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\cygwin\home\vaibhav\downcounter.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 264 111
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 264 111
%AI3_TileBox: 0 0 264 111
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  73.2000 1.4400 m
  181.0800 1.4400 L
  181.0800 109.2000 L
  73.2000 109.2000 L
  73.2000 1.4400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 92.6400 52.9200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(2-bit Down Counter\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  73.2000 57.6000 m
  62.8800 75.6000 L
  62.8800 63.7200 L
  1.3200 63.7200 L
  1.3200 51.4800 L
  62.8800 51.4800 L
  62.8800 39.6000 L
  73.2000 57.6000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 26.8800 55.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Reset\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  234.9600 82.3200 m
  224.5200 100.2000 L
  224.5200 88.3200 L
  181.0800 88.3200 L
  181.0800 76.2000 L
  224.5200 76.2000 L
  224.5200 64.3200 L
  234.9600 82.3200 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 203.4000 79.9200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(b1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  234.9600 28.3200 m
  224.5200 46.3200 L
  224.5200 34.4400 L
  181.0800 34.4400 L
  181.0800 22.3200 L
  224.5200 22.3200 L
  224.5200 10.4400 L
  234.9600 28.3200 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 203.4000 26.0400 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(b0\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  234.9600 10.4400 m
  261.8400 10.4400 L
  261.8400 100.2000 L
  234.9600 100.2000 L
  234.9600 10.4400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 243.9600 76.9200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(11\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.9600 67.3200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(10\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.9600 48.1200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(01\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 243.9600 28.9200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(00\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1325 2497 a Fj(Figure)32 b(3.1)p Fu(:)k(A)28
b(2-bit)f(Do)n(wn)g(Coun)n(ter)323 2948 y Fv(3.2.2)112
b(Running)38 b(Chai)686 3233 y Fr(All)j(the)f(in)m(terface)h(mo)s(dule)
f(de\014nitions)f(ha)m(v)m(e)i(to)g(b)s(e)e(en)m(tered)h(in)m(to)h(a)f
(single)h(\014le)323 3458 y(named)32 b(t)m(ypically)i(with)e(the)g
(su\016x)g(.in)m(tf;)i(in)e(our)f(case,)j(\(sa)m(y\))g(this)e(\014le)h
(is)f(do)m(wncoun)m(ter.in)m(tf)323 3684 y(\014gure)e(3.2.)41
b Fq(Chai)31 b Fr(is)g(in)m(v)m(ok)m(ed)g(b)m(y)g(t)m(yping)f
Fo(chai)g Fr(at)h(the)f(shell)h(prompt.)323 3840 y Fo(kala)46
b(6>)i(chai)323 3953 y(Welcome)e(to)h(CHAI)f(1.0)323
4066 y(Please)g(report)g(any)h(problems)e(to)j(dvl@cse.ucsc.edu)323
4179 y(chai)e(1.0)h(>)323 4447 y Fr(The)36 b(in)m(terface)j(is)e(read)g
(and)g(parsed)f(with)h(the)h Fo(read)p 2254 4447 29 4
v 33 w(intf)e Fr(command.)61 b(As)37 b(sho)m(wn)g(b)s(elo)m(w)323
4673 y Fq(Chai)32 b Fr(displa)m(ys)g(the)g(names)f(of)h(the)g(mo)s
(dules)f(that)i(w)m(ere)f(successfully)g(parsed.)44 b(In)31
b(the)h(case)323 4899 y(of)e(a)h(parse)f(error,)g(an)h(appropriate)f
(message)i(is)e(displa)m(y)m(ed.)1931 5094 y(25)p eop
end
%%Page: 26 26
TeXDict begin 26 25 bop 323 -124 a Fo(interface)45 b(downcounter)418
-12 y(input)i(vars:)f(x0:)190 b(bool;)46 b(x1:)h(bool;)418
101 y(output)f(vars:)94 b(toone:)47 b(bool;)323 327 y(output)f(atom)h
(controls)e(x0,)i(x1)g(reads)g(x0,)f(x1,)h(toone)418
440 y(init)657 553 y([])g(true)g(->)g(x0')g(:=)g(true;)f(x1')h(:=)g
(true;)418 666 y(update)657 779 y([])95 b(toone)619 b(->)47
b(x1')g(:=)g(true;)94 b(x0')47 b(:=)g(true)657 892 y([])g(~toone)f(&)95
b(x1)48 b(&)95 b(x0)47 b(->)g(x1')g(:=)g(true;)94 b(x0')47
b(:=)g(false)657 1005 y([])g(~toone)f(&)95 b(x1)48 b(&)f(~x0)g(->)g
(x1')g(:=)g(false;)f(x0')h(:=)g(true)657 1118 y([])g(~toone)f(&)i(~x1)f
(&)95 b(x0)47 b(->)g(x1')g(:=)g(false;)f(x0')h(:=)g(false)657
1230 y([])g(~toone)f(&)i(~x1)f(&)g(~x0)g(->)g(x1')g(:=)g(true;)94
b(x0')47 b(:=)g(true)418 1343 y(endatom)323 1456 y(input)f(atom)h
(controls)e(toone)418 1569 y(init)657 1682 y([])i(true)g(->)g(toone')f
(:=)h(nondet)418 1795 y(update)657 1908 y([])g(true)g(->)g(toone')f(:=)
h(nondet)418 2021 y(endatom)323 2134 y(endinterface)694
2416 y Fj(Figure)32 b(3.2)p Fu(:)j(A)28 b(2-bit)g(Do)n(wn)f(Coun)n(ter)
g(Mo)r(delled)h(As)f(An)h(In)n(terface)f(Mo)r(dule)323
2690 y Fo(kala)46 b(68>)h(chai)323 2802 y(Welcome)f(to)h(CHAI)f(1.0)323
2915 y(Please)g(report)g(any)h(problems)e(to)j(dvl@cse.ucsc.edu)323
3028 y(chai)e(1.0)h(>)h(read_intf)d(downcounter.intf)323
3141 y(...)323 3254 y(DEBUG)h(Interface)f(Created:)h(downcounter)323
3367 y(chai)g(1.0)h(>)686 3692 y Fq(Chai)35 b Fr(pro)m(vides)g(man)m(y)
g(metho)s(ds)f(and)g(to)s(ols)h(for)g(v)m(erifying)g(the)g(correctness)
h(of)e(a)323 3918 y(design:)57 b(execution)40 b(\(i.e.,)i(sim)m
(ulation\),)g(in)m(v)-5 b(arian)m(t)40 b(c)m(hec)m(king,)j(re\014nemen)
m(t)38 b(c)m(hec)m(king,)43 b(A)-8 b(TL)323 4144 y(mo)s(del)28
b(c)m(hec)m(king,)j(in)m(terface)f(comp)s(osition.)41
b(In)m(terface)29 b(comp)s(osition)h(b)s(eing)e(the)g(distinguish-)323
4370 y(ing)i(feature)h(of)g Fq(Chai)f Fr(w)m(e)h(detail)h(it)f(here,)f
(rest)h(of)f(the)h(features)f(are)h(describ)s(ed)e(in)i([RA)-8
b(T00)q(].)686 4596 y(The)30 b(command)g(for)h(in)m(terface)h(comp)s
(osition)f(is)f Fo(compose)p 2737 4596 29 4 v 32 w(intf)p
Fr(.)323 4783 y Fo(chai)46 b(1.0)h(>)h(compose_intf)323
4896 y(Syntax)e(error.Usage:)e(compose_intf)h(<outIntf>)g(<Intf1>)h
(<Intf2>)1931 5094 y Fr(26)p eop end
%%Page: 27 27
TeXDict begin 27 26 bop 323 -89 a Fr(It)41 b(c)m(hec)m(ks)h(if)f(the)g
(in)m(terfaces)i Fo(Intf1)c Fr(and)h Fo(Intf2)g Fr(can)h(b)s(e)g(comp)s
(osed)f(as)h(a)h(new)e(in)m(terface)323 137 y Fo(outIntf)p
Fr(.)54 b(When)35 b(w)m(e)h(run)f(this)g(command)g(on)h(in)m(terface)h
(do)m(wncoun)m(ter)f(\(\014gure)f(3.1)i(\))e(and)323
363 y(gate)d(\014gure)e(3.3\),)i(w)m(e)e(a)h(get)h(a)e(compatible)i(in)
m(terface)g(as)f(follo)m(wing)h Fq(Chai)e Fr(session)h(sho)m(ws.)323
575 y Fo(chai)46 b(1.0)h(>)h(read_intf)d(downcounter.intf)323
688 y(...)323 801 y(chai)h(1.0)h(>)h(read_intf)d(gate.intf)323
914 y(...)323 1027 y(chai)h(1.0)h(>)h(compose_intf)c(GC)j(gate)g
(downcounter)323 1140 y(Interfaces)e(gate)h(and)h(downcounter)e(are)i
(compatible.)323 1415 y(interface)e(gate)418 1528 y(input)i(vars:)f
(y0:)h(bool;)f(y1:)h(bool;)418 1641 y(output)f(vars:)94
b(x0:)47 b(bool;)g(x1:)g(bool;)323 1867 y(output)f(atom)h(controls)e
(y0,)i(y1)g(reads)g(x0,)f(x1,)h(y0,)g(y1)418 1980 y(init)609
2093 y([])g(true)g(->)g(y0')g(:=)g(false;)f(y1')h(:=)g(nondet)609
2205 y([])g(true)g(->)g(y1')g(:=)g(false;)f(y0')h(:=)g(nondet)418
2318 y(update)609 2431 y([])g(~x0)g(&)h(~x1)f(->)g(y0')g(:=)g(true;)94
b(y1')47 b(:=)g(true)609 2544 y([])g(~x0)g(&)95 b(x1)48
b(->)f(y0')g(:=)g(true;)94 b(y1')47 b(:=)g(false)609
2657 y([])95 b(x0)47 b(&)h(~x1)f(->)g(y0')g(:=)g(false;)f(y1')h(:=)g
(true)609 2770 y([])95 b(x0)47 b(&)95 b(x1)48 b(->)f(y0')g(:=)g(y0;)190
b(y1')47 b(:=)g(y1)418 2883 y(endatom)323 2996 y(input)f(atom)h
(controls)e(x0,)i(x1)g(reads)g(x0,)g(x1)418 3109 y(init)609
3222 y([])g(true)g(->)g(x0')g(:=)g(nondet;)f(x1')h(:=)g(nondet)418
3335 y(update)609 3447 y([])95 b(~x0)47 b(&)g(~x1)g(->)h(x0')e(:=)i
(false;)93 b(x1')47 b(:=)h(nondet)609 3560 y([])95 b(~x0)47
b(&)g(~x1)g(->)h(x1')e(:=)i(false;)93 b(x0')47 b(:=)h(nondet)609
3673 y([])143 b(x0)47 b(|)95 b(x1)47 b(->)h(x0')e(:=)i(nondet;)d(x1')i
(:=)h(nondet)418 3786 y(endatom)323 3899 y(endinterface)1465
4048 y Fj(Figure)32 b(3.3)p Fu(:)k(A)27 b(Simple)i(Gate)1931
5094 y Fr(27)p eop end
%%Page: 28 28
TeXDict begin 28 27 bop 323 -89 a Fm(3.3)135 b(In)l(terface)46
b(Mo)t(dules)323 234 y Fv(3.3.1)112 b(V)-9 b(ariables)686
518 y Fr(The)35 b(state)h(of)f(an)f(in)m(terface)j(mo)s(dule)d(is)h
(describ)s(ed)e(b)m(y)i(a)g(set)g(of)g Fl(state)j(variables,)p
Fr(.)323 744 y(They)g(are)h(in)f(turn)g(partitioned)h(in)m(to)g(sets)g
(of)g Fl(input)48 b Fr(and)38 b Fl(output)48 b Fr(v)-5
b(ariables.)66 b(The)38 b Fs(input)323 970 y(v)-6 b(ariables)23
b Fr(represen)m(t)f(inputs)f(to)j(the)e(in)m(terface,)k(their)d(v)-5
b(alue)23 b(can)f(b)s(e)g(read,)i(but)e(not)h(c)m(hanged,)323
1196 y(b)m(y)32 b(the)h(in)m(terface)h(mo)s(dule.)47
b(The)32 b(input)f(v)-5 b(ariables)34 b(are)f(denoted)f(b)m(y)i
Fs(inputs)j(v)-6 b(ars:)46 b Fr(clause.)323 1422 y(The)36
b Fs(output)42 b(v)-6 b(ariables)37 b Fr(represen)m(t)g(outputs)f(of)h
(the)f(in)m(terface,)41 b(and)36 b(their)g(v)-5 b(alue)37
b(can)g(b)s(e)323 1647 y(c)m(hanged)d(\(and)f(read\))h(b)m(y)g(the)g
(in)m(terface)h(mo)s(dule.)50 b(The)33 b(output)g(v)-5
b(ariables)34 b(are)g(denoted)g(b)m(y)323 1873 y Fs(output)g(v)-6
b(ars:)41 b Fr(clause.)686 2099 y(Consider)c(the)h(description)g(of)g
(the)g(do)m(wncoun)m(ter)g(as)g(an)g(in)m(terface)i(\(\014gure)d
(3.2\).)323 2325 y(The)30 b(v)-5 b(ariable)31 b(are)g(declared)f(in)g
(the)h(b)s(eginning)f(as:)418 2513 y Fo(input)47 b(vars:)94
b(reset:)46 b(bool;)418 2625 y(output)g(vars:)h(b0:)g(bool;)f(b1:)h
(bool;)323 2985 y Fv(3.3.2)112 b(In)m(tialization)38
b(and)h(T)-9 b(ransitions)686 3270 y Fr(The)30 b(v)-5
b(ariables)30 b(in)g(an)g(in)m(terface)h(mo)s(dule)e(ha)m(v)m(e)i(to)g
(b)s(e)e(initialized)j(at)e(system)g(reset)323 3495 y(and)f(assigned)g
(new)g(v)-5 b(alues)30 b(at)g(eac)m(h)h(clo)s(c)m(k)g(tic)m(k.)42
b(The)29 b(input)f(and)h(output)g(v)-5 b(ariables)31
b(ac)m(hiev)m(e)323 3721 y(this)f(through)g Fs(input)35
b(atoms)30 b Fr(and)g Fs(output)k(atoms)d Fr(resp)s(ectiv)m(ely)-8
b(.)686 3947 y Fs(Input)44 b(atoms)g Fr(describ)s(es)37
b(the)h(initialization)k(and)37 b(up)s(date)g(of)i(input)e(v)-5
b(ariables.)323 4173 y(The)31 b(transition)g(relations)i(in)e(input)f
(atom)i(mo)s(del)f(the)h(design)f(assumptions)f(ab)s(out)h(the)h(in-)
323 4399 y(puts)21 b(pro)m(vided)g(b)m(y)h(the)g(en)m(vironmen)m(t)h
(and)e(a)h(set)g(of)g Fl(initial)k(inputs)k Fr(sp)s(ecify)21
b(the)h(desired)g(initial)323 4625 y(condition)31 b(of)g(the)g(en)m
(vironmen)m(t.)42 b(F)-8 b(or)31 b(example)h(the)e(input)g(v)-5
b(ariable)32 b(reset)f(of)g(do)m(wncoun)m(ter)323 4850
y(is)f(describ)s(ed)f(with)i(an)f(input)f(atom)j(as)e(follo)m(ws:)1931
5094 y(28)p eop end
%%Page: 29 29
TeXDict begin 29 28 bop 323 -89 a Fo(input)46 b(atom)h(controls)e
(reset)418 24 y(init)657 137 y([])i(true)g(->)g(reset')f(:=)h(nondet)
418 250 y(update)657 363 y([])g(true)g(->)g(reset')f(:=)h(nondet)418
476 y(endatom)323 589 y(endinterface)686 889 y Fs(Output)31
b(atoms)h Fr(describ)s(e)27 b(the)g(initialization)k(and)c(up)s(date)f
(of)i(output)f(v)-5 b(ariables.)323 1115 y(The)31 b(transition)h
(relations)g(in)g(output)f(atom)h(mo)s(del)f(the)h(p)s(ossible)f(c)m
(hanges)i(of)e(output)g(v)-5 b(ari-)323 1341 y(ables)33
b(describing)f(the)h(b)s(eha)m(vior)g(of)g(the)f(mo)s(dule.)47
b(The)32 b(initial)i(outputs)e(sp)s(ecify)h(the)g(initial)323
1567 y(conditions)i(of)g(the)g(mo)s(dule.)53 b(F)-8 b(or)36
b(example)f(the)g(output)f(v)-5 b(ariables)36 b Fk(b)p
Fr(0)p Fk(;)15 b(b)p Fr(1)36 b(of)f(do)m(wncoun)m(ter)323
1793 y(are)c(describ)s(ed)e(with)h(an)g(output)g(atom)h(as)g(follo)m
(ws:)323 1980 y Fo(output)46 b(atom)h(controls)e(b0,)i(b1)g(reads)g
(b0,)f(b1,)h(reset)418 2093 y(init)657 2206 y([])g(true)g(->)g(b0')g
(:=)g(true;)f(b1')h(:=)g(true;)418 2319 y(update)657
2432 y([])95 b(reset)619 b(->)47 b(b1')g(:=)g(true;)94
b(b0')47 b(:=)g(true)657 2545 y([])g(~reset)f(&)95 b(b1)48
b(&)95 b(b0)47 b(->)g(b1')g(:=)g(true;)94 b(b0')47 b(:=)g(false)657
2658 y([])g(~reset)f(&)95 b(b1)48 b(&)f(~b0)g(->)g(b1')g(:=)g(false;)f
(b0')h(:=)g(true)657 2771 y([])g(~reset)f(&)i(~b1)f(&)95
b(b0)47 b(->)g(b1')g(:=)g(false;)f(b0')h(:=)g(false)657
2884 y([])g(~reset)f(&)i(~b1)f(&)g(~b0)g(->)g(b1')g(:=)g(true;)94
b(b0')47 b(:=)g(true)418 2996 y(endatom)323 3356 y Fv(3.3.3)112
b(Syn)m(tax)686 3641 y Fr(An)m(y)37 b Fo(.intf)f Fr(\014le)h(con)m
(tains)h(one)f(in)m(terface)i(de\014nition.)60 b(The)37
b(in)m(terface)h(de\014nition)323 3866 y(has)31 b(the)g(syn)m(tax)h
(describ)s(ed)e(in)h(\014gure)g(A.1.)44 b(The)31 b Fq(Chai)h
Fr(en)m(vironmen)m(t)g(kno)m(ws)f(the)g(in)m(terface)323
4092 y(b)m(y)f Fl(interfac)-5 b(e-name)p Fr(.)42 b(Eac)m(h)31
b(state)h(v)-5 b(ariable)31 b(in)f(an)g(in)m(terface)i(has)e(to)h(con)m
(trolled)h(b)m(y)f(one)f(and)323 4318 y(only)35 b(one)g(atom.)56
b(The)34 b Fl(input)k(atoms)44 b Fr(describ)s(e)34 b(the)h(input)f
(assumptions)h(while)g(the)g Fl(output)323 4544 y(atoms)k
Fr(state)32 b(the)e(output)g(guaran)m(tees.)1931 5094
y(29)p eop end
%%Page: 30 30
TeXDict begin 30 29 bop 323 -124 a Fo(interface)45 b(<interface-name>)
514 -12 y(input)h(vars:)g(<input-list>)514 101 y(output)g(vars:)g
(<output-list>)514 327 y([input)g(|)h(output])f(<atom>)514
440 y(...)514 553 y([input)g(|)h(output])f(<atom>)323
666 y(endinterface)1239 948 y Fj(Figure)32 b(3.4)p Fu(:)k(Syn)n(tax)27
b(of)g(In)n(terface)g(Mo)r(dule)323 1222 y Fv(3.3.4)112
b(Seman)m(tics)686 1506 y Fr(The)29 b(seman)m(tics)g(of)g(an)g(in)m
(terface)h(mo)s(dule)e(is)g(essen)m(tially)j(a)e(simple)g(game)g(b)s
(et)m(w)m(een)323 1732 y(the)h(mo)s(dule)g(and)g(its)h(en)m(vironmen)m
(t.)686 1958 y(The)21 b(b)s(eha)m(vior)f(of)h(an)g(in)m(terface)h(mo)s
(dule)e(consists)i(of)f(an)f(in\014nite)h(sequence)g(of)g(states)323
2184 y(starting)26 b(from)f(an)g(initial)i(state)g(\(trace\).)41
b(Starting)26 b(with)f(initial)h(state)h(eac)m(h)g(successiv)m(e)f
(state)323 2410 y(is)32 b(generated)h(b)m(y)g(the)f(mo)s(dule)g(and)f
(b)m(y)i(its)f(en)m(vironmen)m(t.)47 b(The)32 b(mo)s(dules)g(c)m(ho)s
(oses)h(the)f(new)323 2635 y(v)-5 b(alues)30 b(of)f(the)h(output)f(v)-5
b(ariables)30 b(according)g(to)g(the)g(output)f(transition)h(relation,)
h(while)f(the)323 2861 y(en)m(vironmen)m(t)42 b(m)m(ust)f(c)m(ho)s(ose)
h(the)f(new)g(v)-5 b(alues)42 b(of)f(the)g(input)g(v)-5
b(ariables)41 b(according)i(to)f(the)323 3087 y(input)29
b(transition)i(relation.)686 3313 y(If)37 b(the)h(mo)s(dule)f(is)g
(able)h(to)g(ful\014ll)f(all)h(its)g(output)f(guaran)m(tees)h(ev)m(en)g
(for)f(a)h(single)323 3539 y(set)46 b(of)f(en)m(vironmen)m(t)h(v)-5
b(ariables)46 b(then)g(the)f(mo)s(dule)g(is)g(said)h(to)g(b)s(e)f
(compatible)h(with)f(its)323 3764 y(en)m(vironmen)m(t.)323
4124 y Fv(3.3.5)112 b(Implemen)m(tation)686 4409 y Fr(The)39
b(formalism)h(of)f(in)m(terface)i(mo)s(dules)d(as)i(describ)s(ed)e
(here)h(is)g(implemen)m(ted)h(in)323 4634 y Fq(Chai)553
4611 y Fr(_)533 4634 y(The)29 b(parser)g(of)h Fq(Mocha)f
Fr(w)m(as)h(c)m(hanged)g(to)h(accommo)s(date)g(the)f(input)f(language)i
(of)f(in-)323 4860 y(terface)f(mo)s(dules.)39 b(The)28
b(parser)f(splits)i(the)f(in)m(terfaces)h(in)f(to)h(input)e(assumption)
h(and)f(output)1931 5094 y(30)p eop end
%%Page: 31 31
TeXDict begin 31 30 bop 323 -89 a Fr(guaran)m(tee)36
b Fq(Rea)n(ctive)d(Modules)h Fr(whic)m(h)g(in)h(turn)f(are)i(con)m(v)m
(erted)g(in)f(to)h(\014nite)f(state)h(ma-)323 137 y(c)m(hines)31
b(represen)m(ted)g(as)h(binary)e(decision)i(diagrams.)44
b(The)30 b(FSMs)h(are)h(then)f(comp)s(osed)g(in)m(to)323
363 y(a)37 b(single)h(in)m(terface.)62 b(The)37 b(resulting)g(in)m
(terface)i(is)e(referred)f(in)h(the)g Fq(Chai)g Fr(en)m(vironmen)m(t)h
(b)m(y)323 589 y(the)30 b(name)h(it)g(had)e(in)i(its)f(in)m(terface)i
(de\014nition)e(\014le.)686 815 y(Comp)s(osition)g(and)g(compatibilit)m
(y)i(c)m(hec)m(king)f(for)f(in)m(terfaces)h(as)f(presen)m(ted)g(in)g
(sec-)323 1040 y(tion)36 b([)p Fs(?)q Fr(])f(is)h(implemen)m(ted)g(b)m
(y)f(extending)h(the)g(CUDD)g(BDD)h(pac)m(k)-5 b(age)38
b(and)d(the)h(VIS)f(BDD)323 1266 y(manipulation)24 b(pac)m(k)-5
b(age)26 b([R)m(GA)1432 1233 y Fe(+)1492 1266 y Fr(96)q(])e(in)g(the)g
Fq(Chai)h Fr(en)m(vironmen)m(t.)39 b(Using)24 b(the)h(tec)m(hniques)f
(ex-)323 1492 y(plained)f(in)h(section)h Fs(??)p Fr(,)h(the)d(size)i
(\(n)m(um)m(b)s(er)e(of)h(BDD)h(v)-5 b(ariables\))24
b(of)g(the)g(in)m(terfaces)h(that)f Fq(Chai)323 1718
y Fr(is)32 b(able)g(to)g(c)m(hec)m(k)h(for)f(compatibilit)m(y)-8
b(,)35 b(and)c(comp)s(ose,)i(is)e(roughly)h(equiv)-5
b(alen)m(t)33 b(to)f(the)g(size)h(of)323 1944 y(the)d(mo)s(dels)g(that)
h Fq(Mocha)f Fr([AHM)1570 1911 y Fe(+)1630 1944 y Fr(98)q(])g(can)h(v)m
(erify)g(with)f(resp)s(ect)g(to)h(safet)m(y)h(prop)s(erties.)323
2380 y Fm(3.4)135 b(Chai)46 b(Op)t(erations)686 2695
y Fr(This)29 b(section)h(presen)m(ts)f(v)-5 b(arious)29
b(commands)g(a)m(v)-5 b(ailable)32 b(to)e(w)m(ork)f(in)g(the)g
Fq(Chai)h Fr(de-)323 2921 y(sign)f(and)f(v)m(eri\014cation)j(en)m
(vironmen)m(t.)41 b(There)28 b(are)h(di\013eren)m(t)h(data)g
(structures)e(on)h(whic)m(h)g(one)323 3147 y(can)i(w)m(ork)g(at)g
(di\013eren)m(t)g(lev)m(els)h(of)f(gran)m(ularit)m(y)h(and)e
(di\013eren)m(t)h(amoun)m(t)g(of)g(con)m(trol.)43 b(Here)31
b(w)m(e)323 3373 y(presen)m(t)f(a)h(summary)f(of)h(commands)f(whic)m(h)
g(eac)m(h)i(relev)-5 b(an)m(t)32 b(data)f(structure)f(or)h(abstraction)
323 3599 y(can)e(handle.)40 b(The)29 b(detailed)h(list)f(of)h
Fq(Chai)f Fr(commands)g(and)f(functions)h(can)g(b)s(e)g(found)f(online)
323 3825 y(at)j([DL03b)q(].)323 4184 y Fv(3.4.1)150 b(In)m(terfaces)686
4469 y Fr(In)m(terface)34 b(mo)s(dules)e(can)h(b)s(e)f(read)g(in)h(the)
g Fq(Chai)g Fr(en)m(vironmen)m(t)g(b)m(y)f(the)h(command)323
4695 y Fo(read)p 521 4695 29 4 v 33 w(intf)p Fr(.)63
b(Tw)m(o)38 b(in)m(terfaces)h(can)g(b)s(e)e(comp)s(osed)h(b)m(y)g(the)g
Fo(compose)p 2823 4695 V 33 w(intf)p Fr(.)62 b(One)38
b(can)g(use)1931 5094 y(31)p eop end
%%Page: 32 32
TeXDict begin 32 31 bop 323 -89 a Fo(check)p 569 -89
29 4 v 33 w(intf)p 794 -89 V 33 w(ref)30 b Fr(to)i(c)m(hec)m(k)g(if)f
(one)h(in)m(terface)g(is)f(a)h(re\014nemen)m(t)e(of)i(the)f(other.)43
b(The)30 b(lev)m(els)j(of)323 137 y(v)-5 b(arious)30
b(v)-5 b(ariables)31 b(in)f(the)h(mo)s(dule)f(can)g(b)s(e)g(kno)m(wn)g
(b)m(y)g(p)s(oking)g(it)h(with)f Fo(print)p 3141 137
V 33 w(levels)p Fr(.)323 497 y Fv(3.4.2)112 b(Reactiv)m(e)38
b(Mo)s(dules)686 781 y Fr(Reactiv)m(e)32 b(mo)s(dules)c(can)i(b)s(e)e
(read)h(in)g(the)h Fq(Chai)f Fr(en)m(vironmen)m(t)h(b)m(y)f(using)g
(the)g(com-)323 1007 y(mands)e Fo(read)p 807 1007 V 33
w(module)p Fr(.)39 b(Tw)m(o)28 b(reactiv)m(e)j(mo)s(dules)d(can)g(b)s
(e)g(comp)s(osed)g(b)m(y)g(using)g(the)h Fo(compose)323
1233 y Fr(command.)39 b(A)27 b(mo)s(dule)f(can)h(b)s(e)g(renamed)f(b)m
(y)h(using)f(the)h Fo(ren)f Fr(directiv)m(e)i(and)f(a)g(new)f(instance)
323 1459 y(of)33 b(it)h(can)g(b)s(e)e(created)j(using)e(the)g
Fo(let)g Fr(command.)49 b(One)33 b(can)h(see)f(the)h(atoms)g
(comprising)f(a)323 1685 y(mo)s(dule)d(b)m(y)g(using)g(the)g
Fo(show)p 1362 1685 V 33 w(atoms)f Fr(command.)323 2044
y Fv(3.4.3)112 b(BDDs)37 b(and)i(FSMs)686 2329 y Fr(Binary)g(decision)h
(diagrams)f(are)g(at)h(the)f(b)s(ottom)g(of)g(data)h(structure)f
(hierarc)m(h)m(y)-8 b(.)323 2555 y(They)27 b(form)h(the)g(core)h(of)g
(the)f(implemen)m(tation.)42 b(MDD)29 b(\(Multiv)-5 b(ariate)31
b(Decision)e(Diagrams\))323 2780 y(and)h(FSMs)g(\(\014nite)h(state)g
(mac)m(hines)g(follo)m(w)h(next.)686 3006 y(A)40 b(mo)s(dule)e(can)i(b)
s(e)f(con)m(v)m(erted)h(in)f(to)h(a)g(FSM)f(using)g(the)h(commands)f
Fo(fsm)p Fr(.)66 b(An)323 3232 y(in)m(terface)25 b(can)f(b)s(e)f(made)g
(from)g(FSM)h(represen)m(tations)g(b)m(y)g(using)f(the)g(commands)g
Fo(make)p 3386 3232 V 34 w(intf)p Fr(.)686 3458 y(A)37
b(dump)d(of)i(BDDs)h(from)f(a)g(mo)s(dule)g(\014le)g(can)g(b)s(e)g
(obtained)g(b)m(y)g(using)g(the)g(com-)323 3684 y(mands)23
b Fo(dump)p 803 3684 V 34 w(bdd)h Fr(in)g(a)h(mo)s(dule.)38
b(V)-8 b(arious)25 b(op)s(erations)g(lik)m(e)h Fo(not,and,or)c
Fr(can)j(b)s(e)f(p)s(erformed)323 3910 y(directly)29
b(on)g(BDDs.)41 b(The)29 b(truth)f(v)-5 b(alue)29 b(of)g(a)g(BDD)h(can)
g(b)s(e)e(c)m(hec)m(k)m(ed)j(using)e Fo(true)f Fr(command.)323
4269 y Fv(3.4.4)112 b(In)m(v)-6 b(arian)m(ts)686 4554
y Fr(In)m(v)h(arian)m(ts)23 b(can)g(b)s(e)e(read)h(in)g(the)g
Fq(Chai)g Fr(en)m(vironmen)m(t)h(b)m(y)f(the)g Fo(read)p
3028 4554 V 34 w(inv)f Fr(command.)323 4780 y(In)m(v)-5
b(arian)m(ts)34 b(in)f(alternating)i(temp)s(oral)f(logic)h(are)f(read)g
(using)g Fo(atl)p 2686 4780 V 33 w(read)p Fr(.)49 b(T)-8
b(o)34 b(c)m(hec)m(k)h(w)m(ether)1931 5094 y(32)p eop
end
%%Page: 33 33
TeXDict begin 33 32 bop 323 -89 a Fr(a)29 b(mo)s(dule)g(satis\014es)g
(an)g(in)m(v)-5 b(arian)m(t)31 b(one)e(can)h(use)f(the)g(command)g
Fo(inv)p 2761 -89 29 4 v 33 w(check)f Fr(on)h(an)g(instance)323
137 y(of)h(mo)s(dule)g(and)g(the)g(in)m(v)-5 b(arian)m(t.)323
492 y Fv(3.4.5)112 b(Summary)39 b(of)f(Imp)s(ortan)m(t)g(Commands)686
777 y Fr(A)31 b(handy)e(list)i(of)g(most)f(relev)-5 b(an)m(t)32
b(c)m(hai)g(commands)e(is)g(presen)m(ted)g(b)s(elo)m(w:)459
1054 y Fp(\017)46 b Fs(read)p 756 1054 32 4 v 38 w(in)m(tf)p
Fr(.)37 b(This)20 b(commands)g(reads)h(and)f(v)-5 b(alidates)22
b(an)e(in)m(terface)j(mo)s(dule)d(description)550 1280
y(from)30 b(the)h(sp)s(eci\014ed)e(\014le.)459 1571 y
Fp(\017)46 b Fs(sl)p 626 1571 V 38 w(mak)m(e)p 902 1571
V 38 w(in)m(tf)p Fr(.)66 b(This)38 b(command)g(giv)m(en)i(t)m(w)m(o)h
(mo)s(dules,)f(one)f(describing)g(the)g(input)550 1797
y(ev)m(olution,)d(the)e(other)g(describing)f(the)h(output)f(ev)m
(olution,)j(creates)f(a)f(single)h(new)e(in-)550 2023
y(terface)f(mo)s(dule)d(that)i(com)m(bines)g(the)g(t)m(w)m(o.)459
2314 y Fp(\017)46 b Fs(sl)p 626 2314 V 38 w(mak)m(e)p
902 2314 V 38 w(in)m(tf)p 1097 2314 V 37 w(out)p Fr(.)40
b(This)27 b(command)g(creates)j(an)d(in)m(terface)i(ha)m(ving)g(only)f
(an)f(output)550 2540 y(p)s(ortion)j(\(with)g(no)h(input)e
(assumptions\).)459 2831 y Fp(\017)46 b Fs(sl)p 626 2831
V 38 w(comp)s(ose)p 1051 2831 V 39 w(in)m(tf)p Fr(.)64
b(This)38 b(command)g(giv)m(en)h(t)m(w)m(o)h(in)m(terfaces,)i(comp)s
(oses)c(them)g(and)550 3057 y(c)m(hec)m(ks)32 b(if)f(they)f(are)h
(compatible.)43 b(If)30 b(they)h(are)g(not)g(compatible,)h(sa)m(ys)f
(so.)42 b(If)30 b(they)g(are)550 3282 y(compatible,)i(sa)m(ys)f(so,)g
(and)f(returns)f(the)h(comp)s(osition.)459 3574 y Fp(\017)46
b Fs(sl)p 626 3574 V 38 w(c)m(hec)m(k)p 911 3574 V 39
w(in)m(tf)p 1107 3574 V 37 w(ref)p Fr(.)39 b(This)24
b(commands)h(giv)m(en)g(t)m(w)m(o)h(in)m(terfaces)h(in)m(tf1)e(and)f
(in)m(tf2,)j(c)m(hec)m(ks)550 3799 y(whether)j(in)m(tf2)h(is)f(a)h
(re\014nemen)m(t)f(of)h(in)m(tf1.)459 4091 y Fp(\017)46
b Fs(sl)p 626 4091 V 38 w(prin)m(t)p 890 4091 V 38 w(in)m(tf)p
Fr(.)40 b(This)30 b(command)g(prin)m(ts)g(an)g(in)m(terface.)459
4382 y Fp(\017)46 b Fs(sl)p 626 4382 V 38 w(cop)m(y)p
Fr(.)c(This)29 b(command)h(mak)m(es)i(a)e(cop)m(y)i(of)e(an)g(in)m
(terface.)459 4673 y Fp(\017)46 b Fs(sl)p 626 4673 V
38 w(comp)s(ose)p Fr(.)40 b(This)23 b(command)g(comp)s(oses)h(t)m(w)m
(o)h(FSMs)f(ev)m(en)g(if)g(they)g(share)f(con)m(trolled)550
4899 y(v)-5 b(ariables.)1931 5094 y(33)p eop end
%%Page: 34 34
TeXDict begin 34 33 bop 459 -89 a Fp(\017)46 b Fs(sl)p
626 -89 32 4 v 38 w(reac)m(h)p 907 -89 V 38 w(histonly)p
Fr(.)41 b(This)28 b(command)g(computes)h(the)g(set)g(of)g(reac)m(hable)
h(states,)g(pro-)550 137 y(jected)h(on)m(to)h(the)e(history)h(v)-5
b(ariables)31 b(only)-8 b(.)1931 5094 y(34)p eop end
%%Page: 35 35
TeXDict begin 35 34 bop 323 742 a Fn(Chapter)65 b(4)323
1406 y Ft(In)-6 b(terfaces)77 b(for)g(Hardw)-6 b(are)77
b(Design)323 1964 y Fr(T)-8 b(o)s(ols)43 b(for)f(con)m(v)m(erting)i
(existing)f(comp)s(onen)m(t)f(based)g(designs)g(to)h
Fq(Chai)g Fr(en)m(vironmen)m(t)f(are)323 2189 y(required)25
b(to)i(b)s(e)f(able)h(to)g(pro)m(vide)f(a)g(comprehensiv)m(e)h(test)g
(b)s(ed)e(for)h(comp)s(onen)m(t-based)h(design)323 2415
y(v)m(eri\014cation)41 b(algorithms)f(and)f(metho)s(dologies.)69
b(This)39 b(c)m(hapter)h(describ)s(es)f(the)h(con)m(v)m(ersion)323
2641 y(of)g(hardw)m(are)g(designs)g(co)s(ded)h(in)f(V)-8
b(erilog,)45 b(Esterel)c(or)f(VHDL)h(to)g(In)m(terface)h(Mo)s(dules,)h
(as)323 2867 y(summarized)30 b(in)g(Figure)h(4.1.)323
3303 y Fm(4.1)135 b(HDL)45 b(to)g(BLIF-MV)686 3619 y
Fr(V)-8 b(erilog)45 b(to)f Fq(BLIF-MV)f Fr(con)m(v)m(ersion)h(is)f(p)s
(ossible)f(b)m(y)h(the)g(to)s(ol)h(vl2m)m(v)g([Che94].)323
3844 y(VHDL)j(to)h Fq(BLIF-MV)e Fr(con)m(v)m(ersion)i(can)f(b)s(e)f(ac)
m(hiev)m(ed)j(b)m(y)e(the)f(to)s(ol)i(prev)-5 b(ail)47
b([BBD)3453 3811 y Fe(+)3514 3844 y Fr(96)q(])323 4070
y(while)41 b(Esterel)h(has)f(a)h(bac)m(k-end)g(SSCBlif)f([ssc])h(to)g
(output)f(co)s(de)h(in)f Fq(BLIF-MV)g Fr(format.)323
4296 y(Th)m(us,)p Fq(BLIF-MV)29 b Fr(is)i(a)g(ric)m(h)f(in)m
(termediate)i(format.)1931 5094 y(35)p eop end
%%Page: 36 36
TeXDict begin 36 35 bop 776 1710 a @beginspecial 0 @llx
0 @lly 292 @urx 230 @ury 2880 @rwi @setspecial
%%BeginDocument: figs/hdl2intf.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\cygwin\home\vaibhav\hdl2intf.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 292 230
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 292 230
%AI3_TileBox: 0 0 292 230
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  1.3200 166.0800 m
  63.1200 166.0800 L
  63.1200 227.8800 L
  1.3200 227.8800 L
  1.3200 166.0800 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 19.8000 194.6400 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Verilog\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  1.3200 83.7600 m
  63.1200 83.7600 L
  63.1200 145.4400 L
  1.3200 145.4400 L
  1.3200 83.7600 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 21.6000 112.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(VHDL\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  1.3200 1.3200 m
  63.1200 1.3200 L
  63.1200 63.1200 L
  1.3200 63.1200 L
  1.3200 1.3200 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 19.8000 29.7600 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Esterel\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  78.6000 197.0400 m
  78.7200 200.6400 L
  79.0800 204.3600 L
  79.6800 207.8400 L
  80.4000 211.3200 L
  81.3600 214.4400 L
  82.5600 217.4400 L
  83.8800 220.0800 L
  85.3200 222.3600 L
  86.7600 224.2800 L
  88.4400 225.8400 L
  90.2400 226.9200 L
  92.1600 227.6400 L
  93.9600 227.8800 L
  95.8800 227.6400 L
  97.6800 226.9200 L
  99.4800 225.8400 L
  101.1600 224.2800 L
  102.7200 222.3600 L
  104.2800 220.0800 L
  105.6000 217.4400 L
  106.6800 214.4400 L
  107.6400 211.3200 L
  108.4800 207.8400 L
  108.9600 204.3600 L
  109.3200 200.6400 L
  109.4400 197.0400 L
  109.3200 193.3200 L
  108.9600 189.6000 L
  108.4800 186.0000 L
  107.6400 182.6400 L
  106.6800 179.4000 L
  105.6000 176.5200 L
  104.2800 173.8800 L
  102.7200 171.6000 L
  101.1600 169.5600 L
  99.4800 168.1200 L
  97.6800 166.9200 L
  95.8800 166.3200 L
  93.9600 166.0800 L
  92.1600 166.3200 L
  90.2400 166.9200 L
  88.4400 168.1200 L
  86.7600 169.5600 L
  85.3200 171.6000 L
  83.8800 173.8800 L
  82.5600 176.5200 L
  81.3600 179.4000 L
  80.4000 182.6400 L
  79.6800 186.0000 L
  79.0800 189.6000 L
  78.7200 193.3200 L
  78.6000 197.0400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 85.5600 199.4400 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(vl2m\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 91.9200 189.8400 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(v\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  78.6000 114.6000 m
  78.7200 118.3200 L
  79.0800 122.0400 L
  79.6800 125.5200 L
  80.4000 129.0000 L
  81.3600 132.2400 L
  82.5600 135.1200 L
  83.8800 137.7600 L
  85.3200 140.0400 L
  86.7600 141.9600 L
  88.4400 143.4000 L
  90.2400 144.4800 L
  92.1600 145.2000 L
  93.9600 145.4400 L
  95.8800 145.2000 L
  97.6800 144.4800 L
  99.4800 143.4000 L
  101.1600 141.9600 L
  102.7200 140.0400 L
  104.2800 137.7600 L
  105.6000 135.1200 L
  106.6800 132.2400 L
  107.6400 129.0000 L
  108.4800 125.5200 L
  108.9600 122.0400 L
  109.3200 118.3200 L
  109.4400 114.6000 L
  109.3200 110.8800 L
  108.9600 107.1600 L
  108.4800 103.6800 L
  107.6400 100.2000 L
  106.6800 96.9600 L
  105.6000 94.0800 L
  104.2800 91.4400 L
  102.7200 89.1600 L
  101.1600 87.2400 L
  99.4800 85.8000 L
  97.6800 84.7200 L
  95.8800 84.0000 L
  93.9600 83.7600 L
  92.1600 84.0000 L
  90.2400 84.7200 L
  88.4400 85.8000 L
  86.7600 87.2400 L
  85.3200 89.1600 L
  83.8800 91.4400 L
  82.5600 94.0800 L
  81.3600 96.9600 L
  80.4000 100.2000 L
  79.6800 103.6800 L
  79.0800 107.1600 L
  78.7200 110.8800 L
  78.6000 114.6000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 86.1600 117.0000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(prev\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 89.8800 107.4000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(ail\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  81.2400 32.1600 m
  81.3600 35.8800 L
  81.6000 39.6000 L
  82.2000 43.2000 L
  82.9200 46.5600 L
  83.8800 49.8000 L
  85.0800 52.6800 L
  86.2800 55.3200 L
  87.7200 57.6000 L
  89.4000 59.6400 L
  91.0800 61.0800 L
  92.8800 62.2800 L
  94.6800 62.8800 L
  96.6000 63.1200 L
  98.4000 62.8800 L
  100.2000 62.2800 L
  102.0000 61.0800 L
  103.8000 59.6400 L
  105.3600 57.6000 L
  106.8000 55.3200 L
  108.1200 52.6800 L
  109.3200 49.8000 L
  110.2800 46.5600 L
  111.0000 43.2000 L
  111.6000 39.6000 L
  111.9600 35.8800 L
  112.0800 32.1600 L
  111.9600 28.5600 L
  111.6000 24.8400 L
  111.0000 21.3600 L
  110.2800 17.8800 L
  109.3200 14.7600 L
  108.1200 11.7600 L
  106.8000 9.1200 L
  105.3600 6.8400 L
  103.8000 4.9200 L
  102.0000 3.3600 L
  100.2000 2.2800 L
  98.4000 1.5600 L
  96.6000 1.3200 L
  94.6800 1.5600 L
  92.8800 2.2800 L
  91.0800 3.3600 L
  89.4000 4.9200 L
  87.7200 6.8400 L
  86.2800 9.1200 L
  85.0800 11.7600 L
  83.8800 14.7600 L
  82.9200 17.8800 L
  82.2000 21.3600 L
  81.6000 24.8400 L
  81.3600 28.5600 L
  81.2400 32.1600 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 87.2400 34.5600 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(sscbl\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 94.4400 25.0800 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(if\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  78.6000 197.0400 m
  71.6400 214.9200 L
  71.6400 203.0400 L
  63.1200 203.0400 L
  63.1200 190.9200 L
  71.6400 190.9200 L
  71.6400 179.0400 L
  78.6000 197.0400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  78.6000 114.6000 m
  71.6400 132.6000 L
  71.6400 120.7200 L
  63.1200 120.7200 L
  63.1200 108.4800 L
  71.6400 108.4800 L
  71.6400 96.6000 L
  78.6000 114.6000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  81.2400 32.1600 m
  73.0800 50.1600 L
  73.0800 38.2800 L
  63.1200 38.2800 L
  63.1200 26.1600 L
  73.0800 26.1600 L
  73.0800 14.2800 L
  81.2400 32.1600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  135.2400 47.6400 m
  181.5600 47.6400 L
  181.5600 181.5600 L
  135.2400 181.5600 L
  135.2400 47.6400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 145.9200 131.4000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(mv2rm\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.9600 121.8000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(\(converts\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 142.0800 112.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(blif-mv to\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 146.2800 102.6000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(reative\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 141.8400 93.0000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modules\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  158.2800 181.5600 m
  153.8400 201.7200 L
  150.2400 190.5600 L
  111.2400 202.6800 L
  107.6400 191.1600 L
  146.6400 178.8000 L
  143.1600 167.5200 L
  158.2800 181.5600 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  135.2400 114.6000 m
  124.8000 132.6000 L
  124.8000 120.7200 L
  109.4400 120.7200 L
  109.4400 108.4800 L
  124.8000 108.4800 L
  124.8000 96.6000 L
  135.2400 114.6000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  158.2800 47.6400 m
  142.9200 61.4400 L
  146.5200 50.1600 L
  110.0400 38.0400 L
  114.0000 26.5200 L
  150.3600 38.5200 L
  154.2000 27.3600 L
  158.2800 47.6400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  233.0400 114.6000 m
  222.6000 132.6000 L
  222.6000 120.7200 L
  186.7200 120.7200 L
  186.7200 108.4800 L
  222.6000 108.4800 L
  222.6000 96.6000 L
  233.0400 114.6000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 194.8800 131.4000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(\(rm2intf\)\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.8400 121.8000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(reactive\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 192.2400 112.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(module to\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 194.5200 102.6000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(interface\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 191.8800 93.0000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(integrator.\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  280.6800 93.9600 m
  282.6000 94.2000 L
  284.5200 94.8000 L
  286.2000 95.8800 L
  287.6400 97.3200 L
  288.7200 99.1200 L
  289.4400 100.9200 L
  289.6800 102.9600 L
  289.6800 126.2400 L
  289.4400 128.2800 L
  288.7200 130.0800 L
  287.6400 131.8800 L
  286.2000 133.3200 L
  284.5200 134.4000 L
  282.6000 135.0000 L
  280.6800 135.2400 L
  242.0400 135.2400 L
  240.0000 135.0000 L
  238.0800 134.4000 L
  236.4000 133.3200 L
  234.9600 131.8800 L
  233.8800 130.0800 L
  233.2800 128.2800 L
  233.0400 126.2400 L
  233.0400 102.9600 L
  233.2800 100.9200 L
  233.8800 99.1200 L
  234.9600 97.3200 L
  236.4000 95.8800 L
  238.0800 94.8000 L
  240.0000 94.2000 L
  242.0400 93.9600 L
  280.6800 93.9600 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 243.7200 112.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Interfaces\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 681 1893 a Fj(Figure)32 b(4.1)p Fu(:)k(Con)n(v)n(erting)25
b(Hardw)n(are)h(Description)h(Languages)f(to)h(In)n(terfaces)323
2167 y Fm(4.2)135 b(BLIF-MV)686 2482 y Fq(BLIF-MV)33
b Fr(is)f(an)g(acron)m(ym)h(for)f(Berk)m(eley)i(Logic)f(In)m(terc)m
(hange)h(F)-8 b(ormat)33 b(-)g(Multi-)323 2708 y(v)-5
b(ariate.)41 b(It)28 b(is)g(successor)g(of)g(BLIF,)g(and)g(it)g
(primarily)f(adds)h(non-determinism.)39 b Fq(BLIF-MV)323
2934 y Fr(format)g(is)h(designed)f(to)g(represen)m(t)h
(non-deterministic)f(sequen)m(tial)i(systems)e(in)g(hierarc)m(hi-)323
3160 y(cal)e(fashion.)59 b(A)36 b(system)h(can)f(b)s(e)g(comp)s(osed)g
(of)h(in)m(teracting)h(sequen)m(tial)g(systems,)g(eac)m(h)g(of)323
3386 y(whic)m(h)32 b(can)h(b)s(e)f(again)i(describ)s(ed)e(as)h(a)g
(collection)i(of)e(comm)m(unicating)h(sequen)m(tial)h(systems.)323
3612 y(In)c Fq(BLIF-MV)p Fr(,)i(there)f(is)h(an)f(implicit)h
(assumption)e(that)i(the)f(whole)h(system)f(is)g(clo)s(c)m(k)m(ed)i(b)m
(y)323 3837 y(a)d(single)g(global)g(clo)s(c)m(k)h(although)f(the)f(clo)
s(c)m(k)i(is)f(nev)m(er)f(declared)h(in)f Fq(BLIF-MV)p
Fr(.)686 4063 y(W)-8 b(e)23 b(implemen)m(ted)f(a)g(to)s(ol)g(to)h(con)m
(v)m(ert)g Fq(BLIF-MV)e Fr(represen)m(tation)i(of)e(a)h(of)g(a)g
(design)323 4289 y(to)h(reactiv)m(e)i(mo)s(dules.)38
b(Next)23 b(t)m(w)m(o)h(sections)g(describ)s(es)e(the)h(to)s(ol)h
Fq(mv2rm)e Fr(and)g(the)h(translation)323 4515 y(pro)s(cess.)1931
5094 y(36)p eop end
%%Page: 37 37
TeXDict begin 37 36 bop 323 -89 a Fv(4.2.1)112 b(MV2RM)776
1291 y @beginspecial 40 @llx 40 @lly 592 @urx 321 @ury
2880 @rwi @setspecial
%%BeginDocument: figs/car.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Photoshop Elements Version 1.0.1
%%Title: car.eps
%%CreationDate: Fri Nov 07 2003 22:05:19
%%BoundingBox: 0 0 358 207
%%HiResBoundingBox: 0 0 357.75 207
%%SuppressDotGainCompensation
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%%EndSetup
%ImageData: 477 276 8 3 0 1 4 "beginimage"
%BeginPhotoshop: 3614
% 3842494D03ED000000000010006000000001000100600000000100013842494D
% 040D0000000000040000001E3842494D04190000000000040000001E3842494D
% 03F3000000000009000000000000000001003842494D040A0000000000010000
% 3842494D271000000000000A000100000000000000023842494D03F500000000
% 0048002F66660001006C66660006000000000001002F6666000100A1999A0006
% 000000000001003200000001005A00000006000000000001003500000001002D
% 000000060000000000013842494D03F80000000000700000FFFFFFFFFFFFFFFF
% FFFFFFFFFFFFFFFFFFFFFFFFFFFF03E800000000FFFFFFFFFFFFFFFFFFFFFFFF
% FFFFFFFFFFFFFFFFFFFF03E800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
% FFFFFFFFFFFF03E800000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
% FFFF03E800003842494D04080000000000100000000100000240000002400000
% 00003842494D041E000000000004000000003842494D041A0000000000670000
% 0006000000000000000000000114000001DD0000000300630061007200000001
% 00000000000000000000000000000000000000010000000000000000000001DD
% 0000011400000000000000000000000000000000000000000000000000000000
% 0000000000003842494D041100000000000101003842494D0414000000000004
% 000000023842494D040C000000000B6F00000001000000700000004100000150
% 0000555000000B5300180001FFD8FFE000104A46494600010201004800480000
% FFEE000E41646F626500648000000001FFDB0084000C08080809080C09090C11
% 0B0A0B11150F0C0C0F1518131315131318110C0C0C0C0C0C110C0C0C0C0C0C0C
% 0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C010D0B0B0D0E0D100E0E10
% 140E0E0E14140E0E0E0E14110C0C0C0C0C11110C0C0C0C0C0C110C0C0C0C0C0C
% 0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0CFFC00011080041007003
% 012200021101031101FFDD00040007FFC4013F00000105010101010101000000
% 00000000030001020405060708090A0B01000105010101010101000000000000
% 00010002030405060708090A0B1000010401030204020507060805030C330100
% 02110304211231054151611322718132061491A1B14223241552C16233347282
% D14307259253F0E1F163733516A2B283264493546445C2A3743617D255E265F2
% B384C3D375E3F3462794A485B495C4D4E4F4A5B5C5D5E5F55666768696A6B6C6
% D6E6F637475767778797A7B7C7D7E7F711000202010204040304050607070605
% 350100021103213112044151617122130532819114A1B14223C152D1F0332462
% E1728292435315637334F1250616A2B283072635C2D2449354A3176445553674
% 65E2F2B384C3D375E3F34694A485B495C4D4E4F4A5B5C5D5E5F55666768696A6
% B6C6D6E6F62737475767778797A7B7C7FFDA000C03010002110311003F00F554
% 9249252955EA56E655885F8558B6EDF582D2262B758C6E4D9B3733D47538CEB6
% D655FE1767A6AD2AF9337576E3D6FD9611A4C891CC6E6FBBDCDF6EE6A4145CB7
% F50EBCDB72B1ABE96DDB4633ECC7CE2E6FA76DCD630D5533041F5ABF52D7BBD9
% 6E4B3F9AFE7553CEEB3F5969B1B4E37461925ECADEC71058D7399E99CCAB9B1B
% 4EF6BEE6635991655B1F5FFDAB5A2C6DB4D4D6179F6D8039B25DCC6ED5FF00BC
% E63FF90CF511A6CAEEA9AF01ACB43C01ACEE10F68FE57E7A7F0F8ACE3F06864D
% 9D6ACDD6578CCA6CA9D90DA2A75FB1AEF4DD67D8EE7EDADDEDC8A994BFD3DFEC
% F53FE351FA63F22EC6A6ECAAFD1B5EF2EB28DFEA318E22CDD5D7706D4DB1BFBE
% FF004D5A7C3886112D3EE783DC0FA2DFED3942B60A36B449ADAE2EDD3275DC36
% 86C7E6FABB91E948AD6DE5FEAEE6E4E5FD65BAEB1E62E65A5CD6BCB990D23D26
% B3F7EBAFFC12EB9735D07A3E461F5FCCB0BC5B4501D58B49F738DA19733DB1F4
% 9B5BBF4AE5D1971DDB1A373FBF80FEB7FE414DCC98998E0F97863B35F931318C
% F1DF171CF7F35DCE6B44B8C0EDF1F87E72AB63F36258C7024FBE20B869E1EE6E
% D77FE61FF089DD73B6D9E87E96D6C0F50091FCAF47FC1BBD3FE6F67FA5FE7113
% 11D73AA9BC16BFB0221DB75DBBF46FBBFB2A2DB56C1366B5FA37314D871EB368
% 02C2D06C0380EFCF8FED2321D3FCD8F9FE544519DCB20D9FFFD0F5559BD4737A
% 9E3E496E362FAD432875BB9A0B9D658D3FD1190E63687BAAFE6EDB7F4763FF00
% E2D6924929A3D37373F330064E4611C2BDCE706E2DAF9700D76CDD6BD8CDACDF
% B77B767ABFA3D8AB751B7ABD75DCFC6C4AEEBC01E8D4FBB6B1C7DA1D177A5FA1
% DACDFF00496BACAC8C6BBED99361B1F6B2E63195540695ED05D63191B777DA1D
% B1EFFF0009ECFA69D11BEAB646AB4BD53D1B8D81D6B40B816876BBBB3B76D3B6
% BDDEE1FCE398C41EA59155915B1C271DC2CBAC1A8601EDF4A47F85B5AED9FF00
% 07FCE3D0EE69148B5993EAD0F7436C6101E400E06A37B277BF737D3DD5B7D547
% F4EA3B29656194550F0CE24FE66F6FFE089C0510569B2296617D5FCF736192FF
% 000F061FEA3503A8E466B0D74E0560DF7074E4BFF9AA1A367E9ADFF48E77F80A
% BFC223666662E163BF232AC15D4C12E27EE1A7F29DED543A5754A3A9875B8848
% 35C9B287E8F6027DAEA59EE6BB77FA6FFA09C01AE2E1B88DFF0076D6CA42F838
% B864751FBF49F0F09B875398C7D96D96BBD4BACB0CD97BC80D7BFF00EEBD7FE8
% FF00715A6B4386D7080D1FCC8E076F747F38A556C2D9677FA53A99FE592A45A0
% F3CF623421024936775C2200A1B38DD62DEA7461BADC715FD8ACA9EDCD75AE2C
% 2CA454E66FA366EDB90CBCFE733D3FF89FE76BD6A770AD81D21DE9D733CCEDEE
% AAF50355669BB248F428B7D5C87BB460AD955DFA4B9BF43D8FDAA58B9B865B5B
% 1B90C736C138CF2F04595B5A6EDD5BFF003FD1ABF9DDDEFF0067E9122741E3AF
% FDCA223D44F6F4FF00DD3A94FF00363E7F951151C5EA781653B9B7B205BE86A6
% 0FA85FE9359B7E97BDEE6FA6AE35ED709690E03C0CA8CE84B2036010FF00FFD1
% F554960610FADD565C651AAFC5968DC76EEF4C1CDB5CE736B146DCCB1AEE978A
% FF00E7317D97DF5A8977D74AADCB35578D915BAF71C56DCED9B6902E2C6FE819
% EE73DDF66F7D9FCDFF00C224A7A1556EFE70CF1A69CF655FA659D7EEC679EA75
% 63E2E40B48ADB59758D356D6ED2EF7B3F4BEA6F4D7B3AABB2E86B1F8E69364E4
% CB2C6BFD20C3FCC6DB1CDF5FD6F4FE9FF83F5118A0B12CC2C7B45CD15D56E4BA
% 1A010D36BDAD7B9ADAD9A35F7EC6BFE833D5F4D4C39D26BAA1D6197D86604FFD
% 2FCEFD1EFDBEC59BD673BA762D9894E73E1EC70B296FA62C756E12DAF32C691B
% BF45FCDFE83DF67A972A19DD272323269EB5D36F75BFA46B6FA98F9D8D96FAA3
% 1AC616EFC6733DDE8FFA3FD229E38EE8CCF0090F4CA43D32AFD1B6096511B100
% 272891C70891C5112FD2E1475FD63CDC3EA36D3D731C0A9FC318D0EF4C1D3756
% 5DFD2E977E7FF84FF47FE892EA7F579B6359D5BEAF3F7032FF004E9741D3F3B0
% DC3E8BBF7F19DFF982DAEA63A6646433A6F540C06F0E38E5D221CD3C557FF83B
% 36FE67FD6FDEB0EAE8DF58FA2752633A593998D7BBDC5D0D10396E637DB5FA8D
% FCCB6BF4EC7FFE06A684E3A4A3FAA9D6B197F339A21AD931C8DC6779F1F16938
% FF00BA304A4DAE87F58FEDB6B30F34FA59E496D76B5A40B23E932E60FA177F67
% D35D031E49DAF1B5FE1D8FF5553C3EA7D1F29B979F45950762B9F4675C5BE9BD
% 869975ACB8DAD65BE9B1ADF53FE2D5B73E87060758CFD27F372E00BBDBEAFB35
% DDFCDFE93FA8ABE49C252B8C7801E97D7C1B78A13846A72E323F4AABD3FD6FEB
% 2B231E9C9C7B71B2182CA6F63ABB6B320398E1B5EC76DDAEDAE6AC9EBBFB0B17
% 2FD6C8E9B564DEEC4C8C916C7BDCFA9D8DB3103595D8E73F2AC7EFABF73ECF6F
% E8BE9AD3AB22B2C6BD9636EA1F3E9D8D2093061D1FBFB51DA4C7B4983DC1D130
% 8B6405E63A7750FAAD9D976B31FA4BB6BEDA696DED60D8E9B19EE7B9AED94FA1
% 95874FAB57F39FD17FE2EBE9BA6F45E95D2458DE9D8CCC516EDF50562376C1B6
% BDDFD46AB38E1A2A1B40024F100493AFD1444C5CFF00FFD2F5549249252954C9
% DC1FBC35CE0D7349DBCC77215B491069443C8E6FD59C1B306C6E5F50BB18E6DF
% 90F2E7069F75DBAFF4DBF686DCEA69C4C765FE9FA0FC6FD17AB91FCEFE914B1B
% A574C665B8E2F5C7B5876DD6555BAB6565AEC873C6C7E3FA2CF731AEE9DEC77E
% 8EAFF06CB6CAD751763E3E435ADBEA65AD639B6343DA1C03D877D763777E7D6F
% F731EABD7D23A4D4182AC2C7AC561A181B5306D0C7FDA6A0CDADF6FA793FAC57
% FB97FE97F9C48C8D559AEC8E117742FBBCC0FAAECEAF898B954F5CC8CCC330FA
% 416B5CCDA439AF6B99EC7B5FEFFF0009EFAAEAFDEBA4C7C56E350CC7AC3CD758
% DAD36173DC47F2DEF567170F130EAF470E8AF1AA92EF4EA6358D93F49DB2B0D6
% A323C72E111BF483607895BEDC788CEBD440893E01E63AA63FD5EA5D6B33FA6B
% 321A26EB491B9E5D98F14D8EA6A7FF0038E7DD463FACFDF5FA1FA154F2B3FEA4
% 52EC8B3F66B9D7D569160FB33D9BAC0EB5EEFD23D8D66CF52BBB7FF83FFC0D76
% 6926AF792E92FF00A9DD4FA88774DC20DCEC768CC0E7D4EADCDDCE751EA377C7
% BB733FA9E9ADF38CC264D67F10AE6C66EDFB46E3A1746B1F152441A41168E86E
% DAC00239D3E688924825FFD3F55497CAA924A7EAA497CAA924A7EAA497CAA924
% A7EAA497CAA924A7EAA497CAA924A7EAA497CAA924A7EAA497CAA924A7FFD900
% 3842494D042100000000007D00000001010000001800410064006F0062006500
% 2000500068006F0074006F00730068006F007000200045006C0065006D006500
% 6E007400730000001E00410064006F00620065002000500068006F0074006F00
% 730068006F007000200045006C0065006D0065006E0074007300200031002E00
% 30002E003100000001003842494D03FD0000000000070101000100000100
%EndPhotoshop
gsave % EPS gsave
/hascolor
/deviceinfo where
{pop deviceinfo /Colors known
{deviceinfo /Colors get exec 1 gt}
{false} ifelse}
{/statusdict where
{pop statusdict /processcolors known
{statusdict /processcolors get exec 1 gt}
{false} ifelse}
{false} ifelse}
ifelse
def
40 dict begin
/_image systemdict /image get def
/_setgray systemdict /setgray get def
/_currentgray systemdict /currentgray get def
/_settransfer systemdict /settransfer get def
/_currenttransfer systemdict /currenttransfer get def
/blank 0 _currenttransfer exec
1 _currenttransfer exec eq def
/negative blank
{0 _currenttransfer exec 0.5 lt}
{0 _currenttransfer exec 1 _currenttransfer exec gt}
ifelse def
/inverted? negative def
/level2 systemdict /languagelevel known
{languagelevel 2 ge} {false} ifelse def
/level3 systemdict /languagelevel known
{languagelevel 3 ge} {false} ifelse def
level2 {/band 0 def} {/band 5 def} ifelse
blank not {
{} bind
{} bind
{} bind
{} bind
/__settransfer {{dummy1 exec dummy2 exec}
dup 0 4 -1 roll put dup 2 _currenttransfer put
_settransfer} def
band 0 eq {
systemdict /currentcolortransfer get exec
{dummy1 exec dummy2 exec}
dup 0 11 -1 roll put dup 2 7 -1 roll put
{dummy1 exec dummy2 exec}
dup 0 10 -1 roll put dup 2 7 -1 roll put
{dummy1 exec dummy2 exec}
dup 0 9 -1 roll put dup 2 7 -1 roll put
{dummy1 exec dummy2 exec}
dup 0 8 -1 roll put dup 2 7 -1 roll put
systemdict /setcolortransfer get exec} if
band 0 ne {__settransfer pop pop pop} if
} if
gsave % Image Header gsave
/rows 276 def
/cols 477 def
357.75 207 scale
level2 {
[/CIEBasedABC  9 dict 
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /DecodeLMN [
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind
{{0.0000 0.0003 0.0006 0.0009 0.0012 0.0015 0.0018 0.0021 0.0024 0.0027 0.0030 0.0034 0.0037 0.0040 0.0044 0.0048 0.0052 0.0056 0.0060 0.0065 0.0070 0.0075 0.0080 0.0086 0.0091 0.0097 0.0103 0.0110 0.0116 0.0123 0.0130 0.0137 0.0144 0.0152 0.0160 0.0168 0.0176 0.0185 0.0194 0.0203 0.0212 0.0222 0.0232 0.0242 0.0252 0.0262 0.0273 0.0284 0.0296 0.0307 0.0319 0.0331 0.0343 0.0356 0.0369 0.0382 0.0395 0.0409 0.0423 0.0437 0.0452 0.0467 0.0482 0.0497 0.0513 0.0529 0.0545 0.0561 0.0578 0.0595 0.0612 0.0630 0.0648 0.0666 0.0685 0.0704 0.0723 0.0742 0.0762 0.0782 0.0802 0.0823 0.0844 0.0865 0.0886 0.0908 0.0931 0.0953 0.0976 0.0999 0.1022 0.1046 0.1070 0.1095 0.1119 0.1144 0.1170 0.1195 0.1221 0.1248 0.1274 0.1301 0.1329 0.1356 0.1384 0.1413 0.1441 0.1470 0.1500 0.1529 0.1559 0.1590 0.1620 0.1651 0.1683 0.1714 0.1746 0.1779 0.1812 0.1845 0.1878 0.1912 0.1946 0.1981 0.2016 0.2051 0.2086 0.2122 0.2159 0.2195 0.2232 0.2270 0.2307 0.2346 0.2384 0.2423 0.2462 0.2502 0.2542 0.2582 0.2622 0.2664 0.2705 0.2747 0.2789 0.2832 0.2874 0.2918 0.2961 0.3005 0.3050 0.3095 0.3140 0.3185 0.3231 0.3278 0.3325 0.3372 0.3419 0.3467 0.3515 0.3564 0.3613 0.3663 0.3712 0.3763 0.3813 0.3864 0.3916 0.3967 0.4020 0.4072 0.4125 0.4179 0.4233 0.4287 0.4342 0.4397 0.4452 0.4508 0.4564 0.4621 0.4678 0.4735 0.4793 0.4851 0.4910 0.4969 0.5029 0.5089 0.5149 0.5210 0.5271 0.5333 0.5395 0.5457 0.5520 0.5583 0.5647 0.5711 0.5776 0.5841 0.5906 0.5972 0.6038 0.6105 0.6172 0.6240 0.6308 0.6376 0.6445 0.6514 0.6584 0.6654 0.6724 0.6795 0.6867 0.6939 0.7011 0.7084 0.7157 0.7231 0.7305 0.7379 0.7454 0.7529 0.7605 0.7682 0.7758 0.7835 0.7913 0.7991 0.8069 0.8148 0.8228 0.8308 0.8388 0.8469 0.8550 0.8632 0.8714 0.8796 0.8879 0.8963 0.9047 0.9131 0.9216 0.9301 0.9387 0.9473 0.9560 0.9647 0.9734 0.9822 0.9911 1.0000}
dup 3 -1 roll 0.0000 1.0000 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 255 get}
{pop 3 copy pop le{pop pop pop pop 0 get}{exch dup 4 -1 roll exch sub 3 1 roll sub div 255 mul dup floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse}ifelse}bind] put
dup /MatrixLMN [0.4361 0.2225 0.0139 0.3851 0.7169 0.0971 0.1431 0.0606 0.7141] put
dup /WhitePoint [0.9642 1.0000 0.8249] put]
setcolorspace currentdict /PhotoshopDuotoneColorSpace undef currentdict /PhotoshopDuotoneAltColorSpace undef } if
level3 {
/RelativeColorimetric
findcolorrendering
{/ColorRendering findresource setcolorrendering}
{dup /DefaultColorRendering eq {pop}
{/ColorRendering findresource setcolorrendering} ifelse}
ifelse
} if
/beginimage level2
{/image load def}
{{pop .9 setgray 0 0 moveto 0 1 lineto
1 1 lineto 1 0 lineto fill 0 setgray
0 1 translate 1 cols div 1 rows div scale
/ratio {cols 400 div mul} def
/Helvetica findfont 15 ratio scalefont setfont
5 ratio -20 ratio moveto
(JPEG encoded image needs PostScript Level 2) show
/x 128 string def
{currentfile x readline {} {pop exit} ifelse
(~>) search {pop pop pop exit} {pop} ifelse
} loop } def}
ifelse
12 dict begin
/ImageType 1 def
/Width cols def
/Height rows def
/ImageMatrix [cols 0 0 rows neg 0 rows] def
/BitsPerComponent 8 def
/Interpolate true def
/Decode [0 1 0 1 0 1] def
/DataSource currentfile /ASCII85Decode filter
/DCTDecode filter def
currentdict end
%%BeginBinary:      25897
beginimage
s4IA0!"_al8O`[\!W`9l!([(is6]js6"FnCAH67k!!!!"s4[O,!"9,=#RLbF#mh"P
$OR7R'b:]]%i#op',;/o(_I/b$k*OQ&I]'V$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$ipeF$OmRT&.T0]'FkT_'GM#e%Ls0b$k*OQ$kX'[$k*OQ$kWmV$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k30O!"fJ;'ER"l!?qLF&HMtG!WUsU"99MC_uW(&!!*6(!<E3%
!<<*"z!rr?'"9eu7#RLhG!<<-(!<E3%!<E0#z!!*'$!sAc3#7(VC$P3:="9AT+"9J`3
"pbA7$o7na!YGM;+VHL55uD&(,&r/h"r*2nYsKZ\'iMkW1Gj-(d6e-bP#Ll/nRHVt
(8A*e-:F%sA4=A1F>ar`<T7T\Z\66FFlW'_-^:E\[$ASZjRf:V`RX)C<b?N0QDV+1
f&lZb7os>ILR4pJa4KMK&HDk6!<NB,!sAc3#6tG:2$![Y&Ha12&d1Kt@<!J)"YtXk
'VVcu,Jd:*n1u>!iGsO56W4_0F#<D5"r<r=K*N_\_U:i9<217?79)6fA`E9eKYu8]
j7>a)UkQ1@`73l?V7":mjn2YdG(u<[[`6n\p*Vdh=(c`4Q`%=5s4RG]!s&B'&H`UF
561@UP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPetS^N@f>Z_$[8)Wqln:
mf)=)8(Pk0T3';%>mChLDWu$rk@A,YEN3l>Z'<YAN80?K^:]cFhe/giec,W>Zdl$\
l!8'%m\QE%Ec>j3];O7JXE3/:b74Hc^CfiTVSmE+^IOCc!(tl?lamrOg3keoWgt;+
!LY^4ctA2(8Ll9dD5FAmPfFeugSDu.Ve%W=3tAjia:Y_iCc*p32f?4<Z<kjiqubP8
odf?O=4Y#gF2#Ou*[OiJM=o-%)]C34q6.,'?`!#Cr9(8uJ+t:jWh,"4m-uNN%.Pi(
lUP1E*>>@&Q%@BOlP@4n;mGQB\ZIHgk4@h9P3n6OD6N/QKNeac<Ag=u8[m9;Di!J(
E^Ko%H,"EYNfZemqN[!3O6^Aj&$9r&RW.#D='<%0bJhG\XkomRfNh"?p:ZH'9i#Ed
rr>Xe:Zg7uQ'>*[)%S;="\V(Z1C9dAG]A6QW<^Z](TQKXjCVDLG8qRI29q:eChkQ4
^r",Rq7g.^ZZl1Zm:+CWR-q/)D\CFQ-g:&KML7omd>hag6Z\tloc)TeN&e$7&D^#1
ppj,BUg2.LJ`UHb`_^]YE";NucMg$C?N.F^3c@ilS?0/.1G=!Let'4@9Q%.R5G>.B
2u2(14G],08n3OO%80nf,K\B&c=N%A<XDgml4#V/+RXE(B4PL5]U&t2-2J1T1:H5l
>@&VkVN<6k'5Gd7YOl-h9>\2)/g.1-6IulGd1+qIZLGu@g]TL2%EW\f^Jb$$5Ti_3
/e^H1cD,H`YX.hc#M-&UNIKU6A\iEsFE/R+O"$-E4Ci6TanUU.3J[d6C@(R7X;9f]
@g7`M0&!dmCMgc@b4A:i1Fdst?BL*F`aX^p`u)lgD_9ZA)jYPrM:rmp8L0Qk77ebf
8lA5+P*D?$$.9g0i1Qo(TSXYe50C^"'3s^%oFqH<]M4E=jGGONIbOm9o6oed6+X:,
2.>#0Wf=]aC2FHO1^%e(2s+WZYHq\(#G&t:T[');eNZ=X-WlW%F,:S&6HT*\g@G+,
RmsPskpk:ZbrJ``YPLsIN1ie$mrqZ[d*HVCMMFQBZ96MKB6I+IP">g+,a(_k8L0Ht
s3UF<P"?rK,a(_k8L0HsP"?p`Uln:q.3t'J8kC:k;NaTsPkk=Zpo",l-*sZN=3UA\
/.B!mp72<OHYT7`A%'XK=]afM:K,[?CF9qs1?uHYfFGd`q_C@UO\R-hQ(LtpkKr*]
l`#*-<nH#B,;"@K0l+8MX4ON3dJ^5O;VlUhl!6qpm2S69cUrU=ZrG4lmZ%*,<ki8F
N80>LM2R'TENn]2)]lQC9hc%+A='oFFb[05T'aWKnVT+iqR=uPS8d%`DJOm9O6GiQ
bcUWeO(LmZ`l'dH[Q35\_/6_#\Q<na9.oPFSGaeTeIS]$)m&^nY'i)]LrHPNe"N$>
_,olB7<W1lhpA[_4[$/:det1mXWPs]1+Kc\J*-Jjq_-U:An$1PeFgQ%kZ@$FOm2`!
QHr@Wo_kAZe(CLNd/#Ck[,$;^nZaZeFumbpY.#10**?QH)XX#_e<JfrJ,U`YnLKn)
!/Kq@!7*X*]#qt1c(WeCPh2+[A8e?rLU#2ngUb!!R-h(pje)PQ2#aNT!9H*Drkd.a
!2S%A^jh=BXc(dpWjb0NIC3PWG@BKB\fL*;g26NR0l:j<m$D87Zh/E(QMm)7Il[?T
U%Pjo5NeqM3UXo3D>bk[JR-qGbrE2d`]"n(l?D7a%qW-/AU^WDfi'Zk^])b:8@.UU
5dlPiXm)4=A)hJ(4YEJ7b4hJ#qDGgQ.eR0:ZY.`lk?7Y8K:CA,a`g:mcE5?nP]"UT
!7b@tZA)ib4[0k]Z5Cn\e?:4NHJ:%K-hA1>,c?^g4Y!O&I7(k1@q6N7D/Is328Q]R
qSjNb[@'"V`d>!/6RntWTBRE)5L0,?Ug46#\Yc.Q^:A@&`h&dGd`,^W4TO*eR8&WX
5P$I<Pgrc0p4##,Cg4Rdl5/!bT8N>LdkNG_lOC",lPU/36Wc(AaN\Ri2H<ssqK@?M
J$"3qMd=)/Vf*ZQoW2;u1NBYhkf^_bXcZm_AWP\r90GpMd:;q'2nsS"Uo2B8!6'F\
om0WKeE9%$.a4qJ=DMM,pOQ=)/ub.JioK/^g=P*CZJSIM5-LgTf4TS"b/b.>Z'oJI
bF+)Brl,<c[Hm'_1E/7=b^;H#b.,(7aKDs0a6n/NB;oYb*rYOHhmjBBFkk4UOjR]n
kjrZTT3@aZ2K`5X0%%Y>`!/D-9:#SX(`u\fbKii$l0c^ZL\6YHf$r8N!f)-+VOUiU
oldtD9tpW-:\60cl*\cc]gG!Ck((bTr"2!SYjbd,,Hg4KikD.8>j@jui67delWDQ3
,;l1+g%8Qs4^WE4l[FKQ^SUpRem6+2FhsA5i-R$+daIiJI4PS.n61gl@mb*^[M-e^
!*(?KaI?7.*nm9&\0ntm[iOgRdj%9:8^?'\Dg7NuLVB4ZZl[pJMpX;RGM2T%WJ>pd
A%cq1IBgYfA^F&]eT:-#a`)H89l4@E#i.W2EXl?)=S#1@\E?`p!3\o5!)h5#H-]:c
T3'!X4Whp-i2Q>J!&Rt'Km^5r.2#2u8^gR/,a+CZQq6_/0E=[;`fcg^58<Msfg3@C
!+S*dV=1[sepFr(U<DG.hsFsTF\q(A5?(/51;O&\G$7?$eL_6S@:lScgj@2CE.0H<
(-hW$YF<qn?#KiJ/Q0>)XI(YZ#_KG#gtd`,f4>cdA&3oDSQ,G#(0=e5Y:jm:A&+8/
SsbBU*Wb%YoN&#.CCgUoA1PVrJ[WN>5l=JUW%u9\78TQ.P`eT`V'M3q.7keJ8q6lg
oi.)G,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,fbS&\mf(j<$"fT*oL^pR[lsK=+\]B
"ip@-.]&b>C9>`rR,bn<f1GcfokqmnF07<?B4*sZV:-:Ykde5H(a]Z=<5JW*;71o!
CRN8dJ_o_j(LFb3hm>5(\4k3U2WTtuQ'q7*;!ADta0i5t9HUq]*'KS#bW5fN9];^9
@n_Jt!Um("jLTa^:?1.sfA/[p^!7nn,cXgU2Vb%H[-n*^H-Io[m4qFe,"33(/C1;,
H^OO0nL/Ne@ntc"8b4BjL:0`8<M*iG]RQa_?\1NeoEP;,rqHE^qpO@$!8]qdLi@E$
*J>-j;X7312WE;`S-\;2<6"&ZdOssolXRhjh=LcXG5E=2XQ\JGn3hCn2&;7J#_f'7
R"^;Umr,Qm5a?]IE4N?f==THN0<q7dBOR"0SQT?1Nisc99-n81@"MGEJVCK!rS\)Z
'm`VlKA$O.I8CU@#539f:Gn3B)==Ut&=X_tQW)i3I;E?$1&d!l_.K`26PB<%Q[6E;
`2^%aSRHAFrbadOcK?J7R3J`\I\$F$YDVt0^RAp/Ng_=ZM!fClOO4JM*%H@3ogCi*
$Mc#qQ:WDq6DWkKP$/<#_;QuC2h#L4=R_mM@p,u`2WV9*-+]1j9m0k1p7GuL8nVYj
r>WTu.tR+$<17P,CGbgcP2[fRB]UNQWI^d1:QikLIJGO@_`L";[$/G(m**[UITsdV
pY5\cGR=5K3<2,W8]BGW.K5P@83drrh2cIa&eXp`:b.+`W,MBmKZB>@-H^WuJbYt5
A,QN"785kH$:uM);NaTsPbaI6,sVFXoi.)G,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8>
iW,1ZF=`MJ%Z`9cOATO0$.1r#*\*8YZ,/A!fje>6*Dn#B%Cpc_3TBM8@s`#!X'(^!
AubfnoVHKE'i-K)m2?Yn-c[AS^Qsh"`\38GC=gDA'iJbL:"m-A7;o?7g,SMrgME!F
1pm7+A61du0XmA\WUia,ldo,*J-C&BWJYJa(Qn/Ld='Rf:n9][.Vk^0rBWOrQ-_*+
^d&0sk[R>)F,nKa_3L:K50;B(VAeS_Sg:IqXTM?&M=m$nCTd.:i:3c8Pd/:I;V]YS
a(+a7G7\VmKDEMaO".:iimt?@a:/5?B_%;@YE$GA)dcle41k!Xj\I1pBtMh62d&Em
-9DT>l?@]7^]C)/o1\%9X9(@P!?e&42V)2!8"g:'pKLp>#>u'^dtr&fRV85!^5'?m
nOEDS[&^IocW8:W]3Da^ZuC@8eCGP`iM#39$S+EuU#:dWGp?cOX./dGU^[)=Es*7n
\<f)&\CU%>oW.EQ0jYfrdASROV]E;g=GI1r_R[g#+pS&I7F([_&7poX:+9*_M1^5E
CpRi+Hl&F[m/RhM1%DMaBO_#jVGFt3<V,AIB767s[kI*)8*[>c!1aSm#4c1jfL[[m
m`5mGmrl_L'H".Q$UfLP[*&=omGt't!us.QSU?X_]N%_hBMgsGGIW/.MU0MhY4-5-
=87H'V$CV_,.jm.H1qe+5dC$oX",tJR]>=DHRtZBmHbU@bM5OF*npE2.$6q7UR?sS
C;[`_S]=LhG"CjV2<J0<90q\TX1E'tYiOjA:Zi6Fo^ob$F)B&]RQ(Dc87`B?Dtm!g
'B(W02W*H72A6@rM>b5n'<3"(>5!^7!7;E*as,.46G"^(,p]Co81m]!oFJnU$QnRS
MCN>rE)K7QJs;Ei,c)cL8La\goi.)G,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8CG\Lk%
iCOD&37-U?FH=*]+>pa9>g6GKJK^%r3^.Zn2.aNBQ=&O$N538;I<pZ`;q<7trWBm$
Jlf5'Cq!2tYE2+l!,djX;qI7$#dA21+U[M(k^r-'(BDi$I3b7SRV,NSiqL)!mVdVF
Ah\!,.G%4;;0;_TCF&\UiLgG^(iUuMbufs:10Uj_R"5UR;6SKgG_n+SV&-KSm6/mX
OpA:h)i5TlF/(Vbj&ci?oa-[.>;]VjXHE.@9s4@X>BN&-lK@<3j,hi0$@J;3rV]hQ
)S#e/NLR(f<<l[Kd5:od4t<J5bc?.>E8=QFJ-722=u$2+XUnF,4O\L?Ek=EkTDm92
Jn)^4$3("m.JP$=<,5=$!7_V^m9?L-%\MmQ]2k1mWcbClSDC>0M;Slb`\N\8Ltr]6
@Q94E?`N"CO$h^s#/.qC>aJ'm=k*C9XI`BHZ?&(`8Sqk(rr>""F?LH*rrC`PRq'qg
e_V/%`+($4PFP>BXMDVN@!u?6q:]!nFd1<tDAkIFY3Ug(6Z(D!9kBC#@&N5_<.H?&
NfcDON3169+dD7f.DF*n*Z]7IE/@=I<4cM5jZ?fR?1_:B?:nc<&-dY5>C.m\;M/RW
XedK1`Z`fO9")H,hip8/:T"+V7`FWEfZf^=c^q.;m;>9Ln=)VrC9)[gFd`:^drMi,
Y:APT)FhWBAY9meh5qS!LtaNlA&8"HXaD\DCoX(?]"?3?FZ4Va&(tHBS>OPam'W=r
oslk,YH^(.2WS5p>D^j!)?0[CmTPVLCNAPukl1Xg)BIbniYP<lRd1uMeOu2.6QCjA
1#\ObV\An^/0FfMIL)lqIl\/UCo\'1dgkWj8pl,]IOM-srr>=^;,[tjJs&\N'Vpm`
,q1+&8PfB9oi.)G,q1+&8P2Q"P#K5G:s@2\l[Mdt);/.-oU9e@NRKSdm^!J3!F:bq
/E"7SDR\'k2U2&a<6K+%fiRc<G7okkMjr8'3f\(/oP1Y1ZPD(4k(Zh.\)pWc4kJc/
[X'i[Wp9T6OO$P"D9B=0e6--[\fY&NT:==bEA8K`\e]/.aMP+uoetTLHWo^<B2H&Z
eRb"^WKt"OrrD83Vk[VQ=$Yfr1V/$KIP!AqWHEHqH')XI[I$2c^<L6]I@g2DXSY1G
Xnofs4b$NXm'qmI@m7YLF-Y3gFZBlNlS^f,SX]I'dqNN5Hr6#L<?(>2WjZHu;f,Q"
onr#+mdu%enWD9?hP[i[obUcYS[UekePj_#3V?ThWEr6]fh:W/-gA,,rB4Ja4W.<u
b#S*nlZDb/TmdB?In\,[ZLJfU3riom<Sul]$6;W/`Q.VU^Iu$#ZEgh-0(nN%CTd?X
rC,rKCSu=T!3B=o7fpn>I]nn-S7fFU*roH+B;KB`n%J+tAlCqP^IMr$J"-*DT%+&r
-G2qkO_D#DA4W`0h#0c^[Z"g&F8hNg<fE26Ee!7*:B(;]TDno$m-jo5;7Gj]9k+Qj
3SJ`Mr6b;O&Srk!`n=L)\3-Rb$I>do,:Sf@F,uFIq5=5mFVSXPp*D_9*hI;H*.<Gt
J'Ij7f/6ipB(hkENlk>_;gmW#&H9X5VYVk0[]c+ln*ugqH<8\qb1fM2l#$(k4DX83
/^0YckNt3-bNn&4rD2"Lmen7!5+:lM+4`':f.\/1JR.s"q9o,1?OhL5bC/%;rr>"X
!,:o6e,KCUl.Cc@e@pKtopY<TSWEKgN1H/<nG6@pZ&S+jgTgYA+82J]r?q2CRbc/i
C_&WR/5T3=AK;RfgY5CpSZ_D'jf\P"KgN@o+&Mnbd9F<#PXuLPL7qI*/VU$5:NUXH
GX9:%lA5R"7;*,K"N.hL`NE!g%T[.#eaKa?OL'#n`aL.i]/R=AY.M99`p8B%)oZ^W
IsFTk"0Aj<3AQ`]LT4^75J4CUhPHSq.Ku*Hg-`D)Xgu6^e#[E72,eq2j&QNmZ\0lR
qY=[2Lf,*m*M]E2_DG%e/S4(eRTi@=1mai[$H72rbWfGkEmYLhWjS'PB=I='9[N'N
Z;kQW4+Yn#T<tVljh1O6h<p<X6^e!/4:2AuP`81rOW/;!p'NJ*)_E!'U#eI!Ff&](
SJ(3%ISsF"U\0Ba',]<BFb`[-2b#ED>0&'f4OGlE:2a(T%Lk;")(p+:G'H!6rB@I,
L\H"(CuiWe%Lm#;Sh]?hA:;d!3$7SY2>Tg3Vl.r]i&sBuMRRb?Fct.QcOcjoO*G_K
bIDb,Z1-Dgg2@q4D^ADJN/n[4nMfD4^]=lJ;O^aj)K0Gi2*2l(bV<5dNU!p+??CD=
$E]>opUQ7d25kDc-r=MrWcO$YhjU+Ch.2k^CcmCei<Hc8F@KA9fQMff,l+cX<7V;O
+GD7cSaOuQ2NS1njpGfnCZK@*R2d>][Gu/blmS9>f^WYg)N@c^g0,M7XZo3$K3G?#
oQ+c0/q:9]M=/$4rF5*+&*p,mImgQ]gmn7DlqlS:\,Mr\\m8+[F5HB5Z./cXqHH*%
5=iJk2[C>prb\3k#5qHaF>WY#PDrQ_=C`DkjZZ>-pDpeD53I7<Wuj,<f40.FAQZ[]
g?HWS78-Ft/hL"\E9LP#N6Cg6n8e(ST7_:Z2=JMkK)3TMA%)C;hn;+$da_(,U0WI/
p1DU)1gH&i>rhjZ'/lNG[`ZED^'!$P!m30+9>*FNZZS4WrX.e6CTX\)f3%"DF]2lo
Wl0A;^Fk"?T>[i"k8WnZ6a0"P+t-Y=6b5hlP"L+OTRJ;f=T8@dr)$B&l[k9k,S[&;
8L5f2P"AILeb)n)8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k9^e^H=3o*o#857]2.^bl
g***_jJqk?Jj9I0L8B7`WK!BP)UC5ilbrGul6*V%#[GWf8_mmV=-$S#<cIdjDck_u
RbI!JUhG9@Pd8596<Y#@%)QUG3lWMK,G#*d=EuCA;[]TK]W@Ss[m/HCgMUZdSk:U_
=_$:Oj>>Bc-2I`Q:6j4GR'YeQ+(NADiOl3TUS!Ef*Y\Wl9f8+eI\;`*)d_**36(+T
!A2Ah4tWj!.a[E0Y>a`:j#>Gg)_H5aXlN:@.T^aUoa5YK\=[a]Pd#*H/N6jWhVfE/
!-fa("d6;m-V3L]Jt+p[BA,-PXB^15D^'FkY0:>l*:a3+#Jh2u*)bI5Uo)?XUYWF<
4-\2E2;'\(^aoqA3W2?Fb[F3BMkrX4X3s)UE.M:*bI`,Hi8"E;D6,Dqpa;9!*E4S]
-:Uoq;uEg5mO85j,I1eN0;Q3ecga?oa?JVonaTYr0L?_YD2iGn%L,5j7aYLD;g]6Y
N?WJ._Im@@QOUd]Ohai%[PcNOXmA@cb'RH!=kj76-M4*J<->S8FZB&1@$3K_j=%F%
hVIo(*mO,B)PZC6NijU+CMX_AR6Cq,/QKInUYs7qCF^"a*Miu<YT24N(R*$t$34UI
a6$D_#J.6I2:`q'6msFuC_;)`jh^C.\+;pG/Se`"-^:Be/eae)BdH"Efp)dr=OK0,
J=jq/2+IFu#O%0_JG-\jOOoJpm"5)*_^samCmrN!i=?RLK\'Fgks"6YBF3@250*9S
Ml7QZ&G&tdriL@n9^WqUh,W_\:7M`BEJHN#)r3:uZdh6rL:c[RcXjE+^9^No?KO*.
'UZ/\Lc\"E(+e-0Lp*7;L-BI'R>17_R<Cr@iq47,1m=SLiP0&S9PF@ZWbKW!h7*5L
3?G#_>FACU_#^-sGT7H&/#Uj]dqlgFF"=N-6eMM,E;*@\/g9)BoN3&T(B4Ad\XoN;
9$FakK3h)a1U0KG3K0M\i6(J-Ult,p>@#cd8%[:CD.g':jEf>,fhBTd]bf^ZLc=p*
'E)OdoWb?NG(2Ob&6on^89[c3,gku2UZ`eW.MW"%IOM1NFhpWpOpY)Y,a+CT8L156
f(E"*8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k<I15e1GE[dJ'i_uq)PYY!5>L)GDW<:
iV?=RJdC-G8-9JNnrZiLlc+&'Oag0mD)(l#XS1^-P/':qZ2LGNZ@e-`=s;^lT^^n9
mr,ki+GD^Fb9VY*5hC`=iJA0BGjT=K@nosC(c;6a9[9,.@fr5c8J2@O:0kCFqJBih
7(I!\mF=(el2[!BZ2cGM0fB,f<E[jp(0>_E.g(pL7*B1-A"L^F<PsAl:s`Z3m]sF#
<_RDe;**=gLn2s(3];m'N,3*!#/]u4Ns8X^2/QhIZSSR1Q*o*r>O%8^B)/02jG%/5
I$4OT.k6AU[k=maA]@5qRa0-`m1EII:XSThp:kG!G909K-rSH6rGp/CDn"^>6u,fS
IS"NoDEW>NXQkU5,p<knJ=](W;+`'4^*ukA_+N.QO2XEIVLLX7%R)?XA-Rm!R,rDF
Dm%[-[!UUmf^*uaTo@3G3ipGl35IB&4$KN27IOd+0q]s6)iW*>C&>f\/k6H<*d'IC
hYkZ`e)BFde6H8E!<d)Sr0V+-&B09hL0Lbcm\]-Wmk)On!F2=XgUd"F;Adq`$)tNW
ie6OuhEB^F4(ZoZglUZScifV[m4E*@N/nZl5nZ$r-rSu?FH\(D.S1nK;P>\r5tW:Q
;RI]t3-MFNTsi"mG/'(QAftbd?H1X7dP^PeoMmAl0+M^F]'!sU4aNg[9&@NqY1T-M
%J:P1`]\oWe*\]%5;`'3(:J(bl2#n;kbm(=qOd$jFnLK'=nM7\N9WUP%A&SL^=p<;
Od#*<GH"kA^p?)F]k>fPl"V"2<%Y,NlZG-@[aek\/?RhjY%rdDZ0Z\Bb]?`(#FfA@
RausL&JeGDZKa2]l'Y=gXe`N&Q<6_$\AYf*^O*FNa5OVeY[?["DGTJ1bf]pW9%ANN
(*1kem`D2O^!JS3KfF1@(Ce0!O;;MIWCTE[Pm71#Yg81Vb5/g$O&Em(iZi$[XF-JW
J)AhWCuSqK%cK+'PXL),<0Bg"Y#7h:P*D,$,cC[ooi.)G,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8B\4pL`Y:=40c_Tdf:WeLL9jhVfrX`>pNqd#U]9ILuGTJ<+l'@&9,s>ZD
Hg##ed66H0f6q2A'.<r['[.<+EU2`?\%u.fl'OJRQ<d_th)cU]Jp>8h(0KZ@HZJ(.
^Nm/<e?SU\%^!TDARDJSmIkm53-+2C9BmNR+?p1neNZHH/Zb.a[BZp^R$+!kEJY<b
dTmRrPE7MdWCM+@(1e8N%+[8gkPNEp=Nmca)Y5FYeQlBa4<coc<:"l1T.X%NY<]fV
X\`P6^#=UL1F+XX>)GtT00CaqK:qR^?5D$"2=aK\%^QDV1s`_I98HGbD_<aD!!F"H
HU'[bKi.Y(g&0<IP6<<uf"B!gg,holG;M;29-cuf7Yok9%[Q8MWq%[5^CJMkIZ@ms
Y4Y5Z?ICCp/((B8%[1\)r5tkd5-JJY<aNTXNHb/u(c02SVR/Fm3NcP2235uoUV[&0
kqrb!H'dLF/>S@/02Up-iOk'OZmr@k9`ibAas2Sp%cPHmViGDKE(k(Se"hD'Y:;$C
dGMT;gVYQEo>0@g0W^B'_!I%aI+La5^9h*1'P2W\_d'/3*2a=I)g6=K?\ee]bGj]3
R`^U39A\.59\Wn"F+)7sRGa&no]9*p`s4Hj4;1jhY$GCaUc_X?FuhZ*+P8b$XmNC*
S,R>XP,@'[Qe1UhSBhmqZ3/+ACV-u"M'Y_95tL4&jWp!\.7jsid$X<ng]BJA.3*0:
&]$_E(St]/\+>QDCk1Faga3LY:>O=)E/2YCSWAd'e#[ZJWR^TZ\kYF1l6eY93L5t?
^O6T?ca+hq!7G4c<'0IdrrCDJ\%\nkA'=-:!)]08^:)\ZK,e*MpBeS]XfXS0_X5rc
>jkbCHi60,MZ24Oke0Zd?`3P1[bn:Ah0JrOqQP&)Aj(3I0malE.iiKWf9ZF:d5UFC
]C\:p^[Q#_r*oV-c2,WVHgI+0BZe?*\M[FT"bhoDY=$eb2Q+6tIZ<giDuOh,rd)!f
_$3D7kh-htgR")kNM#lkMfS%('pkG;=O$73;Z#427RM'kATV8QZ`)K.lHs8..DH4]
\WNN`1&<$2]/LZ2W8W0!bWF\O>DoK(I5Zs%D:i`9kcYo^e_RR^rce%hnl>V&W5l"3
m\'FG?.&M7Fu(SUgt\ATD1/Ll)_5@0AS"ir-@LoeG2KdrG(8:`C@StglMW6ua4?=I
dIhjd?%ZHA2b3+t@GU5*_W']5lq?<I_^"fgX?Rn`IkbdKYLUe8aL1Y:XK$o^e3:Eb
Hn4fg#2AJ.Nhr:>2O:W@@lj@Q.qPi*p#KBShVZf\Nf9T'q7l+-7^.3qDbmi$17%+Z
QHTbLk%-amQ<;_g@m+Rt>>AaRjK\BhO4H%a]+Z:R1qtOc*j8H6b^E"(UTa?qRFCNf
r@b;*12;5?B,7pXCpNN9oc.RN<L208QLF]FF_8@b<U+)S53o;EW--FcI;J(VATUUH
iH6cAm!O0jV2Y,RX!k-@H>\41a3)-_L,,+,qQ\pbm2V(D9!#nS`j3@cADHB[S.3Eg
cn*:n)$N]9o-=6mDsHdmaQ`^)>Aj;:O,oEO=KJg`[m^`"f^(LnQ*o9TGM+Car@dC&
qc08)rdj?EXTne*N/j:fof]uIW4L95mCDnuWh*u,c`5__9(H=Yb$S675>An*l0@pr
kfUJomHD6-VuHaU:8?G)_Y[pe:rHoZ4dO[7b9Ie;f)95>lKW<@*r@M.UG;b5N:a-]
hpA4m(SgZ+S_*kGAp#($0ld'(8(qsSlR7,]Ajr;VXiJ0M[b[?Frr@ZL*M92-Dq#Gb
V^!W0-[!dh@1`d&N-#)e8Ep\sr+,JJ7qQAX=O[.*i8:ik#M@bcS9ld1]t<`K]k78A
6iR-hZdo"(Z'##@3X$A.oao?*H;1pZ`G\VT<biH_l8c:_S(lGmoU+7Drh]nuT?R/G
XWFTNQdPZ[5N=Drp"Q]%YGPplrL0g?AHu6p'u$a6Aa[1Y\*S&*rr>RSrfXHcWkV-i
ErAr%-eBE5dPC$0'fBORS*O"6MeuSkDPRNe_h!G1Vc3.,lTNk^F^IWpm!/;i=6i*&
XYk1RjaW4!R>]TVO%Q_d2!&hj?]fSC.W\<X%(4\B`oLrG50mlq5?RPBd!ncqXBRTo
03H*WI4l\B@$_jLQBsCPg>H./G#n>9rH>I=qgG+#pT\\HoFJ$k?WmB5og.$/V]2^Z
X0AkB96%EK9b^Z2\[?!Q[?b$Tl*\b.5Feq,f[!LFl$p\P!)DfB/*a8b:$PjK`QH/B
X`Ib4hAdVKR1-C1j4SKsD7aGqA,!5S4W6m;P+Vd$oi.)G,q1+&8P2Q"P#@H7,a>*f
8L5f2P"A8B[)HSU!3[kcGQ.Y"n!E-(DPj\$_KIf*\_<:Y&>C(/f7`gtZth$di10\O
G-17-90n7-,bVT@kign,4Fg^/H0fcE6-42Va([l%=gSDj4sDh:47$sEg$[Hk>9;MQ
Y6D[u"sY)oGrh.`.VpiRRs+?nPcON"G+g_YD,)a0ehd`;W;ArP?0ShSnOgGooOVW-
]hO_#He>B2B4G@(foY`8^'N6Vesb@XK<M96\_jK:'.CBODDm."-fTel0F=DkSoVl1
O>r/feN3,!I>?98Q!igXFK_dTieGoqh>u0M&<O`l\["OiP'2tcMUVI:1EI)kXtSZ'
EShL([6Bq:Q]%24ZEac]<hkZ!qBcI8Y<'Mbf6#bOYjQFK].TH%1%Uhm*NrEuEmhs!
",K"N[lFl6M;ae%c>QM!c`FFl_iFtA4^74-petaBgs=e^\USQTnP*RpgrQhWhZV^p
VhjPYrRO_RQA.\'Lb_1GT.b0hg>N0X8]"X3ei6rR=Sf:&J_/n@YODpb[[XO.CUe,d
YiUPXLOP7B1!=+GFW5I@oY.l$JIU/R+.BeoQ.GKslOJ-DrrBXCpKsc47`NNY*WEHa
g4(T55:mb2LoE.M]^50N)&n.aqQH\t8TVAI6fP/WV66#WcdI#palpKCI<"K-+HOi3
f)FCo!$KA]je"M)#,FGc^-%M#)hb=,DCs9_*MoqX*IJTK=ShZ%Tecs^g^h092p$<n
G0gJHU.7s9;/O%B7-O((?UN'@g4u,*V^Z\eF:tC]7uo)EP*Q(W7Z-K.Xs#'E,_MAA
?<n&][+Nqn,h6DhIY9f;IP^9"T1AK(>Y"R`^FuO->b7^_Q]mc#gm@'/fAp4I7:NoF
6U_dCl8S0Q^J!g;hoe_ehP@[-nY=SSK@+[D1Ga>m?]kH6^^Y@\=)Qf/>P?@7DTfec
p3Nh=>P+QGQA8B7n^B0QVIrP>2GRj[9u]3(^4U/0WhtO'nm.N00<"TpD,tMKec'de
rCr,E7[!?rXP[3`b3FIU]"_%I2\-9\-Z.AAdd_`CgPC?Qo\>D:XFKOR'Nmr(p<EU;
X5-S8l<T`FqU^GP^M)/SO-&/BP@:LB$GfiNGhs@mltt(dJ#R!;eBc^[SU[I-lIfW=
G1'X1e=Wk0I:jQf-t;"='67@%93uAeehXmG1#M61m2p#Hn$atGRjkPkoR>D)VRhGF
Uln:q.3t'J:]Ji8<0Bg!.3t'J8kC:k;NaTsPbaI6,q1+&8P2ggkS5r_^RIG@b)"kJ
DX',>n.Y'qW*O%JNDnCC2Q)k-G>-%=F;4`TC3<4*2jFel?;$?$Ph:0fP5=G9aSf8V
V[ILYd>aRZMmf1b1Xe>RAQ.s%fknKuIa:sbJ#92fKLb7JeE\WEqYTqLrrB.2*C&#q
Y9+i&ee^Kb^&J).'mb=o6XsKlVt?JHX8?RGd5lD&k>(>K/$IAPl$5tE@j&EB6eeZ1
4^)/2F^)O<m.D7b=uJOG!K?(K=!.*"TQL0i>Ht0*B3B!gh!:J%H\!L1I0BFr`I"*N
(KAD#SsQ@?qW9B[e^KuBcu*iS&5`M[Or0OD6`_ZdgYpitC!=E7GGb8+*7OOAkd!7a
=K`aJWt<*395<UXkIT,eG/qhQF`/?MAK*"P[C!:3nVkCrlE0=D&[\bH%r.)TR^U6A
0_!W7oH1.f@no3T[mpoYUVaRN0Nf@K:5)`nMHK<C)?_s<EtHIpM&PdiMq31X2bf[i
qGnVL`H(bkfiZNO\V*In]g![j[@4opQ<h!0bB'.g,fYM<(cf,p#g6hp1W[R(ar4"4
4ePR+b'<Yb<M$$^fNYF-h-6Z3K40!-Z;u.qms$NVAY:=ea4$tKgQO$]'`D)N4^UVR
e/mS0R,+Ns`H82&/0!hsjrV?aJ+K:*69$JoU\27gmL4HaYJ[ZDb]74UJb=KXJ!Tk_
KgR2^Uq8eZE,Mck5FSnSY=$:SBs7lP_-Fn(UADj:&Ec.H6F"kLqbMg>%.VKViB:Hk
(hJ`8+Ei.u5G_q#=@:ej0W;c6Am*ffe*k;W.>=(p)=CQLf)DjW?."PI\&GBH%W@0m
bC9C0Y%Nl]/l:<s>S`\&K@86E/$o)\m\4G@+;%uC8e45a\Akm[O?NSYUB!,sD%P:f
U?9";111:;<lZN/8emGVrhs-o&JO;ZAig72L0`_sWaGf^3E7$[X:'cq41I_^l-\ck
BRIUJidg_@cFTa0Rlp5XF]k%BGBP!h_grbXPP_9mK5?]DOZ[n9#(B,iF[''U+2B%q
JsOO&aJ+Go<DUba@O\A,%s3mrV]s84pAI4(X,?oW(\kaII]RX,YVUSp9pXOslbT=>
7lP4O9j4$-C3K!orp&n!8qO2:^TBX4l^(oR[b<CSZMpP_e=W8t@r3/>-t=?UO+uE&
C>!Ohp0?4s?i#7Zo`"p;;u4l?Ucu/./A+`;e1CKG'mP"a_QpY;$S,_mC!57feZ$R'
dJGL:Pr;QQb!+E_Q<0Hs(T8f$4VIoEpLHDD<L-.REUn%g%Nkr`/S6$Q1<XhuQ27\&
X6E\cImU0^V-C`8K@IKQr8"]SrEm[_`qm*5pL[jeD.1XAZPTQdFIo1T5#&5/?`*cb
<3u5o.t5IdrCc@&A#4TaqTG"lM!D6kVFeN9+?l\\c#(!E!R.^u?H:^BVELEJrr>XU
H>BMEf[OA>N-og8Xb=KQi_,=+fjilDqe`b/FdCcl]j#@P-(adD1p2),nSus&n(#W4
qF=B!JF'md3J,u0-GN<UC\/Oc5:Q<ZD*Q;&O,VDkrfbn*^K.\K8L0OrP"?rK,a(_p
s3fQ3laPFdRJ"T>U3/N%YN`S8/])C34\r6$>5GM,!OZ."Om00@HB'AQkC8'?l$ea2
r*fPKlMgibXerh!ND6MaCU3?KBlcSQgb>e0d_;2p]BgElYNY\01:-tc@eB[#XaMkg
(,&>)V_9tN24[5MS9nIMX_g%"37dH!O`e,fg[Zbndf0<T^6N$!_YWA\AcDa,H@>`e
lMgj$F_nX8N^c!L2k'`jD?`"'1$Uig<VY4Velhg@C:<$^J"tMXqQ"q>/fX#ilFf\!
FZZ@0@#T/=pGnK7(mj-BGJ![SkABlDrrBLXN%UmSqLqE*%%;5%CUQ:H/8^@V!'%3s
V`DB_\Z=#j`]m>a\_VJpMuM1bQ%epu59\m[G#d`FZ"eXR4.TI+h<8BMrVlkmr=/c,
kj2Sn?0`LAl;eXj9&+1c>sg5^DC\m`YHkocmU`h*>Be\UqH]^ghpR!7AX4U>CFQei
U!:K\\oJ3qZJ*R))NELNY2![)g&D$^`TL>FisY0R8(C:oXY6jYf_@IDa2u46grI"4
k\bed?YR'1[sh6n[`iT\iI1_+bcaIXbJh>lff>C#NK7=_]%7-@Z9oSBb6qG.cZ[ju
?WRK_PP#0Zg!oTI?W+ncIRd2RFiE+;ATW?crrB?@Fh"t5[dEkagMRauX8:T<ATe!3
.JA]qVi-hgWTr6O$qp-FQ+GrmZF@&F]'!rgZXmeAT)FOk>t:gc$B<[U2!*6=CittE
gDV%3EFF8jF*I"m=.Xh]Dq;Y!r[`$WcD&>A[`2V'.]dGMK*D-(aN%f*n>8rT4$QfU
oY-&Eg&D%>?`DslB&`L`!3Au](Nlf3TnQFNl021D'fGWu&_MHfPCA"ZO]>@Ebc9Q[
IFoBtb.AnbhR5:E.8QYtrF+n-?DlJfSgFAiDS#:3qVSTeIlVY@*d1N)pXnqD<W-@i
(A_@(;oH$0()gl@I:q'6Cmo+mrrCJOqJ(LLc[Y1prUo:N40$!o!+#T*oo?):>;6&l
qUq9FE3'8oQaVjEV3U;oT@>@f71JNB'K2Doh/Cu[(0au)S+^4eD62FTrNGqFI]Q&=
l2?q*Zhg<Q4YKb$?B4Jdrr?D=pdCAF$BbhFRu9/Wl=8o,mC&@D\W7fd.EJ4-HZq4!
X1FcbimrVWg?IMZZi:%",G"i7]nn2h6HO1`/gn#T<Ls-i2S+,/D#XM6aQJ'A@YN]?
3btc@f$;i,l5?C=kE_3.D70[)6GRNk?`ViXHN&nrO>-6=g\OS%Pe29+dHnrH9q*%#
!-145dXO.>,G2#]/-I``e*t]-rrCoP_WLjuMa"&j5-sA)gV1_W8[!#+ms\!6MON.5
D3dBO2I+M!XQ3=V5N[AiTVOY#'lU/6[_GM&!3+AW\*S9gl4?!(eXR_^r@hVf55QgI
Z]T%)r9)i$X4rV(o<-pCC+8h*_g7V!Q8i/FqLlDjBUT9a>e-u9c?]/->kUfH>AinL
@<_6GQ;DCLo<nl2Y$PsEiB,SE\Yh]?P`b98XH3EeND_n8/]SV!S9iugN+ROF7:;JC
@tqXdAi+D_I9&T"(k1B*^JslGlH[MZ?a[:RiWnMW[T.)Fl`l+'Y%rdS]oI$=c#Z]B
DcNPl5]Df/&:cngW0U,!rhAuQo:p$BGGeQ9D>#ljV![n8gL'bHf)7K%*D[`R"*$AZ
9MBIpe&h8XNKK-?Xrt9P<bi(Z-@M\5?Cc4]>/JHd#X0c*lX*Z-S+/oAL9()0YsK<5
pKZQnOjq]!e3(87O@G\UoIm95A%GZV*3KM2?VQ&S2NWBE?2$Xd>LD*cNK,6J3TKtG
f6+h;NG"JMO&&gJ(s:UEkAKdS)W/9l&7GX!>BmElm0>sSSINb`7?C#N7^Y1UW$S*"
F`-#r7TCb$!.HG]li-rcU8%!`k*_X=_%:-!r9N&5l`[0+:d"QOEG6@bA/+BUB9-Ps
gt6%sHG4mV09]N)gfJ=6B<>;9!!pCV!WN-+:XQZ*4n$Gc^\eic2-49mc.'7*!Ja/s
4kTJ#F`o_8X+.g,4_*dM)0NL_!7u:dicFrVVV/57Y/Z986Oq^u3,[^IleV"$D;S.e
)UZHm8850;9E+b.ccVbGnIJ=.8ftJjZ#fK?m1627Zuuhakl#iM2PAfp)dr3tH.fMW
*.EutU7_(cLp.Eb8q)c6hkp65n,E@kL9u7J1\ufsVBb3)G1Sae[F$:d2sFCRGC-B?
]aX\@c8L)+*Ri0nbDngu>WN_frrAe-P<26hE'+j^SM_%[o_a%jBFM;ge)ma"4;_4U
J^^C&%hqHloi$KU9bQ'hDE/BmQG(YFqQ'/pUln9J7)p:GO<-R-5QRlT<#&,C.W[bs
'BGh'CHL5<GBS3]PGEXU<_s:6qbM5oUMED+QF>%AID_AF97(a8.W9#^2tV"UmhABs
Dp``g*W/g2K@-ot<.PW1ics!!YtgMpRSm&J,a&L1O7Wt%'ag"pIOM1nFhpWpOpY)Y
,a+CT8L156e+H\'8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k6biGpI(q-T*TCgXbOVI+
\b;"EU#E=nS51EQ-S>Z?>3=p(Xl:%c(*2ehM9tajgcis\e`[P+Kk7e0OX.)FlY"f8
:4Un[0,j_mlu6XZUfQW5SaQ-YfmQq>fiIS(]eB.Kcj34<7CUfn]m-V2Y^p=u_oZ/$
G>l+2`NGRYEo*eD3q#pq7_XelIoL8Og6n0U*igEM3u6UuEbW/7g[G(gqG6`$*gSHU
kuh+Vb>-E+.moO\X0eD2HtNZ(WX!Kq*rE0J+&gLU/t8d3XBq``E3mKfdA\FiF&)Sh
?&U@`G1U5.AQIFZ>-7`LIeC`gHZASWa`qmG9eLKk)k_U4VWKhkeCYYhAn+o/895XD
gU[FZP0_B*rRGC1*-i&(qWiqp0P8R[$1EhrKSS!e:1^mBE3gS"1D1[DJ-D0>lW](,
m+YmJD0.tSQ?mZP[nZje+(b=.WHW&$;m^doXp5K<jYkgECOsRGEHNm]L,lFYS[c-l
T;;*2p0%Cq#EqV0:SWEm]bT7C^8Zt>0^?iTa7QJ:eE@EQ^HS]%$as>6rr>Q)5;L3G
QONCVNhP.Bb[\m*#,Ki8h%#D+mgT_QIeA&^;>,I/g0Ab5'X=j:1CC5-BCD`B[bFI5
M.>;S[r$A*gUW@Bj]AF(XA4JrDsEaMZH@1\mqk<+SaU,!g=mWP5+S=[R4OLT"/%[Y
n](pr1'?#rW4)*L<Gi7i1CKE3GJ=tU?i!,Rrp-EFR?ZjldF8BZ7TD"R[b1\t[PV1'
rM@cp[GSX&Z]74ZXU_-2J76T*&d!B;*E[T;9Iq)C\\/O>)lR_r^&+0mdlqQMV]rb,
%8c$C(R`q,Zkec('+S*T='*Q/mf^;;PGaSQT9U'0Gl9f8/mFo$4;iQJGC9a_pA:+[
rgcN$7^BfLH_GQ<XbiLn)WAHI?S4Q4+S_r>9,tT3VBlYUY)a^_Wck^%@@'qWjga3K
]eum.J/U3\h6l@kmnW"rmV=sTrr>2LD#H$?10]2J[XUH$C=<Z3)c!<M1^T>94P;Ii
,^*CM"tX;PML;c.B74=U31jjI($BnPeRNX&aJ=,?!8./X2nFq&a(7-qG%L[RX5_\.
$N+We>mJnenXIt<e[XF"0oj-9=#Xh?50j%<CMTZhm]iq,kuD$5rrBY0[FY2'[EnB4
rr@kHUE"`8rr>:1X8Q<"Ve9#-lL.g>\W+?GV;]g6"r0!6K5<*9b3m?lorbVEebW9m
)sC:3lEBi/T<2,@)[t&#TkiIi:O?40>h56"[VZLo!d6BLF`m,%r$@;2iO\JXlePA&
VcW(AK-nUro]L\LV[!/$ZBjQTbZcUBbI?k@I_.)<rr>jDhf#k#dXOJjL-K#@d@^)q
lK?^sX-**KCra9Vk@$N)m`;3s%!moAd/3@*kdq&"D8Z@0p9.Z$]P#jm[4@)5ocI5K
ZJ^.B^p?*,]5+FY9b)%!X`ij7Q:UZ*CNf*Q^RV^`Q[MTo)8-^]<V;r[J6La.F%^7h
L>^Ng_8l4,+)@KQD;S\"!+u62k<281d^">2dbHCTHS!,"SO92Afpu1s]34jij5afR
e8^t,<b9f]mB4WIoJV,af<Y;rd!ggk.\?SH)^^NDc*TQZ)Z)!2#kudAj4rO2+%#7o
@e7<teU!4g2m%2YV3R[*f/biab&u@>^?5kTDkV:o<h-p-pJYpXKiQfelTYUMZ@.*@
P\"IVpgQ#&+7V5c:CeZt)_a63[T/N<"%^YB)t\8.d7m;_2d,Ft?$e2Rl)jnAFkE#n
WUrrZR8sLr:3FCuWtM>f@p&uS[C"TUc,HgB[D0AToKKU@f/d1X;\?GnN/d]RBE@.'
hb1F9Nj6>k^Y`-&l+*SSF1V7[[XFKFcqTg,m#(l:`DpO1k#,oA5)lrG5)#X'0!FM$
m=&W7R/!4rX#'%%eXW.iVWZQtG"m87Y'o``b`%-%Vl/:(52Gpig<WNlIBO;+e[$&6
.aLH=9eI_jk`;f).eYf0NKZSti4*ZYeU"Ag:&=O@ITBYjdf!B(=`*VMq!MeL*6S98
?.Rj.5I'7Vm/()<HS#/;f=TSUl2=tk<DV,gZda$`Z`3%n:0VSCcXZ8Y2<,%7;uN#/
0"^c-HC7!nrd/2n^4?n_Ms9oelH_Ye<]roS4c\7b"<2'9E'$:IL=h!_O%fQL1^_th
c%HO4QaCt%<8$Ml#Ljn*kM-ISF7G=bV+KZbCYV2F9M7lu<Ojcem=2>SjGq9$+<oV]
EXN9neJ2-#,gtorIE,-F<`F+pY8\o9P!LQh,a)&g8L0Q#!<:RA<0Bg!.3t'J8kC:k
;NaTsPbaI6,q1+&8P2gd9kXEOWMj,#g%g(r7d=bbi.^Rq;gX\UMtsrW\]n^EmQ(?<
Yb(-R[>HLn*p6P?IuV%JI94E@&5I9hq0H0o]Z7=YBRfHr.kdiL>j5Tt$\)s=r/0d!
Q$W0[\ShASH5'Rh5-O2mqH]\e7eI)kB[cgmoh^^N:[?h8,\:TIe1&;<Wm)8Xf*bem
[edJdF.V,<rcZV#X)In@U!D?AI^\q+XnA-cQniL'l$5,5df.L<BZHgRhf,saj56+j
3H**<LMujjo7,0eJr`KL2bV/k)P^;:p:!W%a5$9eSaO6=p>#ZJV>9g7fj@aj(10s`
<507BbA.gL@k=pjD.5^sQVBA>:0gWK``ZVBG-]hhb&.(j'4nc=MA5OtrHkX=cCrfC
F##r*:(Pn,jYiVfO%%Z)O,9!^lQQ'<k#D?\[9\bmk?VA<rrAq7o^]b%5s9FkFAMEi
dd?;-H5C/R>Dha%dpjJ;D6J'lrr<:Bk]V9ei;Wenrg2*=SrqPeXn5AlDlqN/>CE*$
Z/"`lDX*g;RVh\ecWQOehd7JUrf*':c8VSLkn7XZY(L(PZ_H'(90-q7gMT)W!RMb2
<l^9L^E`Anrj0B,)sd/[?Vps=DG^2u9D[3D'<LHNH+<3j8,]-L<LHRk3tE,ON-pCl
k?Q?AHM5laqgCMGn&+e#_m\ZfQe$!<Io3fEk9i2-3sE-]fj-MjD^'t+XiJP)0"SrL
:-VQe:$fJ*W&l3iGL>X-l;:"UV<IT#<p3Ok4/[Lne\ls3*F8AAFL*"4[hg-89pXK+
8h=oEnFumJhf%_.:NlBfWndqik2JTAf;kl@gKf5n?Y-hLANltl9pXl>JZ\lXoY7HA
oTXZF,c?1heGPo#r[kjfk&ehk]NgADbJ!T1?`:FJfk#M)gDa2kHG(e4qCI-c*g`pB
gA:9eF*]LiY-HM3]!ctQJ(Yo=m#)cs[C6%+.`u$alE-=`=-`VU7T9"qXo;qI:[HVA
D<-+4qQ5s>?62QfQXeLRdpqrh>lfT,VS1"pJ#/1G=nZT[R`>$k4V(?U2u8s`9;(q&
X4(;$qL^?6%D*snFhkW<rbpE!QF?.@hu,^(Dn#ArcD7@qIobhuVq%;bSBE\XZhe8q
hpV%s\Xc4VK#>2\R5h@gfiPkI^&:I#<J^LNbe)=#7R*iVqL;c9=^U0\WFt,<1/;]k
CKZX]gT4t[Y')/S=ab4"\$PbNrrAiUhu!\N:XG[*1[<Hg`P2q/l.)5B>jH6JKeAqK
[_:7YjPk!&lME28XcM[KAj<3Wf_X).e:4M($RYtbNirgGiK97\?2)rLX:r"dU8s\^
D#XKeWN<#i=T6XsW:\N1+2tiQNj$n]])-<I0+GBmb8ab-\X$@LD*HPN!&i/MIK'<B
,3WcQ\M"]Gfa!i<0"WY!+4^6oO(LO.Ak!MEXEPVdEG]PFF)(I'mHebip?f3a([-@;
=#sF5qQSedqRKtPbm6T)Dg*;.bg4A#R3TVFCPI?!8@5r5e`UG)H#t,3d`L5KOkhk%
NS;a@%O"lpONq*"]oNkI6prW+$-%Q&PbJdb[I"I-d/%ZaTO[X152$5u[d.[<[;5dB
93sch1@;6HNj%!jl2La9<r+ID`9EZ(AA\pp%#p4OgFh1[f\5Y79p[oPRaug8BBYHl
fl^7oD:^qY<E"+pA&rFheq3(umru1@CJ[)@20tV>cB$KHB[=kuheg>JR7:17gI85[
^6:^-9.73lpHRn(r$B,BCfARA*?-l'[H-=Jk$Z9LCI)?<$[i9?L=NVR-+*Z+r&=VU
I:&b\Q`B_,DYh+`9s)NV`=?s<h!/ch,dG@eJ!B<!]g$/0hb(LEe$@_X7oIdRb+gm2
SBPVlR/&VJg0Xu#A&,CZD0TjN\W6UK`Q^$'okU5mS1?:40PRF'p6K%%h<*:Zrlgia
oe"6tl"k;&he0:fImFGMlAsKn*%Pt_nXM=OVTa6`ql[.]X0p'I+4dm@@^@67qu4k)
HI)6MZh^WP_FZ3#`qm0l0s/1DnQP*d;tau1Y'$i`o&kFYMR"7>=P-s[!9e[oWuM$G
oP@LAjr`,lY^XkW[N%NVT]G1"Zu5Q-?#u/).]p<opJYG_YJ."h]7%3]H@5i)?<%hE
[q90_e&TJ1f%g$JCD[MH4)4qimAt6gUo(?^*gumEp)_CAB6o#fV<_F!e">cOdH^\.
dbFUO:Y+4_I]r[ikg^:<+6pa_Z*7GgiC4R&,7ZBAI5X+oSW/ctIA2HVmIblWXn7$[
e*QanT1eI:*FAlNUXQ@<nLr__fsT%pNce.k>1QjSiue)Sg.H?(oeYm`Ir,m.rL'3K
YuYF<f%WW3@q$DNHu!JnT1<h`lXoinJ,RI'e=uE1hc<0jf^6\`[Ij><D@d['!7LV-
4mo2`J#QehRdBlXcMj%'b:HpkW;cjpmtjL^.qjBngmGLIOeQr]etG(JR;%>f#QFe"
0T;/q<C$o1Cs.d32RYPpUlncY$0_3jieiGNoFJnU0^cGeUln:PW?dWu8kC:k;ubD@
<0Bg!.3t'J8kC:k;NaTsPbaI6,q1+&8P2@bq58VT.O&=&&9S9_2#D$]FX"h!lb^??
T=R5I[PRYJgmuBD(DJUVi6pX#]2I`K34[tqrP3FhZ`0f$!(i/o_uc@:oJ>]3`r$_V
4Cb\7"(I;7EQC5&I3^;UGHUSpJ^\H#>tWF<Re1AbYHd9S;+!1tCZGEp7Tm$o=^o)`
f'i[3"j['kl(''#FNeWdeLYl(cH0p*3@u?\o"?R?U%UA4XgU")f4Ht:rYbJ,Fo$:\
R\lB@6PHS[qL^hOpfTRZ<`<Tt>Bm6Vf2JZJc55KrP=(r)jSo3:gO3i1I[u`"R,5QG
i4:jJlM)H(X887WQ*&<>ghRkXHGq/9+nQ?C/Ghl<Ze)&IZP-iMV=intV\6c/?dk>t
DF`9*>Y`',F7&c]FcMf4gKi;\bIfq1I5K\uZA)A#lD=2l`Vg#<]jKK#VQ9A3[,V<R
\(#J6l2<go52bU(M+s>hej4:mD0<#j%P;SsXo7?OV>Xui]h@YcqS^]XN"8\<?>XVo
XJ+3#k;p0pGPW,foR#1EKm!>el>K]!`V,7ZSGo&rSsEDJ@pP(R>OTY9].tqFR18Gg
jC;D0h>5)MTAb7NQ'%W\rF*ppb5VGU]c/aT.jF><o'ECN^?Zg)1XsXQ2^,>Qb`>Kn
R/WGS^X;]R!(<!BAQYR.I^S-_=2h'n59D*9HgLBWn\oD"pbjk1D:_Va!7ETfD:u]"
^X@Ua=C5>io(lBoeZOIUFk'pn9[R0PL?kCllJ$J=dbO^OG$>hsg7Q('\(:OrWpHm\
dB%ifUXO7pDq+(BnhY+-A%KFUN,=aSWI7o%Wt!\8A_1L>*rc5k0=01.!&5c`TT\7t
Y@dGWJ&Yhuka#iAADl!p?-TPrrho"(iOROFI@1#/o(!dcEEPai^\NpcRQW:j,rC/+
-hI6K','c1gad^h1UKro/WBYUpEOmn/%8QTG>Ga<'s3GndJ"rlT=R5IGa)^G2,[J`
1\XDpQH"C;qi]r=2-1[p2Qk9-l@YLc]@+;<QK@LOiTUASNSa'*oUGQ_@f-0*J+R+,
(ONEZ\j#0`rgSJgE:(KeTpOeGh6tnnTcXm7A(pC"Fu/#[rUlsYW>6dc,kSZenV)1/
ha+X!cf](d)[1AjF8\m@VpkP?rC+bTB^.`blK3TH?B<J)h+fRiX22'-<F)^YV:aGn
gLoa7^!F!rrr>jYjAGP66hZ#,\ia?"_\.^_j7Q+.?ntp0:"59YM'qYtjgu8`8X2#j
oP&Y.^=,MXbiCQh(KpU"dsA`0:<@YQiI8k#JPIVeQ.G)`4g,UTNHXdQBlBpI`lc&b
rc<>3/iV@q^\*6EQdraLT:"K3Q'Ij&FSr0V`]BP>X41jpRVJj\Z7*#;L:@($S*Rcf
!;?pu$gT`UX6Uj7qR'PBBjH@Jp:crD5cp)i^6Ucs-:;dR_oI1+A7YQgrEn%R!"!08
!5S6_F.dWh^!j(Ih+"(6Ct5\)#M/G;0;7lY>06dEd<9H-p/\.oof&^ueK94*j_"1S
N]pct^6#j(CDbon*eb<gdak\8rODk-UpKms!*@XO%2AD`<;s=K^8m<Z_3O>/C`H-"
InIqf]'VM[2)c;nhaMd+rL^[5BssKo%%Jl,]f`@d).kJ-e*4VNHDaj.4]Rn57Ej$@
rAuRni+5bUXnIYN,0-sD'tDk;a0M4oClDT'^=/!P9pK('8#_8l*GG;3dX?S<O_'m6
Io=4."7:H']pS4,2DW;%f480rdVmk9LYHkL!'sEFrr@K`I7<CD>G$8J1/:>:`qp/4
RZ39GT7%,pW'7i[XgQORbl7[OBDPW[qU__C7$R39?Wk+I@s#Jbc+qQ,'Qn3ZUF(`U
:al&!MOS"oU7?G6HSRf\gjA8X2Lg=ne@B^/;80;X5,$LjYk6eKOnPgO<aV\]H^MfT
=C71cgO@AhBm92M5P^%\m'H[%drp5!/sONTF\V-]iLM%1>LUONIZ<fCEaJ4u?`*cX
)ZKfdqQ!\mI8[lEh,C9F4Bo"9qQ5M-ROpD.Xl]#^Y,cCj\XoFqCDlteTkEUQ:LZqD
p:mdQ>B2c5a;MFX[X+^RhpCoY`tl-![@E/g*.)Z\Z^CTjCZtHZqa[L^)S7P,TZ4O$
CE6ofF$Kr]m1+C`i?.;B](`u(IZD"l][FQpSRmd<e^sZS/ambNE#XY%?u=ISfju84
gMSB4aEOf]n*3*64r-Nc!*f+GV0[VdV^fEQNF$t"G&&P/\Q5p7f30*?I>mmOm!ZL\
_:FE!Jf(;cChN0s\Lid=dJ"m(WbS?3ChN0s\Lid=dJ"s*WbS?3ChN0s\Lid=dJ"s*
WaUt\&&f8;!,s1@SM[07,a(bt8L0I`P"?pss46jBP"?rK,a(_k8L0HsP"?p`Uln:q
.3t'J8kC:k;NaTsPbaI6,q2gY*@n#[7TEem`ih"p/G3e]dCl%C^7EQKhkROMG?Ok(
J)NV^<mjQ7B2/65dJ@Hlq=p2dmC>r,0?Ul\Dmdi.d:]YLAbNO'epS?aK<+qcBW%SH
LM#W1]+10=B$rF)X`FM$<$ZcJme42ODmI^]XKJ#ZraMKpnjt:VrINBe7fA"_4YE/e
qF;U)^:@eBHVLl\QTNat!"\p%ei2:JqOXgHVu4d8[!F[t-XlK.K$RGan$^j7I.#fZ
[T`"%rr>.VM_"dMn+??mgIW\O3F>dt(2lok9[(KQ:+_b>TBb*>m<+"!gRXaDNm)XJ
XhKRilgO^0lJL"h!(;O3of)1);8m,oG!26-f3u64OcWiF#Sm3h(Ae$5<NN0ZVQ2IZ
CZqPc'^Vf9Ulq7<DlWaP(TSU`9f=r/]!g,dK73/@@p$klgY6;bY5\LLeR.plJ*C,%
rr>:[7BDYD.7keJ8lA5+P*D,$,c)cL8L[4VP"JVD,a+CT8L1,XP"@)o,a(bt8L0I`
P"?pq,a(_J8L0Hk;Fr-sP`eT`V'M3q.KA#m<0Bg!.3t'J8kC:k;NaTsPbaI6,q1+&
8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_k8L0HsP"?p`Uln:q.3t'J
8kC:k;NaTsPbaI6,q1+&8P2Q"P#@H7,a>*f8L5f2P"A8;,a)&g8L0OrP"?rK,a(_p
s3UF<Qcc9QVs:(Eb,HYalD0chW?eD,UmK6',cBq'Qcc9QVs:(Eb,HYalD0chW?eD,
UmK6',cBq'Qcc9QVs:(Eb,HYalD0chW?eD,UmK6',cBq'Qcc9QVs:(Eb,HYalD0ch
W?eD,UmK6',cBq'Qcc9QVs:(Eb,HYalD0chW?eD,UmK6',cBq'Qcc9QVs:(Eb,HYa
lD0chW?eD,UmK6',cBq'Qcc9QVs:(Eb,HYalD0chW?eD,UmK6',cBq'Qcc9QVs:(E
b,HYas4I~>
%%EndBinarygrestore end % Image Trailer grestore
grestore % EPS grestore

%%EndDocument
 @endspecial 1374 1474 a Fj(Figure)31 b(4.2)p Fu(:)36
b(P)n(edestrian)26 b(Crossing)686 1816 y Fr(Figure)35
b(4.2)h(illustrates)g(a)f(simple)f(daily)h(life)g(scenario)h(of)e(a)h
(p)s(edestrian)f(crossing.)323 2041 y(Here)45 b(a)h(simple)f(tra\016c)g
(ligh)m(t)i(con)m(troller)g(manages)e(b)s(et)m(w)m(een)h(car-ligh)m(ts)
h(and)e(p)s(edestrian)323 2267 y(ligh)m(ts.)j(Figure)33
b(4.3)h(presen)m(ts)e(the)h(example)g(enco)s(ded)f(in)g
Fq(BLIF-MV)2847 2244 y Fr(_)2812 2267 y(When)h(the)f
Fl(CarSignal)323 2493 y Fr(is)i(asserted)h(and)f(Mr.)53
b(Bean)35 b(asserts)f Fl(Button)43 b Fr(to)35 b(cross)f(the)h(street)g
(then)f(the)h Fl(Contr)-5 b(olL)g(o)g(gic)323 2719 y
Fr(de-asserts)44 b(the)g Fl(CarSignal)55 b Fr(at)44 b(next)g(clo)s(c)m
(k-tic)m(k.)84 b(When)44 b Fl(CarSignal)54 b Fr(is)44
b(de-asserted)h(the)323 2945 y Fl(Pe)-5 b(destrianSignal)41
b Fr(gets)32 b(asserted.)41 b(Finally)-8 b(,)32 b(no)m(w)e(Mr.)41
b(Bean)31 b(is)f(able)h(to)g(cross)g(the)f(road!)686
3171 y(The)37 b(left)g(column)g(in)f(Figure)i(4.3)g(is)f(the)g
Fq(BLIF-MV)f Fr(mo)s(del)h([BFM00)r(])g(and)g(the)323
3396 y(righ)m(t)31 b(column)f(is)g(translation)i(to)f
Fq(Rea)n(ctive)i(Modules)28 b Fr(done)i(b)m(y)h Fq(mv2rm)o
Fr(.)686 3622 y(Figure)h(4.4)g(sho)m(ws)f(the)g(arc)m(hitecture)i(of)e
Fq(mv2rm)p Fr(.)42 b(The)31 b(\014le)g Fo(lights.mv)d
Fr(is)j(fed)g(to)323 3848 y(the)24 b(lexer)h(of)f Fq(mv2rm)p
Fr(.)38 b(The)24 b(translation)h(is)f(t)m(w)m(o-pass.)40
b Fq(mv2rm)24 b Fr(is)g(implemen)m(ted)g(in)g(function)323
4074 y(language)32 b(OCAML)e Fs(??)p Fr(.)686 4300 y(In)d(pass)f(one)i
(the)f Fs(sub-circuit)32 b(analyzer)27 b Fr(parses)g(the)g(input)f(mo)s
(dels)h Fq(BLIF-MV)323 4525 y Fr(to)i(analyze)h(the)f(parameters)f(of)h
(the)g(sub)s(circuits)e(used)h(to)h(mak)m(e)g(an)g(appropriate)f(hide)g
(v)-5 b(ari-)323 4751 y(able)31 b(list)g(when)e(the)i(mo)s(del)f(is)g
(con)m(v)m(erted)i(in)e(to)h(a)g Fq(Rea)n(ctive)i(Modules)n
Fr(.)1931 5094 y(37)p eop end
%%Page: 38 38
TeXDict begin 38 37 bop 534 -124 a Fo(.model)46 b(Lights)534
-12 y(.inputs)g(Button)534 101 y(.outputs)f(CarSignal)916
214 y(PedestrianSignal)534 327 y(.subckt)h(ControlLogic)e(CL)725
440 y(PresentSignal=CarSignal)725 553 y(Button=Button)g(NextSignal=Tmp)
534 666 y(.latch)i(Tmp)h(CarSignal)534 779 y(.reset)f(CarSignal)534
892 y(0)534 1005 y(1)534 1118 y(.table)g(CarSignal)f(->)i(\\)1107
1230 y(PedestrianSignal)534 1343 y(0)g(1)534 1456 y(1)g(0)534
1569 y(.end)534 1795 y(.model)f(ControlLogic)534 1908
y(.inputs)g(PresentSignal)e(Button)534 2021 y(.outputs)h(NextSignal)534
2134 y(.table)h(PresentSignal)e(\\)916 2247 y(Button)i(->)h(NextSignal)
534 2360 y(.default)e(1)534 2472 y(1)i(1)h(0)534 2585
y(.end)2188 -124 y(module)f(a_Lights)2236 -12 y(external)2379
101 y(Button:)f(\(0..1\))g(;)2379 214 y(Tmp:)h(\(0..1\))2236
327 y(interface)2379 440 y(CarSignal:)e(\(0..1\))h(;)2379
553 y(PedestrianSignal:)d(\(0..1\))2236 779 y(atom)2332
892 y(controls)93 b(PedestrianSignal)2332 1005 y(awaits)g(CarSignal)
2427 1118 y(init)47 b(update)2427 1230 y([])95 b(CarSignal')45
b(=)i(1)96 b(->)2761 1343 y(PedestrianSignal':=)43 b(0)2427
1456 y([])95 b(CarSignal')45 b(=)i(0)96 b(->)2761 1569
y(PedestrianSignal':=1)2236 1682 y(endatom)2236 1795
y(atom)2332 1908 y(controls)d(CarSignal)2332 2021 y(reads)h(Tmp)2427
2134 y(init)2427 2247 y(update)2427 2360 y([])h(true)47
b(->)95 b(CarSignal':=Tmp)2236 2472 y(endatom)2236 2585
y(endmodule)2188 2811 y(module)47 b(a_ControlLogic)2236
2924 y(external)2379 3037 y(PresentSignal:)d(\(0..1\))i(;)2379
3150 y(Button:)g(\(0..1\))2236 3263 y(interface)2379
3376 y(NextSignal:)f(\(0..1\))2236 3602 y(atom)2332 3714
y(controls)93 b(NextSignal)2332 3827 y(awaits)g(PresentSignal)45
b(,)i(Button)2427 3940 y(init)g(update)2427 4053 y([])95
b(PresentSignal')44 b(=)j(1)96 b(&)2713 4166 y(Button')46
b(=)i(1)95 b(->)47 b(NextSignal':=)d(0)2427 4279 y([])j(default)f(->)h
(NextSignal':=1)2236 4392 y(endatom)2236 4505 y(endmodule)2236
4731 y(--)g(Generated)f(by)h(mv2rm)f(DONOT)h(edit)2236
4844 y(--)g(Report)f(bugs)h(to)g(<vaibhav@cse.ucsc.edu>)2236
4957 y(ControlLogic:=)d(a_ControlLogic)2236 5069 y(b_Lights:=)h
(a_Lights)2236 5182 y(||)95 b(ControlLogic)45 b([PresentSignal,)e
(Button)j(\\)2284 5295 y(,)h(NextSignal)e(:=)j(CarSignal)d(,)i(Button)f
(,)i(Tmp])2236 5521 y(Lights)e(:=)h(hide)95 b(Tmp)f(in)48
b(b_Lights)d(endhide)509 5690 y Fj(Figure)31 b(4.3)p
Fu(:)36 b(P)n(edestrian)26 b(Ligh)n(t)i(Con)n(troller)d(in)j(BLIF-MV)g
(and)f Fb(Rea)n(ctive)33 b(Modules)1931 5094 y Fr(38)p
eop end
%%Page: 39 39
TeXDict begin 39 38 bop 686 -89 a Fr(In)47 b(pass)f(t)m(w)m(o)j(the)e
Fs(parser)g Fr(go)s(es)h(through)e(all)i(the)g Fq(BLIF-MV)f
Fr(constructs)g(to)323 137 y(mak)m(e)39 b(an)g(abstract)g(syn)m(tax)g
(tree.)65 b(The)38 b(v)-5 b(alidation)40 b(of)f(input)e(is)i(done)f(in)
g(this)g(phase.)65 b(A)m(t)323 363 y(the)36 b(end)f(of)h(the)g(pass)f
(the)h(co)s(de)g(generator)h(runs)d(o)m(v)m(er)j(the)f(abstract)h(syn)m
(tax)f(tree)h(to)f(emit)323 589 y Fq(Rea)n(ctive)d(Modules)28
b Fr(co)s(de.)776 1951 y @beginspecial 20 @llx 20 @lly
592 @urx 321 @ury 2880 @rwi @setspecial
%%BeginDocument: figs/mv2rmarch.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: C:\cygwin\home\vaibhav\mv2rmarch.eps
%%CreationDate: () ()
%%BoundingBox: 0 0 456 381
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 456 381
%AI3_TileBox: 0 0 456 381
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup

1 XR

u
  0.000 0.000 0.000 0.000 k
 [] 0 d
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  39.4800 218.0400 m
  147.3600 218.0400 L
  147.3600 325.8000 L
  39.4800 325.8000 L
  39.4800 218.0400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 83.6400 269.5200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Lexer\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  183.2400 164.0400 m
  309.0000 164.0400 L
  309.0000 379.6800 L
  183.2400 379.6800 L
  183.2400 164.0400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  201.2400 289.8000 m
  291.0000 289.8000 L
  291.0000 361.6800 L
  201.2400 361.6800 L
  201.2400 289.8000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 228.4800 328.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Subcircuit\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 230.5200 318.6000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 K
  0.000 0.000 0.000 1.000 k
(Analyser\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  201.2400 182.0400 m
  291.0000 182.0400 L
  291.0000 253.9200 L
  201.2400 253.9200 L
  201.2400 182.0400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 234.3600 215.6400 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Parser\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  345.1200 218.0400 m
  452.8800 218.0400 L
  452.8800 325.8000 L
  345.1200 325.8000 L
  345.1200 218.0400 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 391.0800 274.3200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(AST\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 383.0400 264.7200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Validator\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  345.1200 56.2800 m
  452.8800 56.2800 L
  452.8800 164.0400 L
  345.1200 164.0400 L
  345.1200 56.2800 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 370.2000 107.7600 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Code Generator\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  183.2400 271.9200 m
  167.0400 289.8000 L
  167.0400 278.0400 L
  147.3600 278.0400 L
  147.3600 265.8000 L
  167.0400 265.8000 L
  167.0400 253.9200 L
  183.2400 271.9200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  401.1600 164.0400 m
  419.0400 182.0400 L
  407.2800 182.0400 L
  407.2800 218.0400 L
  395.0400 218.0400 L
  395.0400 182.0400 L
  383.1600 182.0400 L
  401.1600 164.0400 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  345.1200 271.9200 m
  328.8000 289.8000 L
  328.8000 278.0400 L
  309.0000 278.0400 L
  309.0000 265.8000 L
  328.8000 265.8000 L
  328.8000 253.9200 L
  345.1200 271.9200 L
B
U
u
  0.000 0.000 0.000 0.000 k
  0.000 0.000 0.000 1.000 K
  37.2000 271.9200 m
  21.1200 289.8000 L
  21.1200 278.0400 L
  1.3200 278.0400 L
  1.3200 265.8000 L
  21.1200 265.8000 L
  21.1200 253.9200 L
  37.2000 271.9200 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 6.3600 269.5200 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Blif-MV\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
0.0000 w
  0.000 0.000 0.000 1.000 K
1 j
  399.0000 20.4000 m
  416.8800 36.4800 L
  405.1200 36.4800 L
  405.1200 56.2800 L
  392.8800 56.2800 L
  392.8800 36.4800 L
  381.0000 36.4800 L
  399.0000 20.4000 L
B
U
u
  0.000 0.000 0.000 0.000 k
  376.4400 2.4000 m
  421.3200 2.4000 L
  421.3200 20.4000 L
  376.4400 20.4000 L
  376.4400 2.4000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 383.2800 13.8000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(Reactive\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 383.7600 4.2000 0 Tp
TP
/_Helvetica 8.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(Modules\r) Tx
TO
  0.000 0.000 0.000 1.000 K
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1298 2134 a Fj(Figure)j(4.4)p Fu(:)36 b(Arc)n(hitecture)27
b(of)h Fb(mv2rm)323 2686 y Fm(4.3)135 b(T)-11 b(ranslating)46
b(BLIF-MV)d(to)i(Reactiv)l(e)i(Mo)t(dules)686 3002 y
Fr(In)38 b(this)f(section)i(w)m(e)g(describ)s(e)e(the)h(translation)h
(logic)g(used)e(b)m(y)h Fq(mv2rm)p Fp(g)p Fr(.)63 b(Eac)m(h)323
3227 y(imp)s(ortan)m(t)42 b(construct)h(of)g Fq(BLIF-MV)f
Fr(is)h(describ)s(ed)e(with)h(a)h(relev)-5 b(an)m(t)44
b(example)f(and)f(the)323 3453 y(corresp)s(onding)31
b(strategy)j(of)f(con)m(v)m(ersion)g(is)g(detailed.)47
b(F)-8 b(ull)34 b(BNF)f(grammar)f(of)h Fq(BLIF-MV)323
3679 y Fr(is)g(in)f(app)s(endix)g(and)g(the)h(do)s(cumen)m(tation)h(of)
f(OCAML)g(implemen)m(tation)i(of)e Fq(mv2rm)f Fr(is)h(at)323
3905 y([Bha03)q(].)323 4264 y Fv(4.3.1)112 b(Multi-v)-6
b(alued)40 b(V)-9 b(ariables)686 4549 y Fr(A)23 b(m)m(ulti-v)-5
b(alued)24 b(v)-5 b(ariable)24 b(is)e(a)i(v)-5 b(ariable)23
b(that)g(can)h(tak)m(e)g(a)f(\014nite)g(n)m(um)m(b)s(er)e(of)i(v)-5
b(alues.)323 4775 y(There)32 b(are)h(t)m(w)m(o)h(classes)g(of)e(m)m
(ulti-v)-5 b(alued)34 b(v)-5 b(ariables.)48 b(The)32
b(class)i(of)f Fl(enumer)-5 b(ative)35 b(variables)1931
5094 y Fr(39)p eop end
%%Page: 40 40
TeXDict begin 40 39 bop 1182 -177 1590 4 v 1180 -64 4
113 v 1231 -98 a Fq(BLIF-MV)p 1818 -64 V 206 w(Rea)n(ctive)33
b(Modules)p 2769 -64 V 1182 -60 1590 4 v 1180 52 4 113
v 1231 19 a Fr(mo)s(del)p 1818 52 V 398 w(mo)s(dule)p
2769 52 V 1182 56 1590 4 v 1180 169 4 113 v 1231 135
a(inputs)p 1818 169 V 389 w(in)m(terface)p 2769 169 V
1182 172 1590 4 v 1180 285 4 113 v 1231 251 a(outputs)p
1818 285 V 334 w(external)p 2769 285 V 1182 288 1590
4 v 1180 401 4 113 v 1231 367 a(unde\014ned)c(v)-5 b(ar)p
1818 401 V 99 w(priv)g(ate)p 2769 401 V 1182 404 1590
4 v 1180 517 4 113 v 1231 484 a(table)p 1818 517 V 442
w(atom)31 b(\(a)m(w)m(aited\))p 2769 517 V 1182 521 1590
4 v 1180 634 4 113 v 1231 600 a(reset)p 1818 634 V 451
w(atom)p 2769 634 V 1182 637 1590 4 v 1180 750 4 113
v 1231 716 a(latc)m(h)p 1818 750 V 445 w(atom)g(\(read\))p
2769 750 V 1182 753 1590 4 v 1180 866 4 113 v 1231 832
a(sub)s(c)m(kt)p 1818 866 V 377 w(comp)s(osition)p 2769
866 V 1182 869 1590 4 v 684 1118 a Fj(T)-8 b(able)32
b(4.1)p Fu(:)k(Mapping)27 b(of)h Fb(BLIF-MV)f Fu(constructs)g(to)g
Fb(Rea)n(ctive)33 b(Modules)p 422 1237 3110 4 v 420 1350
4 113 v 471 1316 a Fr(.m)m(v)e(signal)g(3)p 2031 1350
V 1132 w(signal:)41 b(\(0..2\))p 3529 1350 V 422 1353
3110 4 v 420 1466 4 113 v 471 1432 a(.m)m(v)31 b(signal)g(3)61
b(STOP)29 b(READ)m(Y2GO)j(GO)p 2031 1466 V 100 w(signal:)41
b Fp(f)p Fr(STOP)-8 b(,)31 b(READ)m(Y2GO,)h(GO)p Fp(g)p
3529 1466 V 422 1470 3110 4 v 1152 1718 a Fj(T)-8 b(able)32
b(4.2)p Fu(:)k(Multiv)-5 b(alued)28 b(V)-7 b(ariables)26
b(T)-7 b(ranslated)323 1976 y Fr(consists)31 b(of)f(v)-5
b(ariables)31 b(whose)f(domain)h(is)f(the)h Fk(n)e Fr(in)m(tegers)j
Fp(f)p Fr(0)p Fk(;)15 b(:)g(:)g(:)j(;)d(n)20 b Fp(\000)g
Fr(1)p Fp(g)p Fr(.)323 2188 y Fo(.mv)47 b(<variable-name-list>)42
b(<number-of-values>)686 2514 y Fr(The)33 b(second)g(class)h(are)f
Fl(symb)-5 b(olic)36 b(variables)p Fr(,)f(whic)m(h)d(can)i(tak)m(e)g(a)
f(set)h(of)f(arbitrary)323 2739 y(v)-5 b(alues.)41 b(Sym)m(b)s(olic)30
b(v)-5 b(ariables)31 b(are)g(declared)g(as)g(follo)m(ws.)323
2952 y Fo(.mv)47 b(<variable-name-list>)42 b(<number-of-values>)h
(<value-list>)686 3277 y Fq(Rea)n(ctive)33 b(Modules)42
b Fr(ha)m(v)m(e)i(m)m(ulti-v)-5 b(alued)44 b(v)-5 b(ariables.)79
b(T)-8 b(able)44 b Fs(??)g Fr(sho)m(ws)f(ho)m(w)323 3503
y(en)m(umerativ)m(e)32 b(and)e(sym)m(b)s(olic)h(v)-5
b(ariables)31 b(are)g(translated.)42 b Fq(Rea)n(ctive)33
b(Modules)c Fr(also)j(ha)m(v)m(e)323 3729 y(t)m(yp)s(ed)e(v)-5
b(ariables)31 b(whic)m(h)f(can)h(b)s(e)e(used)h(to)h(represen)m(t)f
(sym)m(b)s(olic)h(v)-5 b(ariables.)323 4089 y Fv(4.3.2)112
b(T)-9 b(ables)686 4373 y Fr(A)33 b(table)g(is)f(an)g(abstract)h
(represen)m(tation)g(of)f(a)h(ph)m(ysical)f(gate.)48
b(A)32 b(table)h(is)f(driv)m(en)323 4599 y(b)m(y)38 b(inputs)f(and)g
(generates)j(outputs)d(follo)m(wing)j(its)e(functionalit)m(y)-8
b(.)66 b(Although)38 b(a)h(real)f(gate)323 4825 y(generates)27
b(an)f(output)f(deterministically)j(dep)s(ending)c(on)i(what)f(inputs)g
(are)h(supplied,)g(tables)1931 5094 y(40)p eop end
%%Page: 41 41
TeXDict begin 41 40 bop 323 -89 a Fr(in)22 b Fq(BLIF-MV)g
Fr(can)h(represen)m(t)f(non-deterministic)h(b)s(eha)m(viors)f(as)h(w)m
(ell.)39 b(The)22 b(functionalit)m(y)i(of)323 137 y(the)30
b(table)h(is)f(describ)s(ed)g(as)g(a)g(sym)m(b)s(olic)h(relation,)h
(i.e.)41 b(the)31 b(table)g(en)m(umerates)f(sym)m(b)s(olically)323
363 y(all)44 b(the)f(v)-5 b(alid)43 b(com)m(bination)h(of)f(v)-5
b(alues)43 b(among)g(the)g(inputs)f(and)g(the)h(outputs.)78
b(A)43 b(table)323 589 y(without)37 b(input)f(represen)m(ts)h(a)h
(constan)m(t)g(generator.)62 b(If)37 b(the)g(table)h(allo)m(ws)g(more)g
(than)f(one)323 815 y(v)-5 b(alue)31 b(for)f(its)h(output,)g(then)f
(the)h(table)g(is)g(a)g Fl(nondeterministic)h Fr(constan)m(t)g
(generator,)g(whic)m(h)323 1040 y(w)m(e)f(call)g Fl(pseudo)j(input)p
Fr(.)41 b(T)-8 b(ables)31 b(are)g(declared)g(in)f(the)g(follo)m(wing)i
(w)m(a)m(y)-8 b(.)323 1253 y Fo(.table)46 b(<in-1>)g(<in-2>)g(...)h
(<in-n>)f(->)h(<out-1>)f(<out-2>...)f(<out-m>)323 1366
y(<relation>)323 1479 y(...)323 1592 y(<relation>)686
1917 y Fr(The)37 b(table)i(is)e(translated)i(as)e(an)h
Fs(atom)f Fr(in)g Fq(Rea)n(ctive)c(Modules)o Fr(.)62
b(The)37 b(input)323 2143 y(v)-5 b(ariables)38 b(are)g(read)f(fresh)g
(for)g(eac)m(h)i(clo)s(c)m(k)g(tic)m(k)g(i.e.)63 b(they)37
b(are)h Fs(a)m(w)m(aited)f Fr(and)g(the)g(output)323
2369 y(v)-5 b(ariables)31 b(are)g(con)m(trolled.)686
2595 y(A)i Fl(r)-5 b(elation)34 b Fr(of)e Fq(BLIF-MV)h
Fr(is)f(a)h(white-space)g(separated)g(non-n)m(ull)f(list)g(of)h
Fk(n)21 b Fr(+)g Fk(m)323 2820 y Fr(strings,)37 b(giving)g(a)f(v)-5
b(alid)36 b(com)m(bination)i(of)e(v)-5 b(alues)36 b(among)g(inputs)f
(and)g(outputs.)57 b(The)35 b Fk(i)p Fr(-th)323 3046
y(string)29 b(in)g(a)h(relation)h(sp)s(eci\014es)e(a)h(set)g(of)g(v)-5
b(alues)30 b(for)f(the)h Fk(i)p Fr(-th)f(v)-5 b(ariable)31
b(in)e(the)h(input/output)323 3272 y(declaration)35 b(of)f
Fo(.table)p Fr(.)50 b(A)34 b(relation)i(of)e Fq(BLIF-MV)g
Fr(is)g(translated)g(as)h(a)f Fs(guarded)39 b(com-)323
3498 y(mand)29 b Fr(of)f Fq(Rea)n(ctive)33 b(Modules)n
Fr(.)41 b(In)27 b(eac)m(h)j(up)s(date)e(round)f(the)i(v)-5
b(alues)29 b(of)g(con)m(trolled)h(v)-5 b(ari-)323 3724
y(ables)31 b(\(outputs)f(in)g(tables\))h(are)g(based)f(on)g(the)h
(guarded)f(commands)g(\(relations\).)686 3950 y(The)23
b Fo(.default)f Fr(construct)i(of)f Fq(BLIF-MV)h Fr(is)f(used)g(to)h
(de\014ne)f(a)h(default)g(output)f(for)323 4175 y(the)g(input)f
(patterns)h(not)g(sp)s(eci\014ed)f(in)h(the)g(giv)m(en)h(relation.)39
b(A)23 b(default)h(construct)f Fq(BLIF-MV)323 4401 y
Fr(is)30 b(translated)h(as)g(a)g(default)f(guarded)g(command)g(of)h
Fq(Rea)n(ctive)i(Modules)n Fr(.)686 4627 y(T)-8 b(able)21
b(4.3)h(sho)m(ws)e(a)g Fq(BLIF-MV)h Fr(.table)g(snipp)s(et)e(from)h
(4.3)h(translated)g(in)m(to)h Fq(Rea)n(ctive)32 b(Modules)4194
4604 y Fr(_)4173 4627 y(Note)323 4853 y(the)e(atom)i(has)e(a)m(w)m
(aited)i(v)-5 b(ariables.)1931 5094 y(41)p eop end
%%Page: 42 42
TeXDict begin 42 41 bop 579 -117 a Fo(.table)46 b(PresentSignal)f(\\)
961 -4 y(Button)h(->)h(NextSignal)579 109 y(.default)f(1)579
222 y(1)i(1)f(0)579 335 y(.end)2191 -130 y(atom)2286
-17 y(controls)93 b(NextSignal)2286 96 y(awaits)h(PresentSignal)44
b(,)k(Button)2382 209 y(init)e(update)2382 322 y([])95
b(PresentSignal')43 b(=)48 b(1)95 b(&)2477 435 y(Button')46
b(=)h(1)96 b(->)47 b(NextSignal':=)d(0)2382 548 y([])j(default)f(->)h
(NextSignal':=1)2191 661 y(endatom)1442 810 y Fj(T)-8
b(able)32 b(4.3)p Fu(:)k(T)-7 b(ables)27 b(translated)323
1067 y Fv(4.3.3)112 b(Latc)m(hes)38 b(and)h(Reset)e(T)-9
b(ables)686 1352 y Fr(A)33 b(latc)m(h)h(mo)s(dels)e(a)h(storage)i
(elemen)m(t,)g(whic)m(h)d(retains)h(the)g(v)-5 b(alue)33
b(of)g(the)f(input)g(at)323 1577 y(the)g(last)g(clo)s(c)m(k)h(tic)m(k.)
47 b(A)32 b(latc)m(h)h(has)e Fs(only)37 b(one)32 b Fr(input)f(and)g
(output.)44 b(Ev)m(ery)32 b(latc)m(h)h(has)f(to)g(b)s(e)323
1803 y(initialized)37 b(b)m(y)e(a)h Fs(reset)f Fr(statemen)m(t.)58
b(A)35 b(latc)m(h)i(is)e(allo)m(w)m(ed)j(to)e(ha)m(v)m(e)g(more)g(than)
f(one)h(initial)323 2029 y(v)-5 b(alue,)38 b(in)e(whic)m(h)g(case)i
(the)e(latc)m(h)i(tak)m(es)g(an)e(initial)h(v)-5 b(alue)37
b(nondeterministically)h(from)e(the)323 2255 y(sp)s(eci\014ed)c(v)-5
b(alues.)50 b(Th)m(us)32 b(a)i(latc)m(h)h(can)e(b)s(e)g(seen)g(as)h(a)f
(m)m(ulti-v)-5 b(alued)34 b(\015ip-\015op)f(with)g(p)s(ossibly)323
2481 y(m)m(ultiple)e(initial)g(states.)686 2706 y(A)g(latc)m(h)h(is)e
(declared)h(as)g(follo)m(ws.)323 2894 y Fo(.latch)46
b(<latch-input>)e(<latch-output>)686 3195 y Fr(The)30
b(reset)h(statemen)m(t)h(for)f(a)f(latc)m(h)i(is)f(as)f(follo)m(ws.)323
3382 y Fo(.reset)46 b(<option-reset-input>)c(latch_output)323
3495 y(<reset-in-0>)i(<value-0>)323 3608 y(...)686 3909
y Fq(mv2rm)35 b Fr(parser)g(go)s(es)h(through)f(the)g(input)g(\014le)g
(com)m(bines)h(the)g Fs(latc)m(h)f Fr(and)g Fs(reset)323
4134 y Fr(statemen)m(ts)f(for)f(a)g(particular)h(v)-5
b(ariable.)49 b(The)32 b Fl(latch-output)44 b Fr(v)-5
b(ariable)33 b(is)g(con)m(trolled)i(b)m(y)e(the)323 4360
y(atom)c(and)f(initialized)j(according)e(to)h(the)f(relations)g(in)g
(the)g(reset)g(statemen)m(t.)42 b(It)28 b(is)h(up)s(dated)323
4586 y(to)k(the)f(v)-5 b(alue)32 b(of)g Fl(latch-input)p
Fr(.)47 b(Note)34 b(that)e(the)g(v)-5 b(alue)33 b(of)f
Fl(latch-input)42 b Fr(is)32 b Fs(read)g Fr(b)m(y)g(the)g(atom)323
4812 y(and)38 b(not)h(a)m(w)m(aited,)k(implying)38 b(that)i(it)f(do)s
(es)f(not)h(w)m(ait)h(for)e(the)h(v)-5 b(ariable)40 b(to)f(b)s(e)f(up)s
(date)g(in)1931 5094 y(42)p eop end
%%Page: 43 43
TeXDict begin 43 42 bop 579 -124 a Fo(.latch)46 b(Tmp)h(CarSignal)579
-12 y(.reset)f(CarSignal)579 101 y(0)579 214 y(1)2191
-130 y(atom)2286 -17 y(controls)93 b(CarSignal)2286 96
y(reads)h(Tmp)2382 209 y(init)2382 322 y([])h(true)f(->)47
b(CarSignal':=)e(1)2382 435 y([])95 b(true)f(->)47 b(CarSignal':=)e(0)
2382 548 y(update)2382 661 y([])95 b(true)46 b(->)95
b(CarSignal':=Tmp)2191 774 y(endatom)1035 923 y Fj(T)-8
b(able)32 b(4.4)p Fu(:)k(Latc)n(h)27 b(and)h(Reset)f(Statemen)n(ts)h(T)
-7 b(ranslated)323 1180 y Fr(curren)m(t)34 b(round)e(bu)h(t)h(rather)g
(pic)m(ks)g(its)h(v)-5 b(alue)34 b(from)g(the)g(last)h(round.)50
b(T)-8 b(able)34 b Fs(??)h Fr(illustrates)323 1406 y(the)30
b(con)m(v)m(ersion.)323 1765 y Fv(4.3.4)112 b(Mo)s(dels)686
2050 y Fo(.model)27 b Fr(is)i(the)g(prime)f(construct)h(of)g
Fq(BLIF-MV)g Fr(used)f(to)h(de\014ne)f(a)h(basic)g(comp)s(o-)323
2276 y(nen)m(t)h(of)h(a)g(hierarc)m(hical)h(system.)686
2502 y(An)m(y)43 b Fq(BLIF-MV)f Fr(\014le)g(con)m(tains)h(one)g(or)f
(more)g(mo)s(del)g(de\014nitions.)76 b(In)41 b(case)j(of)323
2727 y(m)m(ultiple)36 b(mo)s(dels)f(in)f(a)i(single)g(\014le)f(the)h
(\014rst)e(mo)s(del)h(is)g(considered)g(to)h(the)g Fo(root)e
Fr(mo)s(del)h(or)323 2953 y(the)g(mo)s(del)g(ha)m(ving)h
Fo(.root)e Fr(construct)h(in)g(second)g(line)h(of)f(its)g(de\014nition)
g(.)55 b(A)35 b(mo)s(del)g(lo)s(oks)323 3179 y(lik)m(e)c(b)s(elo)m(w.)
323 3367 y Fo(.model)46 b(<model-name>)323 3480 y(.inputs)g
(<input-list>)323 3593 y(.outputs)f(<output-list>)323
3705 y(<command>)323 3818 y(...)323 3931 y(<command>)g(.end)459
4257 y Fp(\017)h Fl(mo)-5 b(del-name)42 b Fr(is)f(a)g(string)g(b)m(y)f
(whic)m(h)g(the)h(mo)s(del)f(is)h(referred)f(in)g(the)h(system.)71
b(The)550 4483 y(equiv)-5 b(alen)m(t)45 b(of)f(mo)s(del)g(in)f
Fq(Rea)n(ctive)33 b(Modules)42 b Fr(is)i(a)g Fs(mo)s(dule)p
Fr(.)81 b(Eac)m(h)44 b(mo)s(del)g(is)550 4708 y(abstracted)31
b(as)g(a)g(mo)s(dule.)40 b(T)-8 b(able)31 b Fs(??)g Fr(illustrates)g
(the)g(con)m(v)m(ersion.)1931 5094 y(43)p eop end
%%Page: 44 44
TeXDict begin 44 43 bop 459 -89 a Fp(\017)46 b Fl(input-list)35
b Fr(is)f(a)h(white-space)h(separated)f(list)g(of)f(strings)h
(\(terminated)g(b)m(y)f(the)h(end)f(of)550 137 y(the)j(line\))h(giving)
g(the)g(formal)f(input)g(terminals)g(for)g(the)h(mo)s(del)f(b)s(eing)g
(declared.)61 b(If)550 363 y(this)39 b(is)g(the)g(ro)s(ot)g(mo)s(del,)j
(then)c(signals)i(can)f(b)s(e)f(iden)m(ti\014ed)h(as)h(the)f(primary)f
(inputs)550 589 y(of)d(this)g(system.)55 b(The)34 b(input)g(v)-5
b(ariables)36 b(are)f(mapp)s(ed)e(as)j Fs(external)e
Fr(v)-5 b(ariables)36 b(while)550 815 y(translating)31
b(to)h Fq(Rea)n(ctive)g(Modules)o Fr(.)459 1111 y Fp(\017)46
b Fl(output-list)31 b Fr(is)g(a)g(white-space)h(separated)f(list)g(of)g
(strings)f(\(terminated)i(b)m(y)e(the)h(end)f(of)550
1337 y(the)k(line\))f(giving)i(the)e(formal)h(output)e(terminals)i(for)
f(the)g(mo)s(del)h(b)s(eing)e(declared.)50 b(If)550 1562
y(this)37 b(is)h(the)g(ro)s(ot)f(mo)s(del,)j(then)d(signals)h(can)g(b)s
(e)f(iden)m(ti\014ed)g(as)h(the)g(primary)e(output)550
1788 y(of)e(this)f(system.)50 b(The)33 b(input)f(v)-5
b(ariables)34 b(are)g(mapp)s(ed)e(as)h Fs(in)m(terface)h
Fr(v)-5 b(ariables)34 b(while)550 2014 y(translating)d(to)h
Fq(Rea)n(ctive)g(Modules)o Fr(.)459 2310 y Fp(\017)46
b Fl(c)-5 b(ommand)34 b Fr(is)e(one)g(of)g Fo(.mv)p Fr(,)g
Fo(.table)p Fr(,)f Fo(.latch)p Fr(,)f Fo(.reset)g Fr(and)i
Fo(.subckt)p Fr(,)e(whic)m(h)i(de\014nes)550 2536 y(the)27
b(detailed)g(functionalit)m(y)i(of)d(the)h(mo)s(del.)39
b(T)-8 b(ranslation)28 b(of)e Fo(.subckt)f Fr(is)i(describ)s(ed)e(in)
550 2762 y(next)30 b(section)h(while)f(rest)g(are)g(detailed)h(in)e
(previous)h(sections.)41 b(Undeclared)30 b(v)-5 b(ariables)550
2988 y(are)31 b(mapp)s(ed)e(as)h(priv)-5 b(ate)31 b(v)-5
b(ariables)31 b(while)g(translating)g(to)g Fq(Rea)n(ctive)i(Modules)n
Fr(.)323 3429 y Fv(4.3.5)112 b(Sub)s(circuits)686 3714
y Fr(In)37 b(a)h(mo)s(del,)h(another)f(mo)s(del)g(can)f(b)s(e)g(instan)
m(tiated)i(as)f(a)g(sub)s(circuit)f(using)g(the)323 3940
y Fo(.subckt)k Fr(construct.)78 b(It)43 b(is)g(the)g(con)m(truct)h
(whic)m(h)e(enables)h(hierarc)m(hical)i(comp)s(osition)e(in)323
4166 y Fq(BLIF-MV)p Fr(.)323 4363 y Fo(.subckt)j(<model-name>)e
(<instance-name>)g(<formal-actual-list>)686 4673 y Fr(This)36
b(construct)h(instan)m(tiates)h(a)f(reference)g(mo)s(del)f
Fl(mo)-5 b(del-name)38 b Fr(as)f(an)f(instance)323 4899
y Fl(instanc)-5 b(e-name)33 b Fr(in)f(the)g(curren)m(t)g(mo)s(del.)47
b Fl(formal-actual-list)34 b Fr(sp)s(eci\014es)e(the)g(asso)s(ciation)i
(b)s(e-)1931 5094 y(44)p eop end
%%Page: 45 45
TeXDict begin 45 44 bop 579 -124 a Fo(.model)46 b(ControlLogic)579
-12 y(.inputs)g(PresentSignal)e(Button)579 101 y(.outputs)i(NextSignal)
579 214 y(.names)g(PresentSignal)f(\\)770 327 y(Button)h(->)i
(NextSignal)579 440 y(.def)f(1)579 553 y(1)h(1)f(0)579
666 y(.end)2143 -124 y(module)f(a_ControlLogic)2191 -12
y(external)2334 101 y(PresentSignal:)e(\(0..1\))i(;)2334
214 y(Button:)g(\(0..1\))2191 327 y(interface)2334 440
y(NextSignal:)f(\(0..1\))2191 666 y(atom)2286 779 y(controls)93
b(NextSignal)2286 892 y(awaits)h(PresentSignal)44 b(,)k(Button)2382
1005 y(init)e(update)2382 1118 y([])95 b(PresentSignal')43
b(=)48 b(1)95 b(&)48 b(\\)2382 1230 y(Button')d(=)j(1)95
b(->)47 b(NextSignal':=)d(0)2382 1343 y([])j(default)f(->)h
(NextSignal':=1)2191 1456 y(endatom)2191 1569 y(endmodule)2191
1682 y(ControlLogic:=)d(a_ControlLogic)1428 1851 y Fj(T)-8
b(able)32 b(4.5)p Fu(:)k Fa(.model)25 b Fu(translated)323
2107 y Fr(t)m(w)m(een)34 b(eac)m(h)g(formal)g(v)-5 b(ariable)34
b(in)f Fl(mo)-5 b(del-name)35 b Fr(and)d(its)i(corresp)s(onding)e
(actual)i(v)-5 b(ariable)34 b(in)323 2333 y(the)f(curren)m(t)g(mo)s
(del.)48 b(F)-8 b(ormal)35 b(v)-5 b(ariables)33 b(are)h(declared)f(in)g
(the)g(reference)h(mo)s(del,)g(while)f(ac-)323 2559 y(tual)28
b(v)-5 b(ariables)29 b(are)g(v)-5 b(ariables)29 b(declared)f(in)g(the)g
(curren)m(t)g(mo)s(del.)40 b Fl(formal-actual-list)30
b Fr(is)f(a)f(list)323 2785 y(of)33 b(assignmen)m(ts)g(separated)h(b)m
(y)f(a)g(white)g(space.)49 b(The)32 b(declaration)j(of)e
Fl(formal-actual-list)i Fr(is)323 3011 y(of)30 b(form:)323
3221 y Fo(formal-1)45 b(=)j(actual-1)d(formal-2)h(=)h(actual-2)f(...)h
(formal-n)e(=)j(actual-n)686 3544 y Fr(The)20 b Fo(.subckt)e
Fr(construct)j(is)f(replaced)h(b)m(y)f(comp)s(osition)h(construct)g(of)
f Fq(Rea)n(ctive)33 b(Modules)o Fr(.)323 3770 y(A)i(mo)s(del)g(M)h
(with)f(sub)s(c)m(kts)f(A1..An)i(is)g(represen)m(ted)f(as)g
Fk(M)44 b Fr(=)33 b Fk(a)p 2671 3770 28 4 v 33 w(M)43
b Fp(k)34 b Fk(A)p Fr(1)g Fp(k)g Fk(A)p Fr(2)15 b Fk(:)g(:)g(:)35
b Fp(k)f Fk(An)p Fr(,)323 3995 y(here)c(a)p 570 3995
V 33 w(M)h(is)f(the)h(base)f(mo)s(del)h(M)f(without)h(the)f(sub)s
(circuits.)686 4221 y(Sp)s(ecial)39 b(pro)s(cessing)f(is)g(to-b)s(e)h
(done)f(for)g(the)g(actual)h(parameters)g(passed)f(to)h(the)323
4447 y(sub)s(circuits)32 b(in)h(the)g(base)g(mo)s(del.)49
b(T)-8 b(o)34 b(do)f(sub)s(circuit)f(analysis)i(and)f(sp)s(ecial)g(pro)
s(cessing)g(w)m(e)323 4673 y(main)m(tain)j(a)f(mo)s(delT)-8
b(ab,)36 b(whic)m(h)e(is)h(a)g(hash)g(table)g(of)g(mo)s(dels,)h(hashed)
e(b)m(y)h(the)g(mo)s(delname)323 4899 y(and)24 b(con)m(taining)i(the)e
(3)h(lists,)h(inlist,)h(outlist,)f(sub)s(c)m(ktlist)f(of)g(the)f(mo)s
(del.)39 b(If)24 b(the)h(actual)g(passed)1931 5094 y(45)p
eop end
%%Page: 46 46
TeXDict begin 46 45 bop 579 -117 a Fo(.subckt)46 b(ControlLogic)f(CL)i
(\\)770 -4 y(PresentSignal=CarSignal)42 b(\\)770 109
y(Button=Button)i(NextSignal=Tmp)2143 -124 y(ControlLogic:=)g
(a_ControlLogic)2143 -12 y(b_Lights:=)h(a_Lights)2191
101 y(||)95 b(ControlLogic)44 b(\\)2334 214 y([)j(PresentSignal)e(,)i
(Button)f(,)i(NextSignal)d(\\)2334 327 y(:=)i(CarSignal)e(,)j(Button)e
(,)h(Tmp)95 b(])2143 440 y(Lights)46 b(:=)h(hide)95 b(Tmp)f(in)47
b(b_Lights)f(endhide)1244 609 y Fj(T)-8 b(able)32 b(4.6)p
Fu(:)k(P)n(artial)26 b Fa(.subckt)f Fu(T)-7 b(ranslation)323
867 y Fr(parameter)27 b(from)f(the)h(base)f(mo)s(del)h(is)f(an)h
(output)f(and)g(the)g(asso)s(ciated)i(formal)f(parameter)g(in)323
1092 y(sub)s(circuit)h(is)h(an)g(output)g(in)f(the)h(sub)s(circuit)g
(then)f(it)i(is)f(made)g(an)g(input)f(in)h(the)g(base)g(mo)s(del)323
1318 y(\(a)p 408 1318 28 4 v 33 w(mo)s(dule\),)36 b(b)s(ecause)e(on)h
(comp)s(osition)g(it)g(will)g(b)s(e)f(an)g(output)g(in)g
Fk(modul)r(e)f Fr(=)f Fk(a)p 3230 1318 V 33 w(modul)r(e)g
Fp(k)323 1544 y Fk(subck)s(t)p Fr(.)39 b(If)25 b(the)h(actual)h(passed)
e(parameter)h(from)f(the)h(base)g(mo)s(del)f(is)h(a)g(priv)-5
b(ate)26 b(v)-5 b(ariable)26 b(and)323 1770 y(asso)s(ciated)32
b(formal)g(v)-5 b(ariable)32 b(is)f(an)g(output)f(in)h(the)g(sub)s
(ciruit)f(then)h(it)h(is)f(made)g(an)g(input)f(in)323
1996 y(the)35 b(base)f(mo)s(del)h(\(a)p 1050 1996 V 33
w(mo)s(dule\))g(and)f(added)g(to)h(a)g(hidelist)g(b)s(ecause)f(on)h
(comp)s(osition)g(it)g(will)323 2222 y(b)s(e)d(output)h(in)g
Fk(modul)r(e)d Fr(=)f Fk(a)p 1336 2222 V 33 w(modul)r(e)h
Fp(k)g Fk(subck)s(t)j Fr(but)g(it)g(should)f(b)s(e)h(hidden)e(from)i
(the)g(w)m(orld)323 2447 y(b)m(y)d Fk(modul)r(e)c Fr(=)f
Fk(hide)31 b(hidel)r(ist)c Fp(2)55 b Fk(a)p 1572 2447
V 33 w(modul)r(e)25 b Fp(k)h Fk(subck)s(t)p Fr(.)686
2673 y(Consider)j(the)h(translation)h(sho)m(wn)e(in)h(table)h(4.6,)g
(note)f(that)h(the)f(priv)-5 b(ate)30 b(v)-5 b(ariable)323
2899 y Fo(Tmp)28 b Fr(in)h(mo)s(del)g Fo(Lights)f Fr(is)h(added)f(to)i
(hidelist)g(and)f(is)g(made)g(an)g(output)g(\(external\))i(v)-5
b(ariable)323 3125 y(in)30 b(the)g(base)h(mo)s(del)f(-)h(a)p
1169 3125 V 33 w(Ligh)m(ts.)323 3561 y Fm(4.4)135 b(Reactiv)l(e)47
b(Mo)t(dules)e(to)g(In)l(terfaces)h(mo)t(dules)686 3877
y Fr(W)-8 b(e)45 b(ha)m(v)m(e)g(implemen)m(ted)g(a)f(tin)m(y)g(to)s(ol)
h Fo(rms2intf)c Fr(whic)m(h)j(in)m(tegrates)i(the)e(input)323
4102 y(assumption)30 b(and)f(output)h(guaran)m(tee)i(reactiv)m(e)h(mo)s
(dules)c(to)j(form)d(an)i(in)m(terface)h(mo)s(dule.)323
4315 y Fo(kala)46 b(39>)h(rms2intf)f(-h)323 4541 y(Usage:)g(rms2intf)f
(inputAssumption.rm)e(outputGuarantee.rm)1931 5094 y
Fr(46)p eop end
%%Page: 47 47
TeXDict begin 47 46 bop 534 -124 a Fo(module)46 b(counterI)629
-12 y(external)94 b(x0:)47 b(bool;)f(x1:)h(bool;)629
101 y(interface)f(toone:)g(bool;)534 327 y(atom)h(controls)e(toone)629
440 y(init)868 553 y([])i(true)g(->)g(toone')f(:=)h(nondet)629
666 y(update)868 779 y([])g(true)g(->)g(toone')f(:=)h(nondet)629
892 y(endatom)534 1005 y(endmodule)2188 -124 y(module)g(counterO)2284
-12 y(interface)e(x0:)i(bool;)f(x1:)h(bool;)2284 101
y(external)93 b(toone:)46 b(bool;)2188 327 y(atom)h(controls)f(x0,)h
(x1)g(reads)f(x0,)h(x1,)g(toone)2284 440 y(init)2523
553 y([])g(true)f(->)i(x0')e(:=)i(true;)e(x1')h(:=)g(true;)2284
666 y(update)2523 779 y([])94 b(toone)620 b(->)47 b(\\)3000
892 y(x1')g(:=)g(true;)94 b(x0')47 b(:=)g(true)2523 1005
y([])g(~toone)f(&)95 b(x1)47 b(&)95 b(x0)48 b(->)f(\\)2952
1118 y(x1')g(:=)g(true;)94 b(x0')47 b(:=)g(false)2523
1230 y([])g(~toone)f(&)95 b(x1)47 b(&)h(~x0)f(->)g(\\)2952
1343 y(x1')g(:=)g(false;)f(x0')h(:=)g(true)2523 1456
y([])g(~toone)f(&)h(~x1)g(&)95 b(x0)48 b(->)f(\\)2952
1569 y(x1')g(:=)g(false;)f(x0')h(:=)g(false)2523 1682
y([])g(~toone)f(&)h(~x1)g(&)h(~x0)f(->)g(\\)2952 1795
y(x1')g(:=)g(true;)94 b(x0')47 b(:=)g(true)2284 1908
y(endatom)2188 2021 y(endmodule)851 2170 y Fj(Figure)31
b(4.5)p Fu(:)36 b(Reactiv)n(e)27 b(Mo)r(dules)g(Represen)n(ting)g(a)g
(Do)n(wn)h(Coun)n(ter)686 2443 y Fr(Figure)f(4.5)g(sho)m(ws)f(the)g
(input)g(assumption)f(of)h(a)h(2-bit)g(do)m(wn)f(coun)m(ter)g(in)g
(left)h(hand)323 2669 y(column)i(and)g(the)g(output)g(guaran)m(tee)i
(in)e(the)g(righ)m(t)h(hand)e(column.)40 b(All)30 b(the)g(atoms)g(in)f
(input)323 2895 y(assumptions)j(w)m(ea)m(v)m(ed)j(as)e(input)f(atoms)i
(in)e(the)h(in)m(terface)i(represen)m(tation)f(and)e(the)h(output)323
3121 y(guaran)m(tee)e(atoms)f(b)s(ecome)g(output)g(atoms.)41
b(Figure)30 b(4.6)h(sho)m(ws)e(the)h(in)m(terface)h(output)e(from)323
3347 y Fo(rms2intf)p Fr(.)73 b(Note)43 b(that)g(instead)f(of)g(in)m
(terface)i(and)d(external)i(w)m(e)g(term)f(the)g(v)-5
b(ariables)43 b(as)323 3572 y(output)30 b(and)g(input.)686
3798 y(The)c(hardw)m(are)h(design)f(extracted)i(in)e(ab)s(o)m(v)m(e)i
(fashion)e(can)h(b)s(e)f(input)f(in)h(the)h Fq(Chai)p
Fp(g)323 4024 y Fr(en)m(vironmen)m(t)33 b(in)g(the)f(form)h(of)g
(reactiv)m(e)i(mo)s(dules)d(or)g(in)m(terface)j(mo)s(dules)c(as)i
(illustrated)h(b)m(y)323 4250 y(\014gure)c(4.7)1931 5094
y(47)p eop end
%%Page: 48 48
TeXDict begin 48 47 bop 461 -3 a Fo(interface)45 b(counterIO)557
110 y(input)h(vars:)g(x0:)190 b(bool;)47 b(x1:)g(bool;)557
223 y(output)f(vars:)94 b(toone:)46 b(bool;)461 449 y(output)g(atom)h
(controls)e(x0,)i(x1)h(reads)e(x0,)h(x1,)g(toone)557
562 y(init)795 674 y([])g(true)g(->)g(x0')g(:=)g(true;)g(x1')g(:=)g
(true;)557 787 y(update)795 900 y([])95 b(toone)619 b(->)47
b(x1')g(:=)h(true;)94 b(x0')47 b(:=)g(true)795 1013 y([])g(~toone)g(&)
95 b(x1)47 b(&)95 b(x0)47 b(->)g(x1')g(:=)h(true;)94
b(x0')47 b(:=)g(false)795 1126 y([])g(~toone)g(&)95 b(x1)47
b(&)g(~x0)g(->)g(x1')g(:=)h(false;)e(x0')h(:=)g(true)795
1239 y([])g(~toone)g(&)g(~x1)g(&)95 b(x0)47 b(->)g(x1')g(:=)h(false;)e
(x0')h(:=)g(false)795 1352 y([])g(~toone)g(&)g(~x1)g(&)g(~x0)g(->)g
(x1')g(:=)h(true;)94 b(x0')47 b(:=)g(true)557 1465 y(endatom)461
1578 y(input)g(atom)f(controls)g(toone)557 1691 y(init)795
1804 y([])h(true)g(->)g(toone')f(:=)i(nondet)557 1916
y(update)795 2029 y([])f(true)g(->)g(toone')f(:=)i(nondet)557
2142 y(endatom)461 2255 y(endinterface)719 2404 y Fj(Figure)31
b(4.6)p Fu(:)36 b(In)n(terface)27 b(Represen)n(tation)f(of)i(Do)n(wn)f
(Coun)n(ter)g(b)n(y)g Fa(rms2intf)323 2785 y Fo(kala)46
b(100>)h(chai)323 2898 y(Welcome)f(to)h(CHAI)f(1.0)323
3011 y(Please)g(report)g(any)h(problems)e(to)j(dvl@cse.ucsc.edu)323
3124 y(chai)e(1.0)h(>)h(read_module)d(counterO.rm)323
3237 y(Module)h(counterO)f(is)j(composed)d(and)i(checked)f(in.)323
3350 y(parse)g(successful.)323 3463 y(chai)g(1.0)h(>)h(read_intf)d
(counterIO.intf)323 3576 y(...)323 3688 y(Done..)323
3801 y(DEBUG)h(PrsReadIntfCmd)e(:)95 b(counterIO.intf.I)323
3914 y(Module)46 b(counterOI)f(is)i(composed)f(and)h(checked)f(in.)h
(parse)f(successful.)323 4027 y(Module)g(counterOO)f(is)i(composed)f
(and)h(checked)f(in.)h(parse)f(successful.)323 4140 y(...)323
4253 y(DEBUG)g(Interface)f(Created:)h(counterIO)323 4366
y(chai)g(1.0)h(>)h(exit)323 4479 y(Thank)e(you)h(for)g(using)f(CHAI)h
(1.0)1471 4761 y Fj(Figure)31 b(4.7)p Fu(:)36 b(HDLs)28
b(in)g Fb(Chai)1931 5094 y Fr(48)p eop end
%%Page: 49 49
TeXDict begin 49 48 bop 323 742 a Fn(Chapter)65 b(5)323
1406 y Ft(Conclusion)77 b(and)g(F)-19 b(uture)78 b(W)-19
b(ork)323 1964 y Fq(Chai)22 b Fr(with)f(all)i(the)f(functionalit)m(y)h
(pro)m(vides)f(an)g(en)m(vironmen)m(t)g(to)h(exp)s(erimen)m(t)f(with)f
(in)m(terface)323 2189 y(mo)s(dules)29 b(and)h(games)h(seman)m(tics.)
1931 5094 y(49)p eop end
%%Page: 50 50
TeXDict begin 50 49 bop 323 742 a Fn(App)5 b(endix)64
b(A)323 1406 y Ft(Grammar)76 b(Of)h(In)-6 b(terface)77
b(Mo)6 b(dules)323 3810 y Fo(interface)45 b(<interface-name>)514
3923 y(input)h(vars:)g(<input-list>)514 4036 y(output)g(vars:)g
(<output-list>)514 4261 y([input)g(|)h(output])f(<atom>)514
4374 y(...)514 4487 y([input)g(|)h(output])f(<atom>)323
4600 y(endinterface)1227 4882 y Fj(Figure)31 b(A.1)p
Fu(:)37 b(Syn)n(tax)27 b(of)g(In)n(terface)g(Mo)r(dule)1931
5094 y Fr(50)p eop end
%%Page: 51 51
TeXDict begin 51 50 bop 1931 5094 a Fr(51)p eop end
%%Page: 52 52
TeXDict begin 52 51 bop 323 742 a Fn(App)5 b(endix)64
b(B)323 1406 y Ft(BLIF-MV)78 b(BNF)534 2019 y Fo(main:)725
2132 y(models)46 b(TokEOF)534 2245 y(;)534 2471 y(models:)725
2584 y(model)g(models)g({})629 2697 y(|)i({})534 2810
y(;)582 3035 y(model:)820 3148 y(head)f(decl)g(body)f(TokEnd)g(TokEOL)
534 3261 y(;)582 3487 y(head:)725 3600 y(TokModel)f(TokVar)h(TokEOL)534
3713 y(;)534 3939 y(decl:)820 4052 y(vdecl)h({})629 4164
y(|)h({})534 4277 y(;)534 4503 y(vdecl:)820 4616 y(vdecl)f(input{})629
4729 y(|)h(input)e({})629 4842 y(|)i(vdecl)e(output{})629
4955 y(|)i(output)e({})534 5068 y(;)534 5294 y(input:)820
5406 y(TokInputs)g(iovals)g(TokEOL)534 5519 y(;)534 5745
y(output:)820 5858 y(TokOutputs)f(iovals)h(TokEOL)534
5971 y(;)2188 2077 y(iovals:)2475 2189 y(TokVar)g(iovals)2284
2302 y(|)h(TokVar)2188 2415 y(;)2188 2641 y(body:)2332
2754 y(table)f(body)h({})2284 2867 y(|)g(subckt)f(body)h({})2284
2980 y(|)g(mv)95 b(body)47 b({})2284 3093 y(|)g(reset)94
b(body)47 b({})2284 3206 y(|)g(latch)g(body)f({})2284
3319 y(|)h({})2188 3431 y(;)2188 3657 y(table:)2475 3770
y(TokTable)e(tabvars)h(TokEOL)g(relations)2188 3996 y(;)2188
4222 y(mv:)2475 4335 y(TokMV)g(mvvars)g(TokVal)g(values)g(TokEOL)2188
4561 y(;)2188 4786 y(mvvars:)2475 4899 y(TokVar)g(COMMA)g(mvvars)2284
5012 y(|)h(TokVar)f({[$1]})2188 5238 y(values:)2475 5351
y(TokVar)g(values)2284 5464 y(|)h(TokVal)f(values)2284
5577 y(|)h({[]})2188 5690 y(;)2188 5915 y(reset:)2475
6028 y(TokReset)e(tabvars)h(TokEOL)g(relations)2188 6141
y(;)1931 5094 y Fr(52)p eop end
%%Page: 53 53
TeXDict begin 53 52 bop 488 -33 a Fo(subckt:)775 80 y(TokSubckt)45
b(TokVar)h(TokVar)870 193 y(param_passing)e(TokEOL)488
419 y(;)488 644 y(param_passing:)679 757 y(formal_actual)h
(param_passing)584 870 y(|)488 983 y(;)488 1209 y(formal_actual:)775
1322 y(TokVar)h(ASSIGN)g(TokVar)488 1661 y(;)488 1886
y(latch:)775 1999 y(TokLatch)f(TokVar)h(TokVar)1443 2112
y(TokEOL)488 2338 y(;)488 2564 y(tabvars:)775 2677 y(inList)g(ARROW)g
(outList)584 2790 y(|)143 b(TokTabVar)45 b(inList)584
3015 y(|)i(TokTabVar)488 3241 y(inList:)679 3354 y(TokTabVar)f(inList)
584 3467 y(|)h(TokTabVar)584 3580 y(|)g({[]})488 3693
y(;)488 3919 y(outList:)679 4032 y(TokTabVar)f(outList)584
4145 y(|)h(TokTabVar)488 4257 y(;)2143 -33 y(relations:)2429
80 y(vdefault)f(relations)2238 193 y(|)i(relation)d(relations)2238
306 y(|)j({})2143 419 y(;)2143 644 y(vdefault:)2429 757
y(TokTabDef)e(valList)f(TokEOL)2143 870 y(;)2143 1096
y(relation:)2429 1209 y(valList)h(TokEOL)g({)i(\($1\))e(})2143
1322 y(;)2143 1548 y(valList:)2429 1661 y(valb)h(valList)f({)h
(\([$1]@\($2\)\))e(})2238 1773 y(|)j(valb)f({)g([$1])g(})2143
1886 y(;)2143 2112 y(valb:)2429 2225 y(TokTabVal)2238
2338 y(|)143 b(TokTabVar)2238 2451 y(|)48 b(ASSIGN)94
b(TokTabVar)2238 2564 y(|)48 b(HYPHEN)2238 2677 y(|)g(LBRACE)e
(TokTabVal)f(HYPHEN)2525 2790 y(TokTabVal)g(RBRACE)2238
2903 y(|)j(LPAREN)e(vals)h(RPAREN)2238 3015 y(|)h(NOT)f(valb)2143
3128 y(;)2143 3354 y(vals:)2429 3467 y(TokTabVal)f(COMMA)g(vals)2238
3580 y(|)i(TokTabVal)2143 3693 y(;)1931 5094 y Fr(53)p
eop end
%%Page: 54 54
TeXDict begin 54 53 bop 323 825 a Ft(Bibliograph)-6 b(y)323
1270 y Fr([A)m(C97])194 b(Thomas)37 b(A.)g(Henzinger)g(F)-8
b(reddy)36 b(Y.C.)h(Mang)h(Arindam)d(Chakrabarti,)k(Luca)788
1382 y(de)29 b(Alfaro.)37 b(Sync)m(hronous)28 b(and)f(bidirectional)j
(comp)s(onen)m(t)e(in)m(terfaces.)39 b(In)28 b Fl(Pr)-5
b(o-)788 1495 y(c)g(e)g(e)g(dings)34 b(of)f(CA)-9 b(V)p
Fr(,)29 b(1997.)323 1699 y([AHM)567 1666 y Fe(+)627 1699
y Fr(98])46 b(R.)31 b(Alur,)f(T.A.)h(Henzinger,)g(F.Y.C.)h(Mang,)f(S.)f
(Qadeer,)h(S.K.)f(Ra)5 b(jamani,)31 b(and)788 1812 y(S.)42
b(T)-8 b(asiran.)74 b Fq(Mocha)40 b Fr(:)64 b(Mo)s(dularit)m(y)42
b(in)f(mo)s(del)g(c)m(hec)m(king.)76 b(In)41 b(A.)h(Hu)f(and)788
1925 y(M.)27 b(V)-8 b(ardi,)28 b(editors,)g Fl(CA)-9
b(V)28 b(98:)41 b(Computer)30 b(A)n(ide)-5 b(d)29 b(V)-7
b(eri\014c)i(ation)p Fr(,)29 b(Lecture)e(Notes)788 2038
y(in)j(Computer)g(Science,)h(pages)g(521{525.)j(Springer-V)-8
b(erlag,)32 b(1998.)323 2242 y([BBD)545 2209 y Fe(+)605
2242 y Fr(96])68 b(Dominique)37 b(Borrione,)h(H.)e(Bouamama,)i(Da)m
(vid)f(Deharb)s(e,)g(C.)f(Le)g(F)-8 b(aou,)38 b(and)788
2355 y(Ayman)j(W)-8 b(ah)m(ba.)74 b(HDL-based)41 b(in)m(tegration)i(of)
f(formal)f(metho)s(ds)f(and)h(CAD)788 2468 y(to)s(ols)36
b(in)e(the)g(PREV)-10 b(AIL)34 b(en)m(vironmen)m(t.)53
b(In)34 b Fl(F)-7 b(ormal)38 b(Metho)-5 b(ds)38 b(in)e(Computer-)788
2581 y(A)n(ide)-5 b(d)33 b(Design)p Fr(,)d(pages)h(450{467,)j(1996.)323
2785 y([BFM00])119 b(Da)m(vid)47 b(Basin,)j(Stefan)45
b(F)-8 b(riedric)m(h,)50 b(and)45 b(Sebastian)h(M\177)-45
b(odersheim.)85 b(B2M:)47 b(A)788 2897 y(Seman)m(tic)40
b(Based)e(To)s(ol)h(for)e(BLIF)i(Hardw)m(are)f(Descriptions.)65
b(In)37 b(W)-8 b(arren)38 b(A.)788 3010 y(Hun)m(t)k(and)f(Stev)m(en)h
(D.)g(Johnson,)h(editors,)i Fl(F)-7 b(ormal)45 b(Metho)-5
b(ds)44 b(in)f(Computer-)788 3123 y(A)n(ide)-5 b(d)40
b(Design,)h(Thir)-5 b(d)41 b(International)h(Confer)-5
b(enc)g(e,)42 b(FMCAD)d(2000)p Fr(,)j(v)m(olume)788 3236
y(1954,)33 b(pages)e(91{107,)i(Austin,)d(Tx,)g(USA,)h(2000.)h
(Springer-V)-8 b(erlag.)323 3440 y([Bha03])165 b(V)-8
b(aibha)m(v)241 b(Bhandari.)664 b(MV2RM)241 b(Do)s(cumen)m(tation.)788
3553 y(h)m(ttp://www.cse.ucsc.edu/dvlab/m)m(v2rm/,)33
b(June)d(2003.)323 3757 y([Che94])168 b(S.)30 b(Cheng.)41
b(Compiling)30 b(v)m(erilog)i(in)m(to)f(automata,)i(1994.)323
3961 y([DL03a])154 b(Design)266 b(and)f(V)-8 b(eri\014cation)267
b(Lab.)740 b(CHAI.)788 4074 y(h)m(ttp://www.cse.ucsc.edu/dvlab/c)m
(hai,)34 b(2003.)323 4278 y([DL03b])148 b(Design)266
b(and)f(V)-8 b(eri\014cation)267 b(Lab.)740 b(CHAI.)788
4390 y(h)m(ttp://www.cse.ucsc.edu/dvlab/c)m(hai/do)s(cs/h)m(tml,)35
b(2003.)323 4594 y([RA)-8 b(T00])132 b(T.)23 b(A.)g(Henzinger)g(S.)g
(C.)g(Krishnan)e(F.)i(Y.)g(C.)g(Mang)g(S.)f(Qadeer)h(S.)g(K.)f(Ra)5
b(jamani)788 4707 y(R.)33 b(Alur,)g(L.)f(de)h(Alfaro)g(and)f(S.)g(T)-8
b(asira.)48 b Fl(MOCHA)33 b(user)h(manual)p Fr(.)49 b(Univ)m(ersit)m(y)
788 4820 y(of)31 b(Berk)m(eley)-8 b(,)33 b(2000.)1931
5094 y(54)p eop end
%%Page: 55 55
TeXDict begin 55 54 bop 323 -89 a Fr([R)m(GA)551 -122
y Fe(+)611 -89 y Fr(96])62 b(R.)34 b(K.)f(Bra)m(yton,)j(G.)e(D.)g(Hac)m
(h)m(tel,)j(A.)d(Sangio)m(v)-5 b(anni-Vincen)m(telli,)37
b(F.)d(Somenzi,)788 24 y(A.)i(Aziz,)i(S.-T.)e(Cheng,)g(S.)f(Edw)m
(ards,)h(S.)f(Khatri,)i(Y.)f(Kukimoto,)h(A.)f(P)m(ardo,)788
137 y(S.)e(Qadeer,)h(R.)f(K.)f(Ranjan,)i(S.)e(Sarw)m(ary,)i(T.)e(R.)h
(Shiple,)g(G.)h(Sw)m(am)m(y,)g(and)e(T.)788 250 y(Villa.)47
b(VIS:)31 b(a)h(system)g(for)g(v)m(eri\014cation)h(and)e(syn)m(thesis.)
45 b(In)31 b(Ra)5 b(jeev)33 b(Alur)e(and)788 363 y(Thomas)36
b(A.)g(Henzinger,)h(editors,)h Fl(Pr)-5 b(o)g(c)g(e)g(e)g(dings)39
b(of)f(the)g(Eighth)f(International)788 476 y(Confer)-5
b(enc)g(e)40 b(on)g(Computer)g(A)n(ide)-5 b(d)39 b(V)-7
b(eri\014c)i(ation)40 b(CA)-9 b(V)p Fr(,)37 b(v)m(olume)h(1102,)j
(pages)788 589 y(428{432,)34 b(New)d(Brunswic)m(k,)f(NJ,)g(USA,)h(/)g
(1996.)h(Springer)d(V)-8 b(erlag.)323 793 y([ssc])303
b(Sscblif.)41 b(h)m(ttp://www.infeig.unige.c)m(h/lab/do)s(c/h)m
(tml/esterel/sscblif1.h)m(t)q(ml.)1931 5094 y(55)p eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
