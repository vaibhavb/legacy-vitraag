AGRE 1999
~~~~~~~~~
70 questions. 170 minutes.
This file contains 51 questions.
The questions in the begining are easy, and towards the end relatively
tough questions appear.
==============================================================================
Q1. The boolean expression xyz' + xy'z + x'yz + xyz is equivalent to 

(a) xy + yz + zx
(b) x (xor) y (xor) z
(c)
(d)
(e) (xy)' + (yz)' + (zx)' + (xyz)'
==============================================================================
Q2. AVL tree is defined a tree in which the at every node the difference in
heights of the left and the right subtrees is at most 1. Which of the following
is not an AVL tree.
(a) - (e) Five shady choices.. trivial question
==============================================================================
Q3. Given that an AVL tree has 1000 nodes, which of the following is true
(a) All paths are of length less than 100
(b) There is at least one path of length greater than 100
(c) All paths are of length greater than 100
(d) No path is of length less than 100
(e) All paths are of length 99,100,101
==============================================================================
Q4. A regular language is described by the following regular expression
		a*(b+c)*ab*c*
   The number of strings of length N grows as a function of N
(a) linearly
(b) quadratic
(c) cubic
(d) exponential
(e) logarithmic
==============================================================================
Q5. Suppose in the above question we add the restriction that all the a's must
come before all the b's and all the b's must come before all the c's, then the
number of strings of length N grows as a function of N
(a) linearly
(b) quadratic
(c) cubic
(d) exponential
(e) logarithmic
==============================================================================
Q6. Which of the following exhibit locality of reference
    I. sequential processing of arrays
    II. symbol table using hashing
    III. collection of garbage in linked memory

(a) None
(b) I only
(c) I and II
(d) 
(e) I, II and III
==============================================================================
Q7. A binary tree has nodes which have either two children or none. If the
number of nodes in the tree is N and the depth of the tree is d, then the numbe
of leaves in the tree depend on

(a) N only
(b) d only
(c) N and d both, but not on the shape of the tree
(d) N and d and on the shape of the tree
(e) neither N nor d
==============================================================================
Q8. There is a relational schema which has k attributes. The domain of each
attribute consists of exaclty 2 elements. A table is defined as subset of
tuples where in each tuple, a value is defined for each of the k attributes.
The minimum value of k needed for the number of distinct tables to exceed 10^9
is 

(a) 5
(b) 9
(c) 17
(d) 512
(e) 1024
==============================================================================
Q9. Some very shady(trivial) question on the definition of pumping lemma for
the regular languages

suppose Q in set of states, sigma is transition, F set of final states.....
suppose  w = uvy is any string and |u| >= 1, then uv^ny is in L, then which
of the following should hold......

(a) |w| >= |Q|
(b) |w| <= |Q|
(c) |w| <= |F|
(d) |w| >= |sigma|
(e) |w| >= |F|
==============================================================================
Q10. Assuming that P!=NP, which of the following is the most sound way of
deducing that no polynomial time algorithm exists for a given problem Q
(a) reduce satisfiability problem in polynomial time to Q
(b) show that Q is in P
(c) show that Q is in NP
(d) reduce Q to satisfiability problem in polynomial time
(e) reduce any problem in NP to Q
==============================================================================
Q11. Given a parser for the following grammar
    E -> E*E | E+E | id
   with usual rules for associativity and precedence of the operators
   which of the following is an incorrect action by the parser 
(a) E+E   )   shift
(b) E+E   +   reduce
(c) E*E   *   shift
(d) E+E   *   shift
(e) E*E   +   reduce
==============================================================================
Q12. Assuming the above parser, how many reductions will be applied by the
parser, given the input string id+id*id
(a)2
(b)3
(c)5
(d)7
(e)9
==============================================================================
Q13. Which of the following are considered as preemptible resources
   I. main memory
   II. disk space
   III. cpu
(a) I only
(b) I, II and III
(c) I and III
(d) I, II
(e) some shady choices 
==============================================================================
Q14. Which of the following is not done when an interrupt occurs
(a) save the starting address of the executing procedure
(b) save the address of the current instruction
(c) detect the cause of the interrupt
(d) save the values of the registers
(e) make a call to the kernel
==============================================================================
Q15. Which of the following is least true about separetely compiled code
(a) it reduces the amount of code that has to be compiled after and
run-edit-compile cycle.
(b) its benifits reduce if the procedures are declared inline rather than
external.
(c) it allows code to be reused.
(d) it is useful for languages like C which have no inbuilt module
structure.
(e) it facilitates global optimization
==============================================================================
Q16. Newton Raphson method is used to calculate the square root of 2 using the
iteration
    x(i+1) = (x(i) + 2/x(i))/2 
    it the intial value x(0) is chosen as 1.5, then the number of iterations
    needed to get an accuracy of 10^(-14) are

(a) 2
(b) 4
(c) 8
(d) 16
(e) 32
==============================================================================
Q17. Given the following three languages
    L1 = {w|w contains odd number of a's and even number of b's}
    L2 = {w|w contains equal number of a's and b's}
    L3 = {w|w is of the form a^n b^m a^(n-m)}

    I. L1 is regular
    II. L2 is regular
    III. L3 is context free

(a) I only
(b) I and II only
(c) I, II and  III
(d) I and III only
(e) none
==============================================================================
Q18. Which of the following are true:
   I. Set Associative Cache is cheaper than a direct mapped cache.
  II. Set Associative Cache has higher hit ratio than a Fully assoc. cache
 III. Set Assoc. Cache has higher hit ratio than a direct mapped cache

   A. I   B. I,III   C. III   D. I,II  E. I,II,III
==============================================================================
Q19. What is the min number of states required for converting ANY NFA with N     
   states to a DFA: 
   (It was not minimum. It was actually sufficient number of states for any
DFA. Dont know whether minimum is same as sufficient
ALso choice a is N+1 not N. )
(it was min. as in minimum sufficient for ANY NFA. i.e. u can do any NFA
with N states in f(N) steps but not in any g(N) where g(N) < f(N) - kaustubh)
   A. N+1   B. N^2   C. 2^N   D. 2N   E. N!
==============================================================================
Q20. If I want to implement an abstract data structure with an efficient
"find maximum" operation, which of the following am I LEAST LIKELY to
use ?
a) ordered array
b) binary tree
c) hash table
d) heap
e) ordered list
==============================================================================
Q21. CPU time of a program is dependent on which of the following
  I. Amount of secondary memeory 
  II. Clock frequency
  III. Number of instructions executed.
==============================================================================
Q22. 2 level cache. A main memory, 2 caches, 4 processors connected to each 
cache. 1 level hit ratio is 0.95, 2nd level hit ratio is half of the
remaining requests.
If accesing the 1st level cache takes 1 cycle. The 2nd level cache takes 10
cycles and the main memory takes 100 cycles. 
What are the average no. of cycles taken to access an element.
a) 2 b) 4 c) 6 c) 8 d) 100
==============================================================================
Q23. We have the recurrence relation 
	A(n) = 2A(n-1) - 1
What is the order of A(n)?
(a) linearly
(b) quadratic
(c) cubic
(d) exponential
(e) logarithmic
==============================================================================
Q24. First a definition of conflict serializable schdules is given.

Which of the following schedules are conflict serilizable:
I. R1(x)R1(y)W1(x)R2(y)R2(x)W2(x).
II. R2(y)R1(x)R1(y)W1(x)R2(x)W2(x).
III. R2(y)R2(x)R1(x)R1(y)W1(x)W2(x).
==============================================================================
Q25. L is an undecidable language (i.e. not recursive). Which of the
following statements are correct.
I. L is infinte.
II. L contains a recursive language.
III. L' is undecidable.

a) None b) I only  c) I and II d) II and III e) I,II,III
==============================================================================
Q26. Some thing to do with static checking of programs. 
   A static checker checks by assuming that both the conditions in a loop
   can get satisfied. and then uses both paths to check the program.

A static checker checks whether the value of a variable  is defined before
it is used.  In which of the following fragments of code will it give a
warning.
I.
  read(i);
  read(j);
  if( i < j) then x = blah;
  write(x);
II.
  read(i);
  read(j);
  if( i < j) then x = blah else x = blahblah
  write(x);
III.
  read(i);
  read(j);
  if( i < j) then x = blah;
  if(i >= j) then x = blahblah;
  write(x);
==============================================================================
Q27. Which of the following statements of a static definition checker are
FALSE.

a)
b)
c) in the code "if(B) then S1; S". The variables defined at the
begining of S are exactly those defined at the beginning of the if.
d) in the code "if (B) S1 else S2; S". The variables defined at the
begining of S are exactly those defined at the beginning of the if plus
those defined in both S1 and S2.
e) in the code "while (B) S1; S" The variables defined at the begining of
S are exactly those defined at the beginning of the while plus those
defined in S1.
==============================================================================
Q28. Which of the following strings are not generated by the regular exp:
        (a*b)*c
a) aaac
b) abababc
c) bbbc
d) abbbbc
e) one more string
==============================================================================
Q29. Given a node which has 2 pointers. These nodes form a structure which
is not neccesarily connected and it is acyclic. Given that exactly 2N
pointers in this structure are null.

Which is the min. possible no. of nodes?
a) N/2
b) N-1
c) N
d) logN
e) 3

==============================================================================
Q30. If it is given that there is atmost 1 pointer to each node, what is
the max no. of nodes possible.
a) N(N-1)/2
b) 2N
c) 2N-1
d) log ...
e) 2(N-1)
==============================================================================
Q31. Which of the following code will leave a memory leak (memory which is
allocated but has no current pointer).
p,q^: integer
a) q:= nil, new(p), q^ = p
b) q:= nil, new(p), p^ = q
c) q:= nil, new(p), p = q  
d) q:= nil, new(q), q = p 
e) q:= nil, new(q), p =q 
==============================================================================
Q32. Just before the return point of a procedure, the stack pointer
containted the value 2678. After returning it contained the value 2789.
Which is the best possible explanation for this:
a)
b)
c) The os needed space from the stack to compress the heap.
d)
e) An activation record of size 111 was popped of stack.
==============================================================================
Q33. In a system, the frame pointer %fp contains the stack pointer. When a
function is called the following things happen. The %fp is set to the
updated value. The followin information is stored at the fp.
         -4  return address
	 -8  static link
	 -12 any passed parameters followed by local variables.

In pass by refrence the address of the passed variable is stored.

There is a instruction on the system
load %r2, offset(%r1).
This loads into r2, the value at the address pointed to by r1+offset
Consider the following fragment of code:

Procedure P
a:integer
   Procedure Q (var x: integer)  (call by reference)
   x:= x+a  (0)
   end
begin
   Q(a)
end

In this code how is the value of x read in line (0)?

a) load %t0,-12(%fp)
b) load %t0,-8(%fp)
c) load %t0,-12(%fp)
   load %t0,-8(%t0)
d) load %t0,-12(%fp)
   load %t0,0(%t0)
e) load %t0,-8(%fp)
   load %t0,-8(%t0)

==============================================================================
Q34. How is value of a read in line (0)?
a) load %t1,-16(%fp)
b) load %t1,-12(%fp)
c) load %t1,-8(%fp)
   load %t1,-12(%fp)
d) load %t1,-12(%fp)
   load %t1,0(%fp)
e) load %t1,-8(%fp)
   load %t1,-16(%fp)
==============================================================================
Q35. In the following code which no. is nearest to the line printed last.
Here sum and t are single precision and i is an integer.
sum,t: real
i:integer
begin 
    sum = 0.0, t = 1.0;
    for i=1 to 10 do 
    begin
       sum = sum +t;
       t = t*2/i;
       writeln(sum);
    end
end;

a) 5 b) 7 c) 9 d) .. e) ...

==============================================================================
Q36. suppose 2 process share variables and the final result depends upon the 
the order of execution the processes. Which of the follow describe the 
situation best.....
(a) mutual exclusion
(b) busy waiting
(c) race condition
(d) deadlock
(e) ?????
==============================================================================
Q37. suppose there is following scheme.... from the input string, remove the
first 2 bits from left, xor them and then place it to the left and input
and right of output. Continue this till you only 1 bit in the input.
For example,
	input    output
	1110      $
	010       0
	10	  01
	1	  011

now if the input is 10101, then what the output


(a) - (e)

=============================================================================
Q38. in the above question if the output is 101, then what the input

(a) - (e)

=============================================================================

Q39. Two processes have serial execution if instructions are executed in some
order and instructions of a particular process are in order.

Two processes share variable r1 and r2 and have local variable x, y

                            r1 = r2 = 0


	process 1                       process2
	---------                       --------

X  = 1                                  Y  = 1
r1 = Y                                  r2 = X

which of the following is not possible after serial exection of above
process.

(a) r1 = 0, r2 = 0
(b) r1 = 1, r2 = 0
(c) r1 = 1, r2 = 1 
(d) r1 = 0, r2 = 1
(e) All of the above are possible

==============================================================================
Q40. Consider the following piece of code where N is a power of 2 and all the
   logarithms are to the base 2
   
     for (i = 1; i <= log(N); i++)
         for (j = 1; j < N/(2^i); j++) {
	     A[j] = A[2*j - 1] + A[2*j];
	 }
    }

    At the end of the above loop A[1] contains 

(a) A[1] + A[2] ..... + A[log(N)]
(b) A[1]
(c) A[1] + A[2] ..... + A[N]
(d), (e) some shady choices
=============================================================================
Q41. The above code has a running time 

(a) O(N)
(b) O(N*log(N))
(c) O(N*N)
(d) O(log(N))
(e) O(N/log(N))
=============================================================================
Q42. Assume that there are N/2 parallel processors, so that each iteration of
the inner loop is run parallely on these processors. i.e. the ith processor
performs the ith iteration of the inner loop. Now the running time is

(a) O(N)
(b) O(N*log(N))
(c) O(N*N)
(d) O(log(N))
(e) O(N/log(N))
=============================================================================
Q43. Which algo has theta(N^2) worst case complexity and theta(Nlogn)
average case.
1. shell
2. bubble
3. quick
4. insertion.
5. merge
=============================================================================
Q44. Suppose only comparisons are used for sorting. Which of the
following is true.
1. All algos are Theta(NlogN)
2. All algos are omega(NlogN)
3. Some shady choices

=============================================================================
Q45. Consider the following code (dont remeber the actual one)
 with single precision floating point numbs.
	sum = 0.0
	temp = 0.1
	for (i = 0, i<10, i++)
		sum = sum + temp;

	new = 1.0 - sum
	write(new)
It is observed that 0 is not printed. what could be the eroor
1. machine error.
2. no exact representation of 0.1 in binary machine
3. 
4.
5.
=============================================================================
Q46. consider a*x^2 + b*x + c = 0. We want to use the formula 
x = (-b + \root(b^2-4ac))/2a  to solve for x.
consider relative error in the calculation.
which of the folloing gives large relative error.
I. b positive, and b^2 >> 4ac
II. b negative, and b^2 >> 4ac
III. b = c = 0;
a) none.
b) I only
c) II only
d) III only
e) I,II
=============================================================================
Q47. The features X,Y,Z,W denote what architecture of the machine:
a) memory management
b) pipelined
c)
d)
e)
=============================================================================
Q48. In a pipelined architecture it is found that 20% of the intructions
are branch instructions. Out of these 20% are unconditional branches. Out
of the conditional branches about half the branches are taken. If each
intsruction takes one cycle. Each branch instruction causes 1 cycle delay
if it is not taken and a 3 cycle delay if it is taken.  What is the avg.
no. of cycles each instruction takes.?

(a)1.68  (b) 1.2  (c) 1.4 (d) 1.44 (e) 1.32
=============================================================================
Q49. Suppose in a memory if the 8 RAM chips are used to interleave the
memory on the lower bits. Suppose the minor/major times of the memories are
50/200. What is the maximum speed up?
(major time = time between two successive accesses to the same chip)
(minor time = time between two successive accesses to different chips)

a) 2 b) 4 c) 6 d) 8
=============================================================================
Q50. Which of the following is problems does not have a polynomial time
algorithm 
    I. finding the largest simple cycle in the graph
    II.
    III.

(a) - (e) some shady choices
=============================================================================
Q51. Which of the following is true 
    I. If the weights of all the edges in a graph are distinct, then there is a
       unique minimal spanning tree
    II. If a graph has a unique minimal spanning tree, then all the edges must
       have a distinct weight
    III. If e1 and e2 are two edges with same weight and every other edge in
       the graph has weight greater than the weight of these two edges, then
       these two edges must appear in every minimal spanning tree of the graph 
       
(a) - (e) some shady choices
=============================================================================
=============================================================================


