Conflict in state 60 between rule 76 and token PAR resolved as reduce.
Conflict in state 100 between rule 137 and token '+' resolved as reduce.
Conflict in state 100 between rule 137 and token '-' resolved as reduce.
Conflict in state 100 between rule 137 and token '*' resolved as shift.
Conflict in state 100 between rule 137 and token '%' resolved as shift.
Conflict in state 100 between rule 137 and token '/' resolved as shift.
Conflict in state 101 between rule 136 and token '+' resolved as reduce.
Conflict in state 101 between rule 136 and token '-' resolved as reduce.
Conflict in state 101 between rule 136 and token '*' resolved as shift.
Conflict in state 101 between rule 136 and token '%' resolved as shift.
Conflict in state 101 between rule 136 and token '/' resolved as shift.
Conflict in state 102 between rule 138 and token '+' resolved as reduce.
Conflict in state 102 between rule 138 and token '-' resolved as reduce.
Conflict in state 102 between rule 138 and token '*' resolved as reduce.
Conflict in state 102 between rule 138 and token '%' resolved as reduce.
Conflict in state 102 between rule 138 and token '/' resolved as reduce.
Conflict in state 103 between rule 140 and token '+' resolved as reduce.
Conflict in state 103 between rule 140 and token '-' resolved as reduce.
Conflict in state 103 between rule 140 and token '*' resolved as reduce.
Conflict in state 103 between rule 140 and token '%' resolved as reduce.
Conflict in state 103 between rule 140 and token '/' resolved as reduce.
Conflict in state 104 between rule 139 and token '+' resolved as reduce.
Conflict in state 104 between rule 139 and token '-' resolved as reduce.
Conflict in state 104 between rule 139 and token '*' resolved as reduce.
Conflict in state 104 between rule 139 and token '%' resolved as reduce.
Conflict in state 104 between rule 139 and token '/' resolved as reduce.
Conflict in state 199 between rule 127 and token IMPLY resolved as reduce.
Conflict in state 199 between rule 127 and token EQUIV resolved as reduce.
Conflict in state 199 between rule 127 and token AND resolved as reduce.
Conflict in state 199 between rule 127 and token OR resolved as reduce.
Conflict in state 199 between rule 127 and token XOR resolved as reduce.
Conflict in state 199 between rule 127 and token GT resolved as shift.
Conflict in state 199 between rule 127 and token LT resolved as shift.
Conflict in state 199 between rule 127 and token GE resolved as shift.
Conflict in state 199 between rule 127 and token LE resolved as shift.
Conflict in state 199 between rule 127 and token EQ resolved as shift.
Conflict in state 199 between rule 127 and token NEQ resolved as shift.
Conflict in state 199 between rule 127 and token '+' resolved as shift.
Conflict in state 199 between rule 127 and token '-' resolved as shift.
Conflict in state 200 between rule 128 and token IMPLY resolved as reduce.
Conflict in state 200 between rule 128 and token EQUIV resolved as reduce.
Conflict in state 200 between rule 128 and token AND resolved as reduce.
Conflict in state 200 between rule 128 and token OR resolved as reduce.
Conflict in state 200 between rule 128 and token XOR resolved as reduce.
Conflict in state 200 between rule 128 and token GT resolved as shift.
Conflict in state 200 between rule 128 and token LT resolved as shift.
Conflict in state 200 between rule 128 and token GE resolved as shift.
Conflict in state 200 between rule 128 and token LE resolved as shift.
Conflict in state 200 between rule 128 and token EQ resolved as shift.
Conflict in state 200 between rule 128 and token NEQ resolved as shift.
Conflict in state 200 between rule 128 and token '+' resolved as shift.
Conflict in state 200 between rule 128 and token '-' resolved as shift.
Conflict in state 201 between rule 129 and token IMPLY resolved as reduce.
Conflict in state 201 between rule 129 and token EQUIV resolved as reduce.
Conflict in state 201 between rule 129 and token AND resolved as reduce.
Conflict in state 201 between rule 129 and token OR resolved as reduce.
Conflict in state 201 between rule 129 and token XOR resolved as reduce.
Conflict in state 201 between rule 129 and token GT resolved as shift.
Conflict in state 201 between rule 129 and token LT resolved as shift.
Conflict in state 201 between rule 129 and token GE resolved as shift.
Conflict in state 201 between rule 129 and token LE resolved as shift.
Conflict in state 201 between rule 129 and token EQ resolved as shift.
Conflict in state 201 between rule 129 and token NEQ resolved as shift.
Conflict in state 201 between rule 129 and token '+' resolved as shift.
Conflict in state 201 between rule 129 and token '-' resolved as shift.
Conflict in state 202 between rule 131 and token IMPLY resolved as reduce.
Conflict in state 202 between rule 131 and token EQUIV resolved as reduce.
Conflict in state 202 between rule 131 and token AND resolved as reduce.
Conflict in state 202 between rule 131 and token OR resolved as reduce.
Conflict in state 202 between rule 131 and token XOR resolved as reduce.
Conflict in state 202 between rule 131 and token GT resolved as shift.
Conflict in state 202 between rule 131 and token LT resolved as shift.
Conflict in state 202 between rule 131 and token GE resolved as shift.
Conflict in state 202 between rule 131 and token LE resolved as shift.
Conflict in state 202 between rule 131 and token EQ resolved as shift.
Conflict in state 202 between rule 131 and token NEQ resolved as shift.
Conflict in state 202 between rule 131 and token '+' resolved as shift.
Conflict in state 202 between rule 131 and token '-' resolved as shift.
Conflict in state 203 between rule 130 and token IMPLY resolved as reduce.
Conflict in state 203 between rule 130 and token EQUIV resolved as reduce.
Conflict in state 203 between rule 130 and token AND resolved as reduce.
Conflict in state 203 between rule 130 and token OR resolved as reduce.
Conflict in state 203 between rule 130 and token XOR resolved as reduce.
Conflict in state 203 between rule 130 and token GT resolved as reduce.
Conflict in state 203 between rule 130 and token LT resolved as reduce.
Conflict in state 203 between rule 130 and token GE resolved as reduce.
Conflict in state 203 between rule 130 and token LE resolved as reduce.
Conflict in state 203 between rule 130 and token EQ resolved as reduce.
Conflict in state 203 between rule 130 and token NEQ resolved as reduce.
Conflict in state 203 between rule 130 and token '+' resolved as reduce.
Conflict in state 203 between rule 130 and token '-' resolved as reduce.
Conflict in state 228 between rule 124 and token IMPLY resolved as reduce.
Conflict in state 228 between rule 124 and token EQUIV resolved as reduce.
Conflict in state 228 between rule 124 and token AND resolved as shift.
Conflict in state 228 between rule 124 and token OR resolved as shift.
Conflict in state 228 between rule 124 and token XOR resolved as shift.
Conflict in state 228 between rule 124 and token GT resolved as shift.
Conflict in state 228 between rule 124 and token LT resolved as shift.
Conflict in state 228 between rule 124 and token GE resolved as shift.
Conflict in state 228 between rule 124 and token LE resolved as shift.
Conflict in state 228 between rule 124 and token EQ resolved as shift.
Conflict in state 228 between rule 124 and token NEQ resolved as shift.
Conflict in state 228 between rule 124 and token '+' resolved as shift.
Conflict in state 228 between rule 124 and token '-' resolved as shift.
Conflict in state 229 between rule 125 and token IMPLY resolved as reduce.
Conflict in state 229 between rule 125 and token EQUIV resolved as reduce.
Conflict in state 229 between rule 125 and token AND resolved as shift.
Conflict in state 229 between rule 125 and token OR resolved as shift.
Conflict in state 229 between rule 125 and token XOR resolved as shift.
Conflict in state 229 between rule 125 and token GT resolved as shift.
Conflict in state 229 between rule 125 and token LT resolved as shift.
Conflict in state 229 between rule 125 and token GE resolved as shift.
Conflict in state 229 between rule 125 and token LE resolved as shift.
Conflict in state 229 between rule 125 and token EQ resolved as shift.
Conflict in state 229 between rule 125 and token NEQ resolved as shift.
Conflict in state 229 between rule 125 and token '+' resolved as shift.
Conflict in state 229 between rule 125 and token '-' resolved as shift.
Conflict in state 230 between rule 122 and token IMPLY resolved as reduce.
Conflict in state 230 between rule 122 and token EQUIV resolved as reduce.
Conflict in state 230 between rule 122 and token AND resolved as reduce.
Conflict in state 230 between rule 122 and token OR resolved as reduce.
Conflict in state 230 between rule 122 and token XOR resolved as reduce.
Conflict in state 230 between rule 122 and token GT resolved as shift.
Conflict in state 230 between rule 122 and token LT resolved as shift.
Conflict in state 230 between rule 122 and token GE resolved as shift.
Conflict in state 230 between rule 122 and token LE resolved as shift.
Conflict in state 230 between rule 122 and token EQ resolved as shift.
Conflict in state 230 between rule 122 and token NEQ resolved as shift.
Conflict in state 230 between rule 122 and token '+' resolved as shift.
Conflict in state 230 between rule 122 and token '-' resolved as shift.
Conflict in state 231 between rule 123 and token IMPLY resolved as reduce.
Conflict in state 231 between rule 123 and token EQUIV resolved as reduce.
Conflict in state 231 between rule 123 and token AND resolved as reduce.
Conflict in state 231 between rule 123 and token OR resolved as reduce.
Conflict in state 231 between rule 123 and token XOR resolved as reduce.
Conflict in state 231 between rule 123 and token GT resolved as shift.
Conflict in state 231 between rule 123 and token LT resolved as shift.
Conflict in state 231 between rule 123 and token GE resolved as shift.
Conflict in state 231 between rule 123 and token LE resolved as shift.
Conflict in state 231 between rule 123 and token EQ resolved as shift.
Conflict in state 231 between rule 123 and token NEQ resolved as shift.
Conflict in state 231 between rule 123 and token '+' resolved as shift.
Conflict in state 231 between rule 123 and token '-' resolved as shift.
Conflict in state 232 between rule 126 and token IMPLY resolved as reduce.
Conflict in state 232 between rule 126 and token EQUIV resolved as reduce.
Conflict in state 232 between rule 126 and token AND resolved as reduce.
Conflict in state 232 between rule 126 and token OR resolved as reduce.
Conflict in state 232 between rule 126 and token XOR resolved as reduce.
Conflict in state 232 between rule 126 and token GT resolved as shift.
Conflict in state 232 between rule 126 and token LT resolved as shift.
Conflict in state 232 between rule 126 and token GE resolved as shift.
Conflict in state 232 between rule 126 and token LE resolved as shift.
Conflict in state 232 between rule 126 and token EQ resolved as shift.
Conflict in state 232 between rule 126 and token NEQ resolved as shift.
Conflict in state 232 between rule 126 and token '+' resolved as shift.
Conflict in state 232 between rule 126 and token '-' resolved as shift.
Conflict in state 233 between rule 118 and token IMPLY resolved as reduce.
Conflict in state 233 between rule 118 and token EQUIV resolved as reduce.
Conflict in state 233 between rule 118 and token AND resolved as reduce.
Conflict in state 233 between rule 118 and token OR resolved as reduce.
Conflict in state 233 between rule 118 and token XOR resolved as reduce.
Conflict in state 233 between rule 118 and token GT resolved as reduce.
Conflict in state 233 between rule 118 and token LT resolved as reduce.
Conflict in state 233 between rule 118 and token GE resolved as reduce.
Conflict in state 233 between rule 118 and token LE resolved as reduce.
Conflict in state 233 between rule 118 and token EQ resolved as reduce.
Conflict in state 233 between rule 118 and token NEQ resolved as reduce.
Conflict in state 233 between rule 118 and token '+' resolved as shift.
Conflict in state 233 between rule 118 and token '-' resolved as shift.
Conflict in state 234 between rule 119 and token IMPLY resolved as reduce.
Conflict in state 234 between rule 119 and token EQUIV resolved as reduce.
Conflict in state 234 between rule 119 and token AND resolved as reduce.
Conflict in state 234 between rule 119 and token OR resolved as reduce.
Conflict in state 234 between rule 119 and token XOR resolved as reduce.
Conflict in state 234 between rule 119 and token GT resolved as reduce.
Conflict in state 234 between rule 119 and token LT resolved as reduce.
Conflict in state 234 between rule 119 and token GE resolved as reduce.
Conflict in state 234 between rule 119 and token LE resolved as reduce.
Conflict in state 234 between rule 119 and token EQ resolved as reduce.
Conflict in state 234 between rule 119 and token NEQ resolved as reduce.
Conflict in state 234 between rule 119 and token '+' resolved as shift.
Conflict in state 234 between rule 119 and token '-' resolved as shift.
Conflict in state 235 between rule 120 and token IMPLY resolved as reduce.
Conflict in state 235 between rule 120 and token EQUIV resolved as reduce.
Conflict in state 235 between rule 120 and token AND resolved as reduce.
Conflict in state 235 between rule 120 and token OR resolved as reduce.
Conflict in state 235 between rule 120 and token XOR resolved as reduce.
Conflict in state 235 between rule 120 and token GT resolved as reduce.
Conflict in state 235 between rule 120 and token LT resolved as reduce.
Conflict in state 235 between rule 120 and token GE resolved as reduce.
Conflict in state 235 between rule 120 and token LE resolved as reduce.
Conflict in state 235 between rule 120 and token EQ resolved as reduce.
Conflict in state 235 between rule 120 and token NEQ resolved as reduce.
Conflict in state 235 between rule 120 and token '+' resolved as shift.
Conflict in state 235 between rule 120 and token '-' resolved as shift.
Conflict in state 236 between rule 121 and token IMPLY resolved as reduce.
Conflict in state 236 between rule 121 and token EQUIV resolved as reduce.
Conflict in state 236 between rule 121 and token AND resolved as reduce.
Conflict in state 236 between rule 121 and token OR resolved as reduce.
Conflict in state 236 between rule 121 and token XOR resolved as reduce.
Conflict in state 236 between rule 121 and token GT resolved as reduce.
Conflict in state 236 between rule 121 and token LT resolved as reduce.
Conflict in state 236 between rule 121 and token GE resolved as reduce.
Conflict in state 236 between rule 121 and token LE resolved as reduce.
Conflict in state 236 between rule 121 and token EQ resolved as reduce.
Conflict in state 236 between rule 121 and token NEQ resolved as reduce.
Conflict in state 236 between rule 121 and token '+' resolved as shift.
Conflict in state 236 between rule 121 and token '-' resolved as shift.
Conflict in state 237 between rule 116 and token IMPLY resolved as reduce.
Conflict in state 237 between rule 116 and token EQUIV resolved as reduce.
Conflict in state 237 between rule 116 and token AND resolved as reduce.
Conflict in state 237 between rule 116 and token OR resolved as reduce.
Conflict in state 237 between rule 116 and token XOR resolved as reduce.
Conflict in state 237 between rule 116 and token GT resolved as shift.
Conflict in state 237 between rule 116 and token LT resolved as shift.
Conflict in state 237 between rule 116 and token GE resolved as shift.
Conflict in state 237 between rule 116 and token LE resolved as shift.
Conflict in state 237 between rule 116 and token EQ resolved as reduce.
Conflict in state 237 between rule 116 and token NEQ resolved as reduce.
Conflict in state 237 between rule 116 and token '+' resolved as shift.
Conflict in state 237 between rule 116 and token '-' resolved as shift.
Conflict in state 238 between rule 117 and token IMPLY resolved as reduce.
Conflict in state 238 between rule 117 and token EQUIV resolved as reduce.
Conflict in state 238 between rule 117 and token AND resolved as reduce.
Conflict in state 238 between rule 117 and token OR resolved as reduce.
Conflict in state 238 between rule 117 and token XOR resolved as reduce.
Conflict in state 238 between rule 117 and token GT resolved as shift.
Conflict in state 238 between rule 117 and token LT resolved as shift.
Conflict in state 238 between rule 117 and token GE resolved as shift.
Conflict in state 238 between rule 117 and token LE resolved as shift.
Conflict in state 238 between rule 117 and token EQ resolved as reduce.
Conflict in state 238 between rule 117 and token NEQ resolved as reduce.
Conflict in state 238 between rule 117 and token '+' resolved as shift.
Conflict in state 238 between rule 117 and token '-' resolved as shift.
Conflict in state 239 between rule 114 and token IMPLY resolved as reduce.
Conflict in state 239 between rule 114 and token EQUIV resolved as reduce.
Conflict in state 239 between rule 114 and token AND resolved as reduce.
Conflict in state 239 between rule 114 and token OR resolved as reduce.
Conflict in state 239 between rule 114 and token XOR resolved as reduce.
Conflict in state 239 between rule 114 and token GT resolved as reduce.
Conflict in state 239 between rule 114 and token LT resolved as reduce.
Conflict in state 239 between rule 114 and token GE resolved as reduce.
Conflict in state 239 between rule 114 and token LE resolved as reduce.
Conflict in state 239 between rule 114 and token EQ resolved as reduce.
Conflict in state 239 between rule 114 and token NEQ resolved as reduce.
Conflict in state 239 between rule 114 and token '+' resolved as reduce.
Conflict in state 239 between rule 114 and token '-' resolved as reduce.
Conflict in state 240 between rule 115 and token IMPLY resolved as reduce.
Conflict in state 240 between rule 115 and token EQUIV resolved as reduce.
Conflict in state 240 between rule 115 and token AND resolved as reduce.
Conflict in state 240 between rule 115 and token OR resolved as reduce.
Conflict in state 240 between rule 115 and token XOR resolved as reduce.
Conflict in state 240 between rule 115 and token GT resolved as reduce.
Conflict in state 240 between rule 115 and token LT resolved as reduce.
Conflict in state 240 between rule 115 and token GE resolved as reduce.
Conflict in state 240 between rule 115 and token LE resolved as reduce.
Conflict in state 240 between rule 115 and token EQ resolved as reduce.
Conflict in state 240 between rule 115 and token NEQ resolved as reduce.
Conflict in state 240 between rule 115 and token '+' resolved as reduce.
Conflict in state 240 between rule 115 and token '-' resolved as reduce.


Terminals which are not used:

   NEQUIV
   ATOMDEF
   ERROR


Grammar

  Number, Line, Rule
    1 283 @1 -> /* empty */
    2 283 program -> @1 definitions
    3 296 definitions -> definition
    4 297 definitions -> definitions definition
    5 302 definition -> module_definition
    6 303 definition -> type_definition
    7 304 definition -> TOK_LINENO NATNUM ';'
    8 308 definition -> error
    9 318 type_definition -> TYPEDEF declarator ':' enum_const_list
   10 322 type_definition -> TYPEDEF declarator ':' range_declarator
   11 326 type_definition -> TYPEDEF declarator ':' ARRAY arrayindex OF all_types
   12 330 type_definition -> TYPEDEF declarator ':' BITVECTOR int_const
   13 334 type_definition -> TYPEDEF declarator ':' BITVECTOR_N int_const
   14 340 enum_const_list -> '{' declarator_list '}'
   15 352 arrayindex -> declarator
   16 360 arrayindex -> range_declarator
   17 365 arrayindex -> enum_const_list
   18 371 all_types -> EVENT
   19 375 all_types -> enum_const_list
   20 379 all_types -> ARRAY arrayindex OF all_types
   21 383 all_types -> range_declarator
   22 387 all_types -> BITVECTOR NATNUM
   23 391 all_types -> BITVECTOR_N NATNUM
   24 395 all_types -> declarator
   25 411 @2 -> /* empty */
   26 411 atom_header -> CONTROLS var_declarator_list @2 optional_reads optional_awaits
   27 439 atom_keyword -> /* empty */
   28 441 atom_keyword -> LAZY
   29 443 atom_keyword -> EVENT
   30 447 optional_reads -> /* empty */
   31 448 optional_reads -> READS var_declarator_list
   32 457 optional_awaits -> /* empty */
   33 458 optional_awaits -> AWAITS var_declarator_list
   34 467 commands_definition -> init_guarded_commands update_guarded_commands optional_wait_guarded_commands
   35 484 commands_definition -> init_update_guarded_commands optional_wait_guarded_commands
   36 498 commands_definition -> update_guarded_commands optional_wait_guarded_commands
   37 504 commands_definition -> TOK_LINENO NATNUM ';'
   38 511 @3 -> /* empty */
   39 511 init_guarded_commands -> INIT @3 guarded_commands
   40 518 @4 -> /* empty */
   41 518 update_guarded_commands -> UPDATE @4 guarded_commands
   42 525 @5 -> /* empty */
   43 525 optional_wait_guarded_commands -> WAIT @5 guarded_commands
   44 529 optional_wait_guarded_commands -> /* empty */
   45 534 @6 -> /* empty */
   46 534 init_update_guarded_commands -> INIT UPDATE @6 guarded_commands
   47 543 @7 -> /* empty */
   48 543 @8 -> /* empty */
   49 543 module_definition -> MODULE declarator @7 ctlvars_definition @8 atoms_def ENDMODULE
   50 621 module_definition -> declarator ASSIGN module_expression
   51 663 ctlvars_definition -> ctlvar_def
   52 664 ctlvars_definition -> ctlvars_definition ctlvar_def
   53 668 @9 -> /* empty */
   54 668 ctlvar_def -> ctlvar_keyword @9 declarations opt_semicolon
   55 675 atoms_def -> /* empty */
   56 676 atoms_def -> atoms_def atom_def
   57 681 ctlvar_keyword -> PRIVATE
   58 683 ctlvar_keyword -> INTERFACE
   59 685 ctlvar_keyword -> EXTERNAL
   60 689 declarations -> declaration
   61 690 declarations -> declarations ';' declaration
   62 693 declaration -> declarator_list ':' TIMER
   63 720 declaration -> declarator_list ':' all_types
   64 763 @10 -> /* empty */
   65 763 @11 -> /* empty */
   66 763 atom_def -> atom_keyword ATOM @10 atom_header @11 commands_definition ENDATOM
   67 804 @12 -> /* empty */
   68 804 @13 -> /* empty */
   69 804 atom_def -> atom_keyword ATOM declarator @12 atom_header @13 commands_definition ENDATOM
   70 834 atom_def -> TOK_LINENO NATNUM ';'
   71 845 module_expression -> declarator
   72 856 module_expression -> declarator variable_rename
   73 872 module_expression -> HIDE declarator_list IN module_expression ENDHIDE
   74 876 module_expression -> '(' module_expression ')'
   75 880 module_expression -> '(' module_expression ')' variable_rename
   76 886 module_expression -> module_expression PAR module_expression
   77 893 @14 -> /* empty */
   78 893 variable_rename -> '[' renames ']' @14
   79 903 renames -> declarator ASSIGN declarator
   80 916 renames -> declarator ',' renames ',' declarator
   81 930 declarator_list -> declarator
   82 935 declarator_list -> declarator_list ',' declarator
   83 942 var_declarator_list -> var_declarator
   84 948 var_declarator_list -> var_declarator_list ',' var_declarator
   85 958 guarded_commands -> guarded_command
   86 964 guarded_commands -> guarded_commands guarded_command
   87 972 guarded_command -> CHOICE predicate ARROW assignments opt_semicolon
   88 1018 guarded_command -> CHOICE DEFAULT ARROW assignments opt_semicolon
   89 1052 guarded_command -> TOK_LINENO NATNUM ';'
   90 1060 opt_semicolon -> /* empty */
   91 1061 opt_semicolon -> ';'
   92 1066 assignments -> /* empty */
   93 1070 assignments -> assignment
   94 1075 assignments -> assignments ';' assignment
   95 1083 conditional -> IF predicate THEN exp ELSE exp FI
   96 1094 @15 -> /* empty */
   97 1094 assignment -> FORALL declarator declarator '[' declarator ']' @15 ASSIGN exp_or_nondet
   98 1165 @16 -> /* empty */
   99 1165 assignment -> declarator '[' declarator ']' @16 ASSIGN exp_or_nondet
  100 1253 @17 -> /* empty */
  101 1253 assignment -> declarator '[' NATNUM ']' @17 ASSIGN exp_or_nondet
  102 1328 @18 -> /* empty */
  103 1328 assignment -> declarator @18 ASSIGN exp_or_nondet
  104 1357 @19 -> /* empty */
  105 1357 assignment -> declarator @19 LASSIGN NATNUM
  106 1393 assignment -> EVENTSEND
  107 1447 exp_or_nondet -> NONDET
  108 1453 exp_or_nondet -> exp
  109 1459 predicate -> exp
  110 1465 exp -> declarator
  111 1472 exp -> declarator '[' exp ']'
  112 1578 exp -> NATNUM
  113 1585 exp -> BOOL_CONST
  114 1591 exp -> exp '+' exp
  115 1595 exp -> exp '-' exp
  116 1599 exp -> exp EQ exp
  117 1603 exp -> exp NEQ exp
  118 1607 exp -> exp GT exp
  119 1611 exp -> exp LT exp
  120 1615 exp -> exp GE exp
  121 1625 exp -> exp LE exp
  122 1632 exp -> exp AND exp
  123 1634 exp -> exp OR exp
  124 1636 exp -> exp IMPLY exp
  125 1638 exp -> exp EQUIV exp
  126 1640 exp -> exp XOR exp
  127 1642 exp -> AND exp
  128 1644 exp -> OR exp
  129 1646 exp -> XOR exp
  130 1648 exp -> '-' exp
  131 1655 exp -> NOT exp
  132 1661 exp -> '(' exp ')'
  133 1665 exp -> EVENTQUERY
  134 1678 exp -> conditional
  135 1683 int_const -> NATNUM
  136 1688 int_const -> int_const '-' int_const
  137 1693 int_const -> int_const '+' int_const
  138 1698 int_const -> int_const '*' int_const
  139 1702 int_const -> int_const '/' int_const
  140 1706 int_const -> int_const '%' int_const
  141 1710 int_const -> '(' int_const ')'
  142 1717 index_declarator -> declarator '[' declarator ']'
  143 1721 index_declarator -> declarator '[' NATNUM ']'
  144 1726 range_declarator -> '(' NATNUM ELLIPSE int_const ')'
  145 1736 declarator -> IDENTIFIER
  146 1746 declarator -> IN
  147 1752 var_declarator -> index_declarator
  148 1758 var_declarator -> declarator


Terminals, with rules where they appear

$ (-1)
'%' (37) 140
'(' (40) 74 75 132 141 144
')' (41) 74 75 132 141 144
'*' (42) 138
'+' (43) 114 137
',' (44) 80 82 84
'-' (45) 115 130 136
'/' (47) 139
':' (58) 9 10 11 12 13 62 63
';' (59) 7 37 61 70 89 91 94
'[' (91) 78 97 99 101 111 142 143
']' (93) 78 97 99 101 111 142 143
'{' (123) 14
'}' (125) 14
error (256) 8
IDENTIFIER (257) 145
NATNUM (258) 7 22 23 37 70 89 101 105 112 135 143 144
BOOL_CONST (259) 113
EVENTQUERY (260) 133
EVENTSEND (261) 106
MODULE (262) 49
ENDMODULE (263) 49
ATOM (264) 66 69
ENDATOM (265) 66 69
PRIVATE (266) 57
INTERFACE (267) 58
EXTERNAL (268) 59
LAZY (269) 28
EVENT (270) 18 29
READS (271) 31
AWAITS (272) 33
CONTROLS (273) 26
INIT (274) 39 46
UPDATE (275) 41 46
HIDE (276) 73
ENDHIDE (277) 73
IN (278) 73 146
TIMER (279) 62
ARRAY (280) 11 20
BITVECTOR (281) 12 22
BITVECTOR_N (282) 13 23
FORALL (283) 97
IF (284) 95
THEN (285) 95
ELSE (286) 95
FI (287) 95
OF (288) 11 20
TYPEDEF (289) 9 10 11 12 13
DEFAULT (290) 88
NONDET (291) 107
IMPLY (292) 124
EQUIV (293) 125
NEQUIV (294)
CHOICE (295) 87 88
ARROW (296) 87 88
ASSIGN (297) 50 79 97 99 101 103
LASSIGN (298) 105
PAR (299) 76
AND (300) 122 127
OR (301) 123 128
XOR (302) 126 129
NOT (303) 131
GT (304) 118
LT (305) 119
GE (306) 120
LE (307) 121
EQ (308) 116
NEQ (309) 117
UMINUS (310)
ATOMDEF (311)
WAIT (312) 43
TOK_LINENO (313) 7 37 70 89
ELLIPSE (314) 144
ERROR (315)


Nonterminals, with rules where they appear

program (76)
    on left: 2
@1 (77)
    on left: 1, on right: 2
definitions (78)
    on left: 3 4, on right: 2 4
definition (79)
    on left: 5 6 7 8, on right: 3 4
type_definition (80)
    on left: 9 10 11 12 13, on right: 6
enum_const_list (81)
    on left: 14, on right: 9 17 19
arrayindex (82)
    on left: 15 16 17, on right: 11 20
all_types (83)
    on left: 18 19 20 21 22 23 24, on right: 11 20 63
atom_header (84)
    on left: 26, on right: 66 69
@2 (85)
    on left: 25, on right: 26
atom_keyword (86)
    on left: 27 28 29, on right: 66 69
optional_reads (87)
    on left: 30 31, on right: 26
optional_awaits (88)
    on left: 32 33, on right: 26
commands_definition (89)
    on left: 34 35 36 37, on right: 66 69
init_guarded_commands (90)
    on left: 39, on right: 34
@3 (91)
    on left: 38, on right: 39
update_guarded_commands (92)
    on left: 41, on right: 34 36
@4 (93)
    on left: 40, on right: 41
optional_wait_guarded_commands (94)
    on left: 43 44, on right: 34 35 36
@5 (95)
    on left: 42, on right: 43
init_update_guarded_commands (96)
    on left: 46, on right: 35
@6 (97)
    on left: 45, on right: 46
module_definition (98)
    on left: 49 50, on right: 5
@7 (99)
    on left: 47, on right: 49
@8 (100)
    on left: 48, on right: 49
ctlvars_definition (101)
    on left: 51 52, on right: 49 52
ctlvar_def (102)
    on left: 54, on right: 51 52
@9 (103)
    on left: 53, on right: 54
atoms_def (104)
    on left: 55 56, on right: 49 56
ctlvar_keyword (105)
    on left: 57 58 59, on right: 54
declarations (106)
    on left: 60 61, on right: 54 61
declaration (107)
    on left: 62 63, on right: 60 61
atom_def (108)
    on left: 66 69 70, on right: 56
@10 (109)
    on left: 64, on right: 66
@11 (110)
    on left: 65, on right: 66
@12 (111)
    on left: 67, on right: 69
@13 (112)
    on left: 68, on right: 69
module_expression (113)
    on left: 71 72 73 74 75 76, on right: 50 73 74 75 76
variable_rename (114)
    on left: 78, on right: 72 75
@14 (115)
    on left: 77, on right: 78
renames (116)
    on left: 79 80, on right: 78 80
declarator_list (117)
    on left: 81 82, on right: 14 62 63 73 82
var_declarator_list (118)
    on left: 83 84, on right: 26 31 33 84
guarded_commands (119)
    on left: 85 86, on right: 39 41 43 46 86
guarded_command (120)
    on left: 87 88 89, on right: 85 86
opt_semicolon (121)
    on left: 90 91, on right: 54 87 88
assignments (122)
    on left: 92 93 94, on right: 87 88 94
conditional (123)
    on left: 95, on right: 134
assignment (124)
    on left: 97 99 101 103 105 106, on right: 93 94
@15 (125)
    on left: 96, on right: 97
@16 (126)
    on left: 98, on right: 99
@17 (127)
    on left: 100, on right: 101
@18 (128)
    on left: 102, on right: 103
@19 (129)
    on left: 104, on right: 105
exp_or_nondet (130)
    on left: 107 108, on right: 97 99 101 103
predicate (131)
    on left: 109, on right: 87 95
exp (132)
    on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    124 125 126 127 128 129 130 131 132 133 134, on right: 95 108 109
    111 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128
    129 130 131 132
int_const (133)
    on left: 135 136 137 138 139 140 141, on right: 12 13 136 137 138
    139 140 141 144
index_declarator (134)
    on left: 142 143, on right: 147
range_declarator (135)
    on left: 144, on right: 10 16 21
declarator (136)
    on left: 145 146, on right: 9 10 11 12 13 15 24 49 50 69 71 72
    79 80 81 82 97 99 101 103 105 110 111 142 143 148
var_declarator (137)
    on left: 147 148, on right: 83 84


state 0

    $default	reduce using rule 1 (@1)

    program	go to state 278
    @1  	go to state 1



state 1

    program  ->  @1 . definitions   (rule 2)

    error	shift, and go to state 2
    IDENTIFIER	shift, and go to state 3
    MODULE	shift, and go to state 4
    IN  	shift, and go to state 5
    TYPEDEF	shift, and go to state 6
    TOK_LINENO	shift, and go to state 7

    definitions	go to state 8
    definition	go to state 9
    type_definition	go to state 10
    module_definition	go to state 11
    declarator	go to state 12



state 2

    definition  ->  error .   (rule 8)

    $default	reduce using rule 8 (definition)



state 3

    declarator  ->  IDENTIFIER .   (rule 145)

    $default	reduce using rule 145 (declarator)



state 4

    module_definition  ->  MODULE . declarator @7 ctlvars_definition @8 atoms_def ENDMODULE   (rule 49)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 13



state 5

    declarator  ->  IN .   (rule 146)

    $default	reduce using rule 146 (declarator)



state 6

    type_definition  ->  TYPEDEF . declarator ':' enum_const_list   (rule 9)
    type_definition  ->  TYPEDEF . declarator ':' range_declarator   (rule 10)
    type_definition  ->  TYPEDEF . declarator ':' ARRAY arrayindex OF all_types   (rule 11)
    type_definition  ->  TYPEDEF . declarator ':' BITVECTOR int_const   (rule 12)
    type_definition  ->  TYPEDEF . declarator ':' BITVECTOR_N int_const   (rule 13)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 14



state 7

    definition  ->  TOK_LINENO . NATNUM ';'   (rule 7)

    NATNUM	shift, and go to state 15



state 8

    program  ->  @1 definitions .   (rule 2)
    definitions  ->  definitions . definition   (rule 4)

    error	shift, and go to state 2
    IDENTIFIER	shift, and go to state 3
    MODULE	shift, and go to state 4
    IN  	shift, and go to state 5
    TYPEDEF	shift, and go to state 6
    TOK_LINENO	shift, and go to state 7

    $   	reduce using rule 2 (program)
    definition	go to state 16
    type_definition	go to state 10
    module_definition	go to state 11
    declarator	go to state 12



state 9

    definitions  ->  definition .   (rule 3)

    $default	reduce using rule 3 (definitions)



state 10

    definition  ->  type_definition .   (rule 6)

    $default	reduce using rule 6 (definition)



state 11

    definition  ->  module_definition .   (rule 5)

    $default	reduce using rule 5 (definition)



state 12

    module_definition  ->  declarator . ASSIGN module_expression   (rule 50)

    ASSIGN	shift, and go to state 17



state 13

    module_definition  ->  MODULE declarator . @7 ctlvars_definition @8 atoms_def ENDMODULE   (rule 49)

    $default	reduce using rule 47 (@7)

    @7  	go to state 18



state 14

    type_definition  ->  TYPEDEF declarator . ':' enum_const_list   (rule 9)
    type_definition  ->  TYPEDEF declarator . ':' range_declarator   (rule 10)
    type_definition  ->  TYPEDEF declarator . ':' ARRAY arrayindex OF all_types   (rule 11)
    type_definition  ->  TYPEDEF declarator . ':' BITVECTOR int_const   (rule 12)
    type_definition  ->  TYPEDEF declarator . ':' BITVECTOR_N int_const   (rule 13)

    ':' 	shift, and go to state 19



state 15

    definition  ->  TOK_LINENO NATNUM . ';'   (rule 7)

    ';' 	shift, and go to state 20



state 16

    definitions  ->  definitions definition .   (rule 4)

    $default	reduce using rule 4 (definitions)



state 17

    module_definition  ->  declarator ASSIGN . module_expression   (rule 50)

    IDENTIFIER	shift, and go to state 3
    HIDE	shift, and go to state 21
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 22

    module_expression	go to state 23
    declarator	go to state 24



state 18

    module_definition  ->  MODULE declarator @7 . ctlvars_definition @8 atoms_def ENDMODULE   (rule 49)

    PRIVATE	shift, and go to state 25
    INTERFACE	shift, and go to state 26
    EXTERNAL	shift, and go to state 27

    ctlvars_definition	go to state 28
    ctlvar_def	go to state 29
    ctlvar_keyword	go to state 30



state 19

    type_definition  ->  TYPEDEF declarator ':' . enum_const_list   (rule 9)
    type_definition  ->  TYPEDEF declarator ':' . range_declarator   (rule 10)
    type_definition  ->  TYPEDEF declarator ':' . ARRAY arrayindex OF all_types   (rule 11)
    type_definition  ->  TYPEDEF declarator ':' . BITVECTOR int_const   (rule 12)
    type_definition  ->  TYPEDEF declarator ':' . BITVECTOR_N int_const   (rule 13)

    ARRAY	shift, and go to state 31
    BITVECTOR	shift, and go to state 32
    BITVECTOR_N	shift, and go to state 33
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 36
    range_declarator	go to state 37



state 20

    definition  ->  TOK_LINENO NATNUM ';' .   (rule 7)

    $default	reduce using rule 7 (definition)



state 21

    module_expression  ->  HIDE . declarator_list IN module_expression ENDHIDE   (rule 73)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator_list	go to state 38
    declarator	go to state 39



state 22

    module_expression  ->  '(' . module_expression ')'   (rule 74)
    module_expression  ->  '(' . module_expression ')' variable_rename   (rule 75)

    IDENTIFIER	shift, and go to state 3
    HIDE	shift, and go to state 21
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 22

    module_expression	go to state 40
    declarator	go to state 24



state 23

    module_definition  ->  declarator ASSIGN module_expression .   (rule 50)
    module_expression  ->  module_expression . PAR module_expression   (rule 76)

    PAR 	shift, and go to state 41

    $default	reduce using rule 50 (module_definition)



state 24

    module_expression  ->  declarator .   (rule 71)
    module_expression  ->  declarator . variable_rename   (rule 72)

    '[' 	shift, and go to state 42

    $default	reduce using rule 71 (module_expression)

    variable_rename	go to state 43



state 25

    ctlvar_keyword  ->  PRIVATE .   (rule 57)

    $default	reduce using rule 57 (ctlvar_keyword)



state 26

    ctlvar_keyword  ->  INTERFACE .   (rule 58)

    $default	reduce using rule 58 (ctlvar_keyword)



state 27

    ctlvar_keyword  ->  EXTERNAL .   (rule 59)

    $default	reduce using rule 59 (ctlvar_keyword)



state 28

    module_definition  ->  MODULE declarator @7 ctlvars_definition . @8 atoms_def ENDMODULE   (rule 49)
    ctlvars_definition  ->  ctlvars_definition . ctlvar_def   (rule 52)

    PRIVATE	shift, and go to state 25
    INTERFACE	shift, and go to state 26
    EXTERNAL	shift, and go to state 27

    $default	reduce using rule 48 (@8)

    @8  	go to state 44
    ctlvar_def	go to state 45
    ctlvar_keyword	go to state 30



state 29

    ctlvars_definition  ->  ctlvar_def .   (rule 51)

    $default	reduce using rule 51 (ctlvars_definition)



state 30

    ctlvar_def  ->  ctlvar_keyword . @9 declarations opt_semicolon   (rule 54)

    $default	reduce using rule 53 (@9)

    @9  	go to state 46



state 31

    type_definition  ->  TYPEDEF declarator ':' ARRAY . arrayindex OF all_types   (rule 11)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 47
    arrayindex	go to state 48
    range_declarator	go to state 49
    declarator	go to state 50



state 32

    type_definition  ->  TYPEDEF declarator ':' BITVECTOR . int_const   (rule 12)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 53



state 33

    type_definition  ->  TYPEDEF declarator ':' BITVECTOR_N . int_const   (rule 13)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 54



state 34

    range_declarator  ->  '(' . NATNUM ELLIPSE int_const ')'   (rule 144)

    NATNUM	shift, and go to state 55



state 35

    enum_const_list  ->  '{' . declarator_list '}'   (rule 14)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator_list	go to state 56
    declarator	go to state 39



state 36

    type_definition  ->  TYPEDEF declarator ':' enum_const_list .   (rule 9)

    $default	reduce using rule 9 (type_definition)



state 37

    type_definition  ->  TYPEDEF declarator ':' range_declarator .   (rule 10)

    $default	reduce using rule 10 (type_definition)



state 38

    module_expression  ->  HIDE declarator_list . IN module_expression ENDHIDE   (rule 73)
    declarator_list  ->  declarator_list . ',' declarator   (rule 82)

    IN  	shift, and go to state 57
    ',' 	shift, and go to state 58



state 39

    declarator_list  ->  declarator .   (rule 81)

    $default	reduce using rule 81 (declarator_list)



state 40

    module_expression  ->  '(' module_expression . ')'   (rule 74)
    module_expression  ->  '(' module_expression . ')' variable_rename   (rule 75)
    module_expression  ->  module_expression . PAR module_expression   (rule 76)

    ')' 	shift, and go to state 59
    PAR 	shift, and go to state 41



state 41

    module_expression  ->  module_expression PAR . module_expression   (rule 76)

    IDENTIFIER	shift, and go to state 3
    HIDE	shift, and go to state 21
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 22

    module_expression	go to state 60
    declarator	go to state 24



state 42

    variable_rename  ->  '[' . renames ']' @14   (rule 78)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    renames	go to state 61
    declarator	go to state 62



state 43

    module_expression  ->  declarator variable_rename .   (rule 72)

    $default	reduce using rule 72 (module_expression)



state 44

    module_definition  ->  MODULE declarator @7 ctlvars_definition @8 . atoms_def ENDMODULE   (rule 49)

    $default	reduce using rule 55 (atoms_def)

    atoms_def	go to state 63



state 45

    ctlvars_definition  ->  ctlvars_definition ctlvar_def .   (rule 52)

    $default	reduce using rule 52 (ctlvars_definition)



state 46

    ctlvar_def  ->  ctlvar_keyword @9 . declarations opt_semicolon   (rule 54)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarations	go to state 64
    declaration	go to state 65
    declarator_list	go to state 66
    declarator	go to state 39



state 47

    arrayindex  ->  enum_const_list .   (rule 17)

    $default	reduce using rule 17 (arrayindex)



state 48

    type_definition  ->  TYPEDEF declarator ':' ARRAY arrayindex . OF all_types   (rule 11)

    OF  	shift, and go to state 67



state 49

    arrayindex  ->  range_declarator .   (rule 16)

    $default	reduce using rule 16 (arrayindex)



state 50

    arrayindex  ->  declarator .   (rule 15)

    $default	reduce using rule 15 (arrayindex)



state 51

    int_const  ->  NATNUM .   (rule 135)

    $default	reduce using rule 135 (int_const)



state 52

    int_const  ->  '(' . int_const ')'   (rule 141)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 68



state 53

    type_definition  ->  TYPEDEF declarator ':' BITVECTOR int_const .   (rule 12)
    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73

    $default	reduce using rule 12 (type_definition)



state 54

    type_definition  ->  TYPEDEF declarator ':' BITVECTOR_N int_const .   (rule 13)
    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)

    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73

    $default	reduce using rule 13 (type_definition)



state 55

    range_declarator  ->  '(' NATNUM . ELLIPSE int_const ')'   (rule 144)

    ELLIPSE	shift, and go to state 74



state 56

    enum_const_list  ->  '{' declarator_list . '}'   (rule 14)
    declarator_list  ->  declarator_list . ',' declarator   (rule 82)

    '}' 	shift, and go to state 75
    ',' 	shift, and go to state 58



state 57

    module_expression  ->  HIDE declarator_list IN . module_expression ENDHIDE   (rule 73)

    IDENTIFIER	shift, and go to state 3
    HIDE	shift, and go to state 21
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 22

    module_expression	go to state 76
    declarator	go to state 24



state 58

    declarator_list  ->  declarator_list ',' . declarator   (rule 82)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 77



state 59

    module_expression  ->  '(' module_expression ')' .   (rule 74)
    module_expression  ->  '(' module_expression ')' . variable_rename   (rule 75)

    '[' 	shift, and go to state 42

    $default	reduce using rule 74 (module_expression)

    variable_rename	go to state 78



state 60

    module_expression  ->  module_expression . PAR module_expression   (rule 76)
    module_expression  ->  module_expression PAR module_expression .   (rule 76)


    $default	reduce using rule 76 (module_expression)



state 61

    variable_rename  ->  '[' renames . ']' @14   (rule 78)

    ']' 	shift, and go to state 79



state 62

    renames  ->  declarator . ASSIGN declarator   (rule 79)
    renames  ->  declarator . ',' renames ',' declarator   (rule 80)

    ASSIGN	shift, and go to state 80
    ',' 	shift, and go to state 81



state 63

    module_definition  ->  MODULE declarator @7 ctlvars_definition @8 atoms_def . ENDMODULE   (rule 49)
    atoms_def  ->  atoms_def . atom_def   (rule 56)

    ENDMODULE	shift, and go to state 82
    LAZY	shift, and go to state 83
    EVENT	shift, and go to state 84
    TOK_LINENO	shift, and go to state 85

    $default	reduce using rule 27 (atom_keyword)

    atom_keyword	go to state 86
    atom_def	go to state 87



state 64

    ctlvar_def  ->  ctlvar_keyword @9 declarations . opt_semicolon   (rule 54)
    declarations  ->  declarations . ';' declaration   (rule 61)

    ';' 	shift, and go to state 88

    $default	reduce using rule 90 (opt_semicolon)

    opt_semicolon	go to state 89



state 65

    declarations  ->  declaration .   (rule 60)

    $default	reduce using rule 60 (declarations)



state 66

    declaration  ->  declarator_list . ':' TIMER   (rule 62)
    declaration  ->  declarator_list . ':' all_types   (rule 63)
    declarator_list  ->  declarator_list . ',' declarator   (rule 82)

    ':' 	shift, and go to state 90
    ',' 	shift, and go to state 58



state 67

    type_definition  ->  TYPEDEF declarator ':' ARRAY arrayindex OF . all_types   (rule 11)

    IDENTIFIER	shift, and go to state 3
    EVENT	shift, and go to state 91
    IN  	shift, and go to state 5
    ARRAY	shift, and go to state 92
    BITVECTOR	shift, and go to state 93
    BITVECTOR_N	shift, and go to state 94
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 95
    all_types	go to state 96
    range_declarator	go to state 97
    declarator	go to state 98



state 68

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)
    int_const  ->  '(' int_const . ')'   (rule 141)

    ')' 	shift, and go to state 99
    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73



state 69

    int_const  ->  int_const '+' . int_const   (rule 137)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 100



state 70

    int_const  ->  int_const '-' . int_const   (rule 136)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 101



state 71

    int_const  ->  int_const '*' . int_const   (rule 138)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 102



state 72

    int_const  ->  int_const '%' . int_const   (rule 140)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 103



state 73

    int_const  ->  int_const '/' . int_const   (rule 139)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 104



state 74

    range_declarator  ->  '(' NATNUM ELLIPSE . int_const ')'   (rule 144)

    NATNUM	shift, and go to state 51
    '(' 	shift, and go to state 52

    int_const	go to state 105



state 75

    enum_const_list  ->  '{' declarator_list '}' .   (rule 14)

    $default	reduce using rule 14 (enum_const_list)



state 76

    module_expression  ->  HIDE declarator_list IN module_expression . ENDHIDE   (rule 73)
    module_expression  ->  module_expression . PAR module_expression   (rule 76)

    ENDHIDE	shift, and go to state 106
    PAR 	shift, and go to state 41



state 77

    declarator_list  ->  declarator_list ',' declarator .   (rule 82)

    $default	reduce using rule 82 (declarator_list)



state 78

    module_expression  ->  '(' module_expression ')' variable_rename .   (rule 75)

    $default	reduce using rule 75 (module_expression)



state 79

    variable_rename  ->  '[' renames ']' . @14   (rule 78)

    $default	reduce using rule 77 (@14)

    @14 	go to state 107



state 80

    renames  ->  declarator ASSIGN . declarator   (rule 79)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 108



state 81

    renames  ->  declarator ',' . renames ',' declarator   (rule 80)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    renames	go to state 109
    declarator	go to state 62



state 82

    module_definition  ->  MODULE declarator @7 ctlvars_definition @8 atoms_def ENDMODULE .   (rule 49)

    $default	reduce using rule 49 (module_definition)



state 83

    atom_keyword  ->  LAZY .   (rule 28)

    $default	reduce using rule 28 (atom_keyword)



state 84

    atom_keyword  ->  EVENT .   (rule 29)

    $default	reduce using rule 29 (atom_keyword)



state 85

    atom_def  ->  TOK_LINENO . NATNUM ';'   (rule 70)

    NATNUM	shift, and go to state 110



state 86

    atom_def  ->  atom_keyword . ATOM @10 atom_header @11 commands_definition ENDATOM   (rule 66)
    atom_def  ->  atom_keyword . ATOM declarator @12 atom_header @13 commands_definition ENDATOM   (rule 69)

    ATOM	shift, and go to state 111



state 87

    atoms_def  ->  atoms_def atom_def .   (rule 56)

    $default	reduce using rule 56 (atoms_def)



state 88

    declarations  ->  declarations ';' . declaration   (rule 61)
    opt_semicolon  ->  ';' .   (rule 91)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    $default	reduce using rule 91 (opt_semicolon)

    declaration	go to state 112
    declarator_list	go to state 66
    declarator	go to state 39



state 89

    ctlvar_def  ->  ctlvar_keyword @9 declarations opt_semicolon .   (rule 54)

    $default	reduce using rule 54 (ctlvar_def)



state 90

    declaration  ->  declarator_list ':' . TIMER   (rule 62)
    declaration  ->  declarator_list ':' . all_types   (rule 63)

    IDENTIFIER	shift, and go to state 3
    EVENT	shift, and go to state 91
    IN  	shift, and go to state 5
    TIMER	shift, and go to state 113
    ARRAY	shift, and go to state 92
    BITVECTOR	shift, and go to state 93
    BITVECTOR_N	shift, and go to state 94
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 95
    all_types	go to state 114
    range_declarator	go to state 97
    declarator	go to state 98



state 91

    all_types  ->  EVENT .   (rule 18)

    $default	reduce using rule 18 (all_types)



state 92

    all_types  ->  ARRAY . arrayindex OF all_types   (rule 20)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 47
    arrayindex	go to state 115
    range_declarator	go to state 49
    declarator	go to state 50



state 93

    all_types  ->  BITVECTOR . NATNUM   (rule 22)

    NATNUM	shift, and go to state 116



state 94

    all_types  ->  BITVECTOR_N . NATNUM   (rule 23)

    NATNUM	shift, and go to state 117



state 95

    all_types  ->  enum_const_list .   (rule 19)

    $default	reduce using rule 19 (all_types)



state 96

    type_definition  ->  TYPEDEF declarator ':' ARRAY arrayindex OF all_types .   (rule 11)

    $default	reduce using rule 11 (type_definition)



state 97

    all_types  ->  range_declarator .   (rule 21)

    $default	reduce using rule 21 (all_types)



state 98

    all_types  ->  declarator .   (rule 24)

    $default	reduce using rule 24 (all_types)



state 99

    int_const  ->  '(' int_const ')' .   (rule 141)

    $default	reduce using rule 141 (int_const)



state 100

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const '+' int_const .   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)

    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73

    $default	reduce using rule 137 (int_const)



state 101

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const '-' int_const .   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)

    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73

    $default	reduce using rule 136 (int_const)



state 102

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const '*' int_const .   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)


    $default	reduce using rule 138 (int_const)



state 103

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)
    int_const  ->  int_const '%' int_const .   (rule 140)


    $default	reduce using rule 140 (int_const)



state 104

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const '/' int_const .   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)


    $default	reduce using rule 139 (int_const)



state 105

    int_const  ->  int_const . '-' int_const   (rule 136)
    int_const  ->  int_const . '+' int_const   (rule 137)
    int_const  ->  int_const . '*' int_const   (rule 138)
    int_const  ->  int_const . '/' int_const   (rule 139)
    int_const  ->  int_const . '%' int_const   (rule 140)
    range_declarator  ->  '(' NATNUM ELLIPSE int_const . ')'   (rule 144)

    ')' 	shift, and go to state 118
    '+' 	shift, and go to state 69
    '-' 	shift, and go to state 70
    '*' 	shift, and go to state 71
    '%' 	shift, and go to state 72
    '/' 	shift, and go to state 73



state 106

    module_expression  ->  HIDE declarator_list IN module_expression ENDHIDE .   (rule 73)

    $default	reduce using rule 73 (module_expression)



state 107

    variable_rename  ->  '[' renames ']' @14 .   (rule 78)

    $default	reduce using rule 78 (variable_rename)



state 108

    renames  ->  declarator ASSIGN declarator .   (rule 79)

    $default	reduce using rule 79 (renames)



state 109

    renames  ->  declarator ',' renames . ',' declarator   (rule 80)

    ',' 	shift, and go to state 119



state 110

    atom_def  ->  TOK_LINENO NATNUM . ';'   (rule 70)

    ';' 	shift, and go to state 120



state 111

    atom_def  ->  atom_keyword ATOM . @10 atom_header @11 commands_definition ENDATOM   (rule 66)
    atom_def  ->  atom_keyword ATOM . declarator @12 atom_header @13 commands_definition ENDATOM   (rule 69)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    $default	reduce using rule 64 (@10)

    @10 	go to state 121
    declarator	go to state 122



state 112

    declarations  ->  declarations ';' declaration .   (rule 61)

    $default	reduce using rule 61 (declarations)



state 113

    declaration  ->  declarator_list ':' TIMER .   (rule 62)

    $default	reduce using rule 62 (declaration)



state 114

    declaration  ->  declarator_list ':' all_types .   (rule 63)

    $default	reduce using rule 63 (declaration)



state 115

    all_types  ->  ARRAY arrayindex . OF all_types   (rule 20)

    OF  	shift, and go to state 123



state 116

    all_types  ->  BITVECTOR NATNUM .   (rule 22)

    $default	reduce using rule 22 (all_types)



state 117

    all_types  ->  BITVECTOR_N NATNUM .   (rule 23)

    $default	reduce using rule 23 (all_types)



state 118

    range_declarator  ->  '(' NATNUM ELLIPSE int_const ')' .   (rule 144)

    $default	reduce using rule 144 (range_declarator)



state 119

    renames  ->  declarator ',' renames ',' . declarator   (rule 80)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 124



state 120

    atom_def  ->  TOK_LINENO NATNUM ';' .   (rule 70)

    $default	reduce using rule 70 (atom_def)



state 121

    atom_def  ->  atom_keyword ATOM @10 . atom_header @11 commands_definition ENDATOM   (rule 66)

    CONTROLS	shift, and go to state 125

    atom_header	go to state 126



state 122

    atom_def  ->  atom_keyword ATOM declarator . @12 atom_header @13 commands_definition ENDATOM   (rule 69)

    $default	reduce using rule 67 (@12)

    @12 	go to state 127



state 123

    all_types  ->  ARRAY arrayindex OF . all_types   (rule 20)

    IDENTIFIER	shift, and go to state 3
    EVENT	shift, and go to state 91
    IN  	shift, and go to state 5
    ARRAY	shift, and go to state 92
    BITVECTOR	shift, and go to state 93
    BITVECTOR_N	shift, and go to state 94
    '(' 	shift, and go to state 34
    '{' 	shift, and go to state 35

    enum_const_list	go to state 95
    all_types	go to state 128
    range_declarator	go to state 97
    declarator	go to state 98



state 124

    renames  ->  declarator ',' renames ',' declarator .   (rule 80)

    $default	reduce using rule 80 (renames)



state 125

    atom_header  ->  CONTROLS . var_declarator_list @2 optional_reads optional_awaits   (rule 26)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    var_declarator_list	go to state 129
    index_declarator	go to state 130
    declarator	go to state 131
    var_declarator	go to state 132



state 126

    atom_def  ->  atom_keyword ATOM @10 atom_header . @11 commands_definition ENDATOM   (rule 66)

    $default	reduce using rule 65 (@11)

    @11 	go to state 133



state 127

    atom_def  ->  atom_keyword ATOM declarator @12 . atom_header @13 commands_definition ENDATOM   (rule 69)

    CONTROLS	shift, and go to state 125

    atom_header	go to state 134



state 128

    all_types  ->  ARRAY arrayindex OF all_types .   (rule 20)

    $default	reduce using rule 20 (all_types)



state 129

    atom_header  ->  CONTROLS var_declarator_list . @2 optional_reads optional_awaits   (rule 26)
    var_declarator_list  ->  var_declarator_list . ',' var_declarator   (rule 84)

    ',' 	shift, and go to state 135

    $default	reduce using rule 25 (@2)

    @2  	go to state 136



state 130

    var_declarator  ->  index_declarator .   (rule 147)

    $default	reduce using rule 147 (var_declarator)



state 131

    index_declarator  ->  declarator . '[' declarator ']'   (rule 142)
    index_declarator  ->  declarator . '[' NATNUM ']'   (rule 143)
    var_declarator  ->  declarator .   (rule 148)

    '[' 	shift, and go to state 137

    $default	reduce using rule 148 (var_declarator)



state 132

    var_declarator_list  ->  var_declarator .   (rule 83)

    $default	reduce using rule 83 (var_declarator_list)



state 133

    atom_def  ->  atom_keyword ATOM @10 atom_header @11 . commands_definition ENDATOM   (rule 66)

    INIT	shift, and go to state 138
    UPDATE	shift, and go to state 139
    TOK_LINENO	shift, and go to state 140

    commands_definition	go to state 141
    init_guarded_commands	go to state 142
    update_guarded_commands	go to state 143
    init_update_guarded_commands	go to state 144



state 134

    atom_def  ->  atom_keyword ATOM declarator @12 atom_header . @13 commands_definition ENDATOM   (rule 69)

    $default	reduce using rule 68 (@13)

    @13 	go to state 145



state 135

    var_declarator_list  ->  var_declarator_list ',' . var_declarator   (rule 84)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    index_declarator	go to state 130
    declarator	go to state 131
    var_declarator	go to state 146



state 136

    atom_header  ->  CONTROLS var_declarator_list @2 . optional_reads optional_awaits   (rule 26)

    READS	shift, and go to state 147

    $default	reduce using rule 30 (optional_reads)

    optional_reads	go to state 148



state 137

    index_declarator  ->  declarator '[' . declarator ']'   (rule 142)
    index_declarator  ->  declarator '[' . NATNUM ']'   (rule 143)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 149
    IN  	shift, and go to state 5

    declarator	go to state 150



state 138

    init_guarded_commands  ->  INIT . @3 guarded_commands   (rule 39)
    init_update_guarded_commands  ->  INIT . UPDATE @6 guarded_commands   (rule 46)

    UPDATE	shift, and go to state 151

    $default	reduce using rule 38 (@3)

    @3  	go to state 152



state 139

    update_guarded_commands  ->  UPDATE . @4 guarded_commands   (rule 41)

    $default	reduce using rule 40 (@4)

    @4  	go to state 153



state 140

    commands_definition  ->  TOK_LINENO . NATNUM ';'   (rule 37)

    NATNUM	shift, and go to state 154



state 141

    atom_def  ->  atom_keyword ATOM @10 atom_header @11 commands_definition . ENDATOM   (rule 66)

    ENDATOM	shift, and go to state 155



state 142

    commands_definition  ->  init_guarded_commands . update_guarded_commands optional_wait_guarded_commands   (rule 34)

    UPDATE	shift, and go to state 139

    update_guarded_commands	go to state 156



state 143

    commands_definition  ->  update_guarded_commands . optional_wait_guarded_commands   (rule 36)

    WAIT	shift, and go to state 157

    $default	reduce using rule 44 (optional_wait_guarded_commands)

    optional_wait_guarded_commands	go to state 158



state 144

    commands_definition  ->  init_update_guarded_commands . optional_wait_guarded_commands   (rule 35)

    WAIT	shift, and go to state 157

    $default	reduce using rule 44 (optional_wait_guarded_commands)

    optional_wait_guarded_commands	go to state 159



state 145

    atom_def  ->  atom_keyword ATOM declarator @12 atom_header @13 . commands_definition ENDATOM   (rule 69)

    INIT	shift, and go to state 138
    UPDATE	shift, and go to state 139
    TOK_LINENO	shift, and go to state 140

    commands_definition	go to state 160
    init_guarded_commands	go to state 142
    update_guarded_commands	go to state 143
    init_update_guarded_commands	go to state 144



state 146

    var_declarator_list  ->  var_declarator_list ',' var_declarator .   (rule 84)

    $default	reduce using rule 84 (var_declarator_list)



state 147

    optional_reads  ->  READS . var_declarator_list   (rule 31)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    var_declarator_list	go to state 161
    index_declarator	go to state 130
    declarator	go to state 131
    var_declarator	go to state 132



state 148

    atom_header  ->  CONTROLS var_declarator_list @2 optional_reads . optional_awaits   (rule 26)

    AWAITS	shift, and go to state 162

    $default	reduce using rule 32 (optional_awaits)

    optional_awaits	go to state 163



state 149

    index_declarator  ->  declarator '[' NATNUM . ']'   (rule 143)

    ']' 	shift, and go to state 164



state 150

    index_declarator  ->  declarator '[' declarator . ']'   (rule 142)

    ']' 	shift, and go to state 165



state 151

    init_update_guarded_commands  ->  INIT UPDATE . @6 guarded_commands   (rule 46)

    $default	reduce using rule 45 (@6)

    @6  	go to state 166



state 152

    init_guarded_commands  ->  INIT @3 . guarded_commands   (rule 39)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    guarded_commands	go to state 169
    guarded_command	go to state 170



state 153

    update_guarded_commands  ->  UPDATE @4 . guarded_commands   (rule 41)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    guarded_commands	go to state 171
    guarded_command	go to state 170



state 154

    commands_definition  ->  TOK_LINENO NATNUM . ';'   (rule 37)

    ';' 	shift, and go to state 172



state 155

    atom_def  ->  atom_keyword ATOM @10 atom_header @11 commands_definition ENDATOM .   (rule 66)

    $default	reduce using rule 66 (atom_def)



state 156

    commands_definition  ->  init_guarded_commands update_guarded_commands . optional_wait_guarded_commands   (rule 34)

    WAIT	shift, and go to state 157

    $default	reduce using rule 44 (optional_wait_guarded_commands)

    optional_wait_guarded_commands	go to state 173



state 157

    optional_wait_guarded_commands  ->  WAIT . @5 guarded_commands   (rule 43)

    $default	reduce using rule 42 (@5)

    @5  	go to state 174



state 158

    commands_definition  ->  update_guarded_commands optional_wait_guarded_commands .   (rule 36)

    $default	reduce using rule 36 (commands_definition)



state 159

    commands_definition  ->  init_update_guarded_commands optional_wait_guarded_commands .   (rule 35)

    $default	reduce using rule 35 (commands_definition)



state 160

    atom_def  ->  atom_keyword ATOM declarator @12 atom_header @13 commands_definition . ENDATOM   (rule 69)

    ENDATOM	shift, and go to state 175



state 161

    optional_reads  ->  READS var_declarator_list .   (rule 31)
    var_declarator_list  ->  var_declarator_list . ',' var_declarator   (rule 84)

    ',' 	shift, and go to state 135

    $default	reduce using rule 31 (optional_reads)



state 162

    optional_awaits  ->  AWAITS . var_declarator_list   (rule 33)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    var_declarator_list	go to state 176
    index_declarator	go to state 130
    declarator	go to state 131
    var_declarator	go to state 132



state 163

    atom_header  ->  CONTROLS var_declarator_list @2 optional_reads optional_awaits .   (rule 26)

    $default	reduce using rule 26 (atom_header)



state 164

    index_declarator  ->  declarator '[' NATNUM ']' .   (rule 143)

    $default	reduce using rule 143 (index_declarator)



state 165

    index_declarator  ->  declarator '[' declarator ']' .   (rule 142)

    $default	reduce using rule 142 (index_declarator)



state 166

    init_update_guarded_commands  ->  INIT UPDATE @6 . guarded_commands   (rule 46)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    guarded_commands	go to state 177
    guarded_command	go to state 170



state 167

    guarded_command  ->  CHOICE . predicate ARROW assignments opt_semicolon   (rule 87)
    guarded_command  ->  CHOICE . DEFAULT ARROW assignments opt_semicolon   (rule 88)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    DEFAULT	shift, and go to state 182
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    predicate	go to state 190
    exp 	go to state 191
    declarator	go to state 192



state 168

    guarded_command  ->  TOK_LINENO . NATNUM ';'   (rule 89)

    NATNUM	shift, and go to state 193



state 169

    init_guarded_commands  ->  INIT @3 guarded_commands .   (rule 39)
    guarded_commands  ->  guarded_commands . guarded_command   (rule 86)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    $default	reduce using rule 39 (init_guarded_commands)

    guarded_command	go to state 194



state 170

    guarded_commands  ->  guarded_command .   (rule 85)

    $default	reduce using rule 85 (guarded_commands)



state 171

    update_guarded_commands  ->  UPDATE @4 guarded_commands .   (rule 41)
    guarded_commands  ->  guarded_commands . guarded_command   (rule 86)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    $default	reduce using rule 41 (update_guarded_commands)

    guarded_command	go to state 194



state 172

    commands_definition  ->  TOK_LINENO NATNUM ';' .   (rule 37)

    $default	reduce using rule 37 (commands_definition)



state 173

    commands_definition  ->  init_guarded_commands update_guarded_commands optional_wait_guarded_commands .   (rule 34)

    $default	reduce using rule 34 (commands_definition)



state 174

    optional_wait_guarded_commands  ->  WAIT @5 . guarded_commands   (rule 43)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    guarded_commands	go to state 195
    guarded_command	go to state 170



state 175

    atom_def  ->  atom_keyword ATOM declarator @12 atom_header @13 commands_definition ENDATOM .   (rule 69)

    $default	reduce using rule 69 (atom_def)



state 176

    optional_awaits  ->  AWAITS var_declarator_list .   (rule 33)
    var_declarator_list  ->  var_declarator_list . ',' var_declarator   (rule 84)

    ',' 	shift, and go to state 135

    $default	reduce using rule 33 (optional_awaits)



state 177

    init_update_guarded_commands  ->  INIT UPDATE @6 guarded_commands .   (rule 46)
    guarded_commands  ->  guarded_commands . guarded_command   (rule 86)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    $default	reduce using rule 46 (init_update_guarded_commands)

    guarded_command	go to state 194



state 178

    exp  ->  NATNUM .   (rule 112)

    $default	reduce using rule 112 (exp)



state 179

    exp  ->  BOOL_CONST .   (rule 113)

    $default	reduce using rule 113 (exp)



state 180

    exp  ->  EVENTQUERY .   (rule 133)

    $default	reduce using rule 133 (exp)



state 181

    conditional  ->  IF . predicate THEN exp ELSE exp FI   (rule 95)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    predicate	go to state 196
    exp 	go to state 191
    declarator	go to state 192



state 182

    guarded_command  ->  CHOICE DEFAULT . ARROW assignments opt_semicolon   (rule 88)

    ARROW	shift, and go to state 197



state 183

    exp  ->  '(' . exp ')'   (rule 132)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 198
    declarator	go to state 192



state 184

    exp  ->  AND . exp   (rule 127)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 199
    declarator	go to state 192



state 185

    exp  ->  OR . exp   (rule 128)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 200
    declarator	go to state 192



state 186

    exp  ->  XOR . exp   (rule 129)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 201
    declarator	go to state 192



state 187

    exp  ->  NOT . exp   (rule 131)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 202
    declarator	go to state 192



state 188

    exp  ->  '-' . exp   (rule 130)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 203
    declarator	go to state 192



state 189

    exp  ->  conditional .   (rule 134)

    $default	reduce using rule 134 (exp)



state 190

    guarded_command  ->  CHOICE predicate . ARROW assignments opt_semicolon   (rule 87)

    ARROW	shift, and go to state 204



state 191

    predicate  ->  exp .   (rule 109)
    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 109 (predicate)



state 192

    exp  ->  declarator .   (rule 110)
    exp  ->  declarator . '[' exp ']'   (rule 111)

    '[' 	shift, and go to state 218

    $default	reduce using rule 110 (exp)



state 193

    guarded_command  ->  TOK_LINENO NATNUM . ';'   (rule 89)

    ';' 	shift, and go to state 219



state 194

    guarded_commands  ->  guarded_commands guarded_command .   (rule 86)

    $default	reduce using rule 86 (guarded_commands)



state 195

    optional_wait_guarded_commands  ->  WAIT @5 guarded_commands .   (rule 43)
    guarded_commands  ->  guarded_commands . guarded_command   (rule 86)

    CHOICE	shift, and go to state 167
    TOK_LINENO	shift, and go to state 168

    $default	reduce using rule 43 (optional_wait_guarded_commands)

    guarded_command	go to state 194



state 196

    conditional  ->  IF predicate . THEN exp ELSE exp FI   (rule 95)

    THEN	shift, and go to state 220



state 197

    guarded_command  ->  CHOICE DEFAULT ARROW . assignments opt_semicolon   (rule 88)

    IDENTIFIER	shift, and go to state 3
    EVENTSEND	shift, and go to state 221
    IN  	shift, and go to state 5
    FORALL	shift, and go to state 222

    $default	reduce using rule 92 (assignments)

    assignments	go to state 223
    assignment	go to state 224
    declarator	go to state 225



state 198

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  '(' exp . ')'   (rule 132)

    ')' 	shift, and go to state 226
    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217



state 199

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  AND exp .   (rule 127)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 127 (exp)



state 200

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  OR exp .   (rule 128)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 128 (exp)



state 201

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  XOR exp .   (rule 129)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 129 (exp)



state 202

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  NOT exp .   (rule 131)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 131 (exp)



state 203

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  '-' exp .   (rule 130)


    $default	reduce using rule 130 (exp)



state 204

    guarded_command  ->  CHOICE predicate ARROW . assignments opt_semicolon   (rule 87)

    IDENTIFIER	shift, and go to state 3
    EVENTSEND	shift, and go to state 221
    IN  	shift, and go to state 5
    FORALL	shift, and go to state 222

    $default	reduce using rule 92 (assignments)

    assignments	go to state 227
    assignment	go to state 224
    declarator	go to state 225



state 205

    exp  ->  exp IMPLY . exp   (rule 124)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 228
    declarator	go to state 192



state 206

    exp  ->  exp EQUIV . exp   (rule 125)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 229
    declarator	go to state 192



state 207

    exp  ->  exp AND . exp   (rule 122)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 230
    declarator	go to state 192



state 208

    exp  ->  exp OR . exp   (rule 123)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 231
    declarator	go to state 192



state 209

    exp  ->  exp XOR . exp   (rule 126)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 232
    declarator	go to state 192



state 210

    exp  ->  exp GT . exp   (rule 118)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 233
    declarator	go to state 192



state 211

    exp  ->  exp LT . exp   (rule 119)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 234
    declarator	go to state 192



state 212

    exp  ->  exp GE . exp   (rule 120)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 235
    declarator	go to state 192



state 213

    exp  ->  exp LE . exp   (rule 121)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 236
    declarator	go to state 192



state 214

    exp  ->  exp EQ . exp   (rule 116)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 237
    declarator	go to state 192



state 215

    exp  ->  exp NEQ . exp   (rule 117)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 238
    declarator	go to state 192



state 216

    exp  ->  exp '+' . exp   (rule 114)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 239
    declarator	go to state 192



state 217

    exp  ->  exp '-' . exp   (rule 115)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 240
    declarator	go to state 192



state 218

    exp  ->  declarator '[' . exp ']'   (rule 111)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 241
    declarator	go to state 192



state 219

    guarded_command  ->  TOK_LINENO NATNUM ';' .   (rule 89)

    $default	reduce using rule 89 (guarded_command)



state 220

    conditional  ->  IF predicate THEN . exp ELSE exp FI   (rule 95)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 242
    declarator	go to state 192



state 221

    assignment  ->  EVENTSEND .   (rule 106)

    $default	reduce using rule 106 (assignment)



state 222

    assignment  ->  FORALL . declarator declarator '[' declarator ']' @15 ASSIGN exp_or_nondet   (rule 97)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 243



state 223

    guarded_command  ->  CHOICE DEFAULT ARROW assignments . opt_semicolon   (rule 88)
    assignments  ->  assignments . ';' assignment   (rule 94)

    ';' 	shift, and go to state 244

    $default	reduce using rule 90 (opt_semicolon)

    opt_semicolon	go to state 245



state 224

    assignments  ->  assignment .   (rule 93)

    $default	reduce using rule 93 (assignments)



state 225

    assignment  ->  declarator . '[' declarator ']' @16 ASSIGN exp_or_nondet   (rule 99)
    assignment  ->  declarator . '[' NATNUM ']' @17 ASSIGN exp_or_nondet   (rule 101)
    assignment  ->  declarator . @18 ASSIGN exp_or_nondet   (rule 103)
    assignment  ->  declarator . @19 LASSIGN NATNUM   (rule 105)

    '[' 	shift, and go to state 246

    LASSIGN	reduce using rule 104 (@19)
    $default	reduce using rule 102 (@18)
    @18 	go to state 247
    @19 	go to state 248



state 226

    exp  ->  '(' exp ')' .   (rule 132)

    $default	reduce using rule 132 (exp)



state 227

    guarded_command  ->  CHOICE predicate ARROW assignments . opt_semicolon   (rule 87)
    assignments  ->  assignments . ';' assignment   (rule 94)

    ';' 	shift, and go to state 244

    $default	reduce using rule 90 (opt_semicolon)

    opt_semicolon	go to state 249



state 228

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp IMPLY exp .   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 124 (exp)



state 229

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp EQUIV exp .   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 125 (exp)



state 230

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp AND exp .   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 122 (exp)



state 231

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp OR exp .   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 123 (exp)



state 232

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)
    exp  ->  exp XOR exp .   (rule 126)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 126 (exp)



state 233

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp GT exp .   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 118 (exp)



state 234

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp LT exp .   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 119 (exp)



state 235

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp GE exp .   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 120 (exp)



state 236

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp LE exp .   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 121 (exp)



state 237

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp EQ exp .   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 116 (exp)



state 238

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp NEQ exp .   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 117 (exp)



state 239

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp '+' exp .   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)


    $default	reduce using rule 114 (exp)



state 240

    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp '-' exp .   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)


    $default	reduce using rule 115 (exp)



state 241

    exp  ->  declarator '[' exp . ']'   (rule 111)
    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    ']' 	shift, and go to state 250
    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217



state 242

    conditional  ->  IF predicate THEN exp . ELSE exp FI   (rule 95)
    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    ELSE	shift, and go to state 251
    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217



state 243

    assignment  ->  FORALL declarator . declarator '[' declarator ']' @15 ASSIGN exp_or_nondet   (rule 97)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 252



state 244

    opt_semicolon  ->  ';' .   (rule 91)
    assignments  ->  assignments ';' . assignment   (rule 94)

    IDENTIFIER	shift, and go to state 3
    EVENTSEND	shift, and go to state 221
    IN  	shift, and go to state 5
    FORALL	shift, and go to state 222

    $default	reduce using rule 91 (opt_semicolon)

    assignment	go to state 253
    declarator	go to state 225



state 245

    guarded_command  ->  CHOICE DEFAULT ARROW assignments opt_semicolon .   (rule 88)

    $default	reduce using rule 88 (guarded_command)



state 246

    assignment  ->  declarator '[' . declarator ']' @16 ASSIGN exp_or_nondet   (rule 99)
    assignment  ->  declarator '[' . NATNUM ']' @17 ASSIGN exp_or_nondet   (rule 101)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 254
    IN  	shift, and go to state 5

    declarator	go to state 255



state 247

    assignment  ->  declarator @18 . ASSIGN exp_or_nondet   (rule 103)

    ASSIGN	shift, and go to state 256



state 248

    assignment  ->  declarator @19 . LASSIGN NATNUM   (rule 105)

    LASSIGN	shift, and go to state 257



state 249

    guarded_command  ->  CHOICE predicate ARROW assignments opt_semicolon .   (rule 87)

    $default	reduce using rule 87 (guarded_command)



state 250

    exp  ->  declarator '[' exp ']' .   (rule 111)

    $default	reduce using rule 111 (exp)



state 251

    conditional  ->  IF predicate THEN exp ELSE . exp FI   (rule 95)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp 	go to state 258
    declarator	go to state 192



state 252

    assignment  ->  FORALL declarator declarator . '[' declarator ']' @15 ASSIGN exp_or_nondet   (rule 97)

    '[' 	shift, and go to state 259



state 253

    assignments  ->  assignments ';' assignment .   (rule 94)

    $default	reduce using rule 94 (assignments)



state 254

    assignment  ->  declarator '[' NATNUM . ']' @17 ASSIGN exp_or_nondet   (rule 101)

    ']' 	shift, and go to state 260



state 255

    assignment  ->  declarator '[' declarator . ']' @16 ASSIGN exp_or_nondet   (rule 99)

    ']' 	shift, and go to state 261



state 256

    assignment  ->  declarator @18 ASSIGN . exp_or_nondet   (rule 103)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    NONDET	shift, and go to state 262
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp_or_nondet	go to state 263
    exp 	go to state 264
    declarator	go to state 192



state 257

    assignment  ->  declarator @19 LASSIGN . NATNUM   (rule 105)

    NATNUM	shift, and go to state 265



state 258

    conditional  ->  IF predicate THEN exp ELSE exp . FI   (rule 95)
    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    FI  	shift, and go to state 266
    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217



state 259

    assignment  ->  FORALL declarator declarator '[' . declarator ']' @15 ASSIGN exp_or_nondet   (rule 97)

    IDENTIFIER	shift, and go to state 3
    IN  	shift, and go to state 5

    declarator	go to state 267



state 260

    assignment  ->  declarator '[' NATNUM ']' . @17 ASSIGN exp_or_nondet   (rule 101)

    $default	reduce using rule 100 (@17)

    @17 	go to state 268



state 261

    assignment  ->  declarator '[' declarator ']' . @16 ASSIGN exp_or_nondet   (rule 99)

    $default	reduce using rule 98 (@16)

    @16 	go to state 269



state 262

    exp_or_nondet  ->  NONDET .   (rule 107)

    $default	reduce using rule 107 (exp_or_nondet)



state 263

    assignment  ->  declarator @18 ASSIGN exp_or_nondet .   (rule 103)

    $default	reduce using rule 103 (assignment)



state 264

    exp_or_nondet  ->  exp .   (rule 108)
    exp  ->  exp . '+' exp   (rule 114)
    exp  ->  exp . '-' exp   (rule 115)
    exp  ->  exp . EQ exp   (rule 116)
    exp  ->  exp . NEQ exp   (rule 117)
    exp  ->  exp . GT exp   (rule 118)
    exp  ->  exp . LT exp   (rule 119)
    exp  ->  exp . GE exp   (rule 120)
    exp  ->  exp . LE exp   (rule 121)
    exp  ->  exp . AND exp   (rule 122)
    exp  ->  exp . OR exp   (rule 123)
    exp  ->  exp . IMPLY exp   (rule 124)
    exp  ->  exp . EQUIV exp   (rule 125)
    exp  ->  exp . XOR exp   (rule 126)

    IMPLY	shift, and go to state 205
    EQUIV	shift, and go to state 206
    AND 	shift, and go to state 207
    OR  	shift, and go to state 208
    XOR 	shift, and go to state 209
    GT  	shift, and go to state 210
    LT  	shift, and go to state 211
    GE  	shift, and go to state 212
    LE  	shift, and go to state 213
    EQ  	shift, and go to state 214
    NEQ 	shift, and go to state 215
    '+' 	shift, and go to state 216
    '-' 	shift, and go to state 217

    $default	reduce using rule 108 (exp_or_nondet)



state 265

    assignment  ->  declarator @19 LASSIGN NATNUM .   (rule 105)

    $default	reduce using rule 105 (assignment)



state 266

    conditional  ->  IF predicate THEN exp ELSE exp FI .   (rule 95)

    $default	reduce using rule 95 (conditional)



state 267

    assignment  ->  FORALL declarator declarator '[' declarator . ']' @15 ASSIGN exp_or_nondet   (rule 97)

    ']' 	shift, and go to state 270



state 268

    assignment  ->  declarator '[' NATNUM ']' @17 . ASSIGN exp_or_nondet   (rule 101)

    ASSIGN	shift, and go to state 271



state 269

    assignment  ->  declarator '[' declarator ']' @16 . ASSIGN exp_or_nondet   (rule 99)

    ASSIGN	shift, and go to state 272



state 270

    assignment  ->  FORALL declarator declarator '[' declarator ']' . @15 ASSIGN exp_or_nondet   (rule 97)

    $default	reduce using rule 96 (@15)

    @15 	go to state 273



state 271

    assignment  ->  declarator '[' NATNUM ']' @17 ASSIGN . exp_or_nondet   (rule 101)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    NONDET	shift, and go to state 262
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp_or_nondet	go to state 274
    exp 	go to state 264
    declarator	go to state 192



state 272

    assignment  ->  declarator '[' declarator ']' @16 ASSIGN . exp_or_nondet   (rule 99)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    NONDET	shift, and go to state 262
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp_or_nondet	go to state 275
    exp 	go to state 264
    declarator	go to state 192



state 273

    assignment  ->  FORALL declarator declarator '[' declarator ']' @15 . ASSIGN exp_or_nondet   (rule 97)

    ASSIGN	shift, and go to state 276



state 274

    assignment  ->  declarator '[' NATNUM ']' @17 ASSIGN exp_or_nondet .   (rule 101)

    $default	reduce using rule 101 (assignment)



state 275

    assignment  ->  declarator '[' declarator ']' @16 ASSIGN exp_or_nondet .   (rule 99)

    $default	reduce using rule 99 (assignment)



state 276

    assignment  ->  FORALL declarator declarator '[' declarator ']' @15 ASSIGN . exp_or_nondet   (rule 97)

    IDENTIFIER	shift, and go to state 3
    NATNUM	shift, and go to state 178
    BOOL_CONST	shift, and go to state 179
    EVENTQUERY	shift, and go to state 180
    IN  	shift, and go to state 5
    IF  	shift, and go to state 181
    NONDET	shift, and go to state 262
    '(' 	shift, and go to state 183
    AND 	shift, and go to state 184
    OR  	shift, and go to state 185
    XOR 	shift, and go to state 186
    NOT 	shift, and go to state 187
    '-' 	shift, and go to state 188

    conditional	go to state 189
    exp_or_nondet	go to state 277
    exp 	go to state 264
    declarator	go to state 192



state 277

    assignment  ->  FORALL declarator declarator '[' declarator ']' @15 ASSIGN exp_or_nondet .   (rule 97)

    $default	reduce using rule 97 (assignment)



state 278

    $   	go to state 279



state 279

    $   	go to state 280



state 280

    $default	accept


